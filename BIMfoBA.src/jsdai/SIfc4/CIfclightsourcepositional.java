/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLightSourcePositional

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclightsourcepositional extends CIfclightsource implements EIfclightsourcepositional {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclightsourcepositional.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	// Name: protected String a0;   Name - java inheritance - STRING
	// LightColour: protected Object a1;   LightColour - java inheritance - ENTITY IfcColourRgb
	// AmbientIntensity: protected double a2;   AmbientIntensity - java inheritance - REAL
	// Intensity: protected double a3;   Intensity - java inheritance - REAL
	protected Object a4; // Position - current entity - ENTITY IfcCartesianPoint
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a5; // Radius - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // ConstantAttenuation - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a7; // DistanceAttenuation - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a8; // QuadricAttenuation - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// LightColour - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// AmbientIntensity - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected double a2;
	// Intensity - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected double a3;
	// Position - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	// Radius - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;
	// ConstantAttenuation - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;
	// DistanceAttenuation - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a7;
	// QuadricAttenuation - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected double a8;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4576=EXPLICIT_ATTRIBUTE('Name',#4574,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4577=EXPLICIT_ATTRIBUTE('LightColour',#4574,1,#3650,$,.F.);
	//<01> generating methods for consolidated attribute:  LightColour
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): LightColour, base type: entity IfcColourRgb
	public static int usedinLightcolour(EIfclightsource type, EIfccolourrgb instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #4578=EXPLICIT_ATTRIBUTE('AmbientIntensity',#4574,2,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  AmbientIntensity
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4579=EXPLICIT_ATTRIBUTE('Intensity',#4574,3,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  Intensity
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4595=EXPLICIT_ATTRIBUTE('Position',#4593,0,#3562,$,.F.);
	//<01> generating methods for consolidated attribute:  Position
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Position, base type: entity IfcCartesianPoint
	public static int usedinPosition(EIfclightsourcepositional type, EIfccartesianpoint instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testPosition(EIfclightsourcepositional type) throws SdaiException {
		return test_instance(a4);
	}
	public EIfccartesianpoint getPosition(EIfclightsourcepositional type) throws SdaiException {
		return (EIfccartesianpoint)get_instance(a4);
	}
	public void setPosition(EIfclightsourcepositional type, EIfccartesianpoint value) throws SdaiException {
		a4 = set_instance(a4, value);
	}
	public void unsetPosition(EIfclightsourcepositional type) throws SdaiException {
		a4 = unset_instance(a4);
	}
	public static jsdai.dictionary.EAttribute attributePosition(EIfclightsourcepositional type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4596=EXPLICIT_ATTRIBUTE('Radius',#4593,1,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  Radius
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Radius, base type: REAL
	public boolean testRadius(EIfclightsourcepositional type) throws SdaiException {
		return test_double(a5);
	}
	public double getRadius(EIfclightsourcepositional type) throws SdaiException {
		return get_double(a5);
	}
	public void setRadius(EIfclightsourcepositional type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetRadius(EIfclightsourcepositional type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeRadius(EIfclightsourcepositional type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4597=EXPLICIT_ATTRIBUTE('ConstantAttenuation',#4593,2,#2623,$,.F.);
	//<01> generating methods for consolidated attribute:  ConstantAttenuation
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ConstantAttenuation, base type: REAL
	public boolean testConstantattenuation(EIfclightsourcepositional type) throws SdaiException {
		return test_double(a6);
	}
	public double getConstantattenuation(EIfclightsourcepositional type) throws SdaiException {
		return get_double(a6);
	}
	public void setConstantattenuation(EIfclightsourcepositional type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetConstantattenuation(EIfclightsourcepositional type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeConstantattenuation(EIfclightsourcepositional type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4598=EXPLICIT_ATTRIBUTE('DistanceAttenuation',#4593,3,#2623,$,.F.);
	//<01> generating methods for consolidated attribute:  DistanceAttenuation
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: DistanceAttenuation, base type: REAL
	public boolean testDistanceattenuation(EIfclightsourcepositional type) throws SdaiException {
		return test_double(a7);
	}
	public double getDistanceattenuation(EIfclightsourcepositional type) throws SdaiException {
		return get_double(a7);
	}
	public void setDistanceattenuation(EIfclightsourcepositional type, double value) throws SdaiException {
		a7 = set_double(value);
	}
	public void unsetDistanceattenuation(EIfclightsourcepositional type) throws SdaiException {
		a7 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeDistanceattenuation(EIfclightsourcepositional type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4599=EXPLICIT_ATTRIBUTE('QuadricAttenuation',#4593,4,#2623,$,.F.);
	//<01> generating methods for consolidated attribute:  QuadricAttenuation
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: QuadricAttenuation, base type: REAL
	public boolean testQuadricattenuation(EIfclightsourcepositional type) throws SdaiException {
		return test_double(a8);
	}
	public double getQuadricattenuation(EIfclightsourcepositional type) throws SdaiException {
		return get_double(a8);
	}
	public void setQuadricattenuation(EIfclightsourcepositional type, double value) throws SdaiException {
		a8 = set_double(value);
	}
	public void unsetQuadricattenuation(EIfclightsourcepositional type) throws SdaiException {
		a8 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeQuadricattenuation(EIfclightsourcepositional type) throws SdaiException {
		return a8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_instance(a1);
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = unset_instance(a4);
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = Double.NaN;
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getInstance(1, this, a1$);
		a2 = av.entityValues[1].getDouble(2);
		a3 = av.entityValues[1].getDouble(3);
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getDouble(1);
		a6 = av.entityValues[2].getDouble(2);
		a7 = av.entityValues[2].getDouble(3);
		a8 = av.entityValues[2].getDouble(4);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_instance(a1);
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = unset_instance(a4);
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = Double.NaN;
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getInstance(1, this, a1$);
		a2 = av.entityValues[1].getDouble(2);
		a3 = av.entityValues[1].getDouble(3);
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getDouble(1);
		a6 = av.entityValues[2].getDouble(2);
		a7 = av.entityValues[2].getDouble(3);
		a8 = av.entityValues[2].getDouble(4);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcLightSource
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setInstance(1, a1);
		av.entityValues[1].setDouble(2, a2);
		av.entityValues[1].setDouble(3, a3);
		// partial entity: IfcLightSourcePositional
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setDouble(1, a5);
		av.entityValues[2].setDouble(2, a6);
		av.entityValues[2].setDouble(3, a7);
		av.entityValues[2].setDouble(4, a8);
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcLightSource
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setInstance(1, a1);
		av.entityValues[1].setDouble(2, a2);
		av.entityValues[1].setDouble(3, a3);
		// partial entity: IfcLightSourcePositional
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setDouble(1, a5);
		av.entityValues[2].setDouble(2, a6);
		av.entityValues[2].setDouble(3, a7);
		av.entityValues[2].setDouble(4, a8);
		// partial entity: IfcRepresentationItem
	}
}
