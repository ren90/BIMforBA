/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRoundedRectangleProfileDef

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcroundedrectangleprofiledef extends CIfcrectangleprofiledef implements EIfcroundedrectangleprofiledef {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcroundedrectangleprofiledef.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// ProfileType: protected int a0;   ProfileType - java inheritance - ENUMERATION IfcProfileTypeEnum
	// ProfileName: protected String a1;   ProfileName - java inheritance - STRING
	// HasExternalReference: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcProfileProperties
	// Position: protected Object a2;   Position - java inheritance - ENTITY IfcAxis2Placement2D
	// XDim: protected double a3;   XDim - java inheritance - REAL
	// YDim: protected double a4;   YDim - java inheritance - REAL
	protected double a5; // RoundingRadius - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// ProfileType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected int a0;
	// ProfileName - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// HasExternalReference - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Position - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// XDim - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected double a3;
	// YDim - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected double a4;
	// RoundingRadius - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5070=EXPLICIT_ATTRIBUTE('ProfileType',#5068,0,#2963,$,.F.);
	//<01> generating methods for consolidated attribute:  ProfileType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5071=EXPLICIT_ATTRIBUTE('ProfileName',#5068,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ProfileName
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5072=INVERSE_ATTRIBUTE('HasExternalReference',#5068,0,#4231,$,#4234,#8892,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReference
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5073=INVERSE_ATTRIBUTE('HasProperties',#5068,1,#5074,$,#5076,#8894,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4870=EXPLICIT_ATTRIBUTE('Position',#4868,0,#3378,$,.T.);
	//<01> generating methods for consolidated attribute:  Position
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Position, base type: entity IfcAxis2Placement2D
	public static int usedinPosition(EIfcparameterizedprofiledef type, EIfcaxis2placement2d instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #5250=EXPLICIT_ATTRIBUTE('XDim',#5248,0,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  XDim
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5251=EXPLICIT_ATTRIBUTE('YDim',#5248,1,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  YDim
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5624=EXPLICIT_ATTRIBUTE('RoundingRadius',#5622,0,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  RoundingRadius
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: RoundingRadius, base type: REAL
	public boolean testRoundingradius(EIfcroundedrectangleprofiledef type) throws SdaiException {
		return test_double(a5);
	}
	public double getRoundingradius(EIfcroundedrectangleprofiledef type) throws SdaiException {
		return get_double(a5);
	}
	public void setRoundingradius(EIfcroundedrectangleprofiledef type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetRoundingradius(EIfcroundedrectangleprofiledef type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeRoundingradius(EIfcroundedrectangleprofiledef type) throws SdaiException {
		return a5$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			return;
		}
		a2 = av.entityValues[0].getInstance(0, this, a2$);
		a0 = av.entityValues[1].getEnumeration(0, a0$);
		a1 = av.entityValues[1].getString(1);
		a3 = av.entityValues[2].getDouble(0);
		a4 = av.entityValues[2].getDouble(1);
		a5 = av.entityValues[3].getDouble(0);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			return;
		}
		a2 = av.entityValues[0].getInstance(0, this, a2$);
		a0 = av.entityValues[1].getEnumeration(0, a0$);
		a1 = av.entityValues[1].getString(1);
		a3 = av.entityValues[2].getDouble(0);
		a4 = av.entityValues[2].getDouble(1);
		a5 = av.entityValues[3].getDouble(0);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[0].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[1].setEnumeration(0, a0, a0$);
		av.entityValues[1].setString(1, a1);
		// partial entity: IfcRectangleProfileDef
		av.entityValues[2].setDouble(0, a3);
		av.entityValues[2].setDouble(1, a4);
		// partial entity: IfcRoundedRectangleProfileDef
		av.entityValues[3].setDouble(0, a5);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[0].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[1].setEnumeration(0, a0, a0$);
		av.entityValues[1].setString(1, a1);
		// partial entity: IfcRectangleProfileDef
		av.entityValues[2].setDouble(0, a3);
		av.entityValues[2].setDouble(1, a4);
		// partial entity: IfcRoundedRectangleProfileDef
		av.entityValues[3].setDouble(0, a5);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcroundedrectangleprofiledefValidradius(SdaiContext _context) throws SdaiException {
	






		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a5$)), Value.alloc(ExpressTypes.NUMBER_TYPE).divide(_context, Value.alloc(jsdai.SIfc4.CIfcroundedrectangleprofiledef.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcrectangleprofiledef.class).getAttribute(jsdai.SIfc4.CIfcrectangleprofiledef.attributeXdim(null), _context), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 2.0))), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a5$)), Value.alloc(ExpressTypes.NUMBER_TYPE).divide(_context, Value.alloc(jsdai.SIfc4.CIfcroundedrectangleprofiledef.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcrectangleprofiledef.class).getAttribute(jsdai.SIfc4.CIfcrectangleprofiledef.attributeYdim(null), _context), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 2.0))))).getLogical());
	}
}
