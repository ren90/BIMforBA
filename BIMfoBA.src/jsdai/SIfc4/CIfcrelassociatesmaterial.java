/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRelAssociatesMaterial

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrelassociatesmaterial extends CIfcrelassociates implements EIfcrelassociatesmaterial {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrelassociatesmaterial.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// RelatedObjects: protected AIfcdefinitionselect a4;   RelatedObjects - java inheritance - SET OF SELECT
	protected Object a5; // RelatingMaterial - current entity - SELECT IfcMaterialSelect
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// RelatedObjects - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected AIfcdefinitionselect a4;
	// RelatingMaterial - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected Object a5;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a5 == old) {
			a5 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a5 == old) {
			a5 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5377=EXPLICIT_ATTRIBUTE('RelatedObjects',#5375,0,#7082,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatedObjects
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: RelatedObjects, base type: SET OF SELECT
	public static int usedinRelatedobjects(EIfcrelassociates type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	//going through all the attributes: #5396=EXPLICIT_ATTRIBUTE('RelatingMaterial',#5394,0,#3161,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatingMaterial
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: RelatingMaterial
	public static int usedinRelatingmaterial(EIfcrelassociatesmaterial type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a5$, domain, result);
	}
	public boolean testRelatingmaterial(EIfcrelassociatesmaterial type) throws SdaiException {
		return test_instance(a5);
	}

	public EEntity getRelatingmaterial(EIfcrelassociatesmaterial type) throws SdaiException { // case 1
		return get_instance_select(a5);
	}

	public void setRelatingmaterial(EIfcrelassociatesmaterial type, EEntity value) throws SdaiException { // case 1
		a5 = set_instance(a5, value);
	}

	public void unsetRelatingmaterial(EIfcrelassociatesmaterial type) throws SdaiException {
		a5 = unset_instance(a5);
	}

	public static jsdai.dictionary.EAttribute attributeRelatingmaterial(EIfcrelassociatesmaterial type) throws SdaiException {
		return a5$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			a5 = unset_instance(a5);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = (AIfcdefinitionselect)av.entityValues[0].getInstanceAggregate(0, a4$, this);
		a5 = av.entityValues[1].getInstance(0, this, a5$);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			a5 = unset_instance(a5);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = (AIfcdefinitionselect)av.entityValues[0].getInstanceAggregate(0, a4$, this);
		a5 = av.entityValues[1].getInstance(0, this, a5$);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelAssociates
		av.entityValues[0].setInstanceAggregate(0, a4);
		// partial entity: IfcRelAssociatesMaterial
		av.entityValues[1].setInstance(0, a5);
		// partial entity: IfcRelationship
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelAssociates
		av.entityValues[0].setInstanceAggregate(0, a4);
		// partial entity: IfcRelAssociatesMaterial
		av.entityValues[1].setInstance(0, a5);
		// partial entity: IfcRelationship
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcrelassociatesmaterialAllowedelements(SdaiContext _context) throws SdaiException {
	



									Value _internal_aggregate_source231 = Value.alloc(jsdai.SIfc4.CIfcrelassociatesmaterial.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcrelassociates.class).getAttribute(jsdai.SIfc4.CIfcrelassociates.attributeRelatedobjects(null), _context);
									Value _result229 = Value.alloc(_internal_aggregate_source231).create();
									if (_internal_aggregate_source231.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i230 = 1; _i230 <= _internal_aggregate_source231.getMemberCount(); _i230++) {
											Value _implicit_55_temp = _internal_aggregate_source231.getByIndex(_i230);
									
																	Value _elements227 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCELEMENT", "IFC4"));
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCELEMENTTYPE", "IFC4"));
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCWINDOWSTYLE", "IFC4"));
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCDOORSTYLE", "IFC4"));
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSTRUCTURALMEMBER", "IFC4"));
																	_elements227.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCPORT", "IFC4"));
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(Value.alloc().mulOrIntersect(_context, _implicit_55_temp.typeOfV(_context), _elements227)), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).getLogical() == 2) {
												_result229.addMember(_context, _implicit_55_temp);
											} else
											if (_internal_aggregate_source231.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_55_temp.unset();
												_result229.addMember(_context, _implicit_55_temp);
											}
										}
									} else {
										_result229.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt0(_context, _result229), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical());
	}
	public int rIfcrelassociatesmaterialNovoidelement(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source235 = Value.alloc(jsdai.SIfc4.CIfcrelassociatesmaterial.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcrelassociates.class).getAttribute(jsdai.SIfc4.CIfcrelassociates.attributeRelatedobjects(null), _context);
									Value _result233 = Value.alloc(_internal_aggregate_source235).create();
									if (_internal_aggregate_source235.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i234 = 1; _i234 <= _internal_aggregate_source235.getMemberCount(); _i234++) {
											Value _implicit_54_temp = _internal_aggregate_source235.getByIndex(_i234);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCFEATUREELEMENTSUBTRACTION", "IFC4"), _implicit_54_temp.typeOfV(_context)), Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCVIRTUALELEMENT", "IFC4"), _implicit_54_temp.typeOfV(_context))).getLogical() == 2) {
												_result233.addMember(_context, _implicit_54_temp);
											} else
											if (_internal_aggregate_source235.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_54_temp.unset();
												_result233.addMember(_context, _implicit_54_temp);
											}
										}
									} else {
										_result233.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt0(_context, _result233), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical());
	}
}
