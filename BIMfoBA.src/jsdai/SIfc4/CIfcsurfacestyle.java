/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcSurfaceStyle

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcsurfacestyle extends CIfcpresentationstyle implements EIfcsurfacestyle {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcsurfacestyle.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	protected int a1; // Side - current entity - ENUMERATION IfcSurfaceSide
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected AIfcsurfacestyleelementselect a2; // Styles - current entity - SET OF SELECT
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// Side - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a1;
	// Styles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected AIfcsurfacestyleelementselect a2;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a2, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a2, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5037=EXPLICIT_ATTRIBUTE('Name',#5035,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5980=EXPLICIT_ATTRIBUTE('Side',#5978,0,#3047,$,.F.);
	//<01> generating methods for consolidated attribute:  Side
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:Side, base type: ENUMERATION
	public boolean testSide(EIfcsurfacestyle type) throws SdaiException {
		return test_enumeration(a1);
	}
	public int getSide(EIfcsurfacestyle type) throws SdaiException {
		return get_enumeration(a1);
	}
	public void setSide(EIfcsurfacestyle type, int value) throws SdaiException {
		a1 = set_enumeration(value, a1$);
	}
	public void unsetSide(EIfcsurfacestyle type) throws SdaiException {
		a1 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeSide(EIfcsurfacestyle type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5981=EXPLICIT_ATTRIBUTE('Styles',#5978,1,#7153,$,.F.);
	//<01> generating methods for consolidated attribute:  Styles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Styles, base type: SET OF SELECT
	public static int usedinStyles(EIfcsurfacestyle type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	public boolean testStyles(EIfcsurfacestyle type) throws SdaiException {
		return test_aggregate(a2);
	}
	public AIfcsurfacestyleelementselect getStyles(EIfcsurfacestyle type) throws SdaiException {
		if (a2 == null)
			throw new SdaiException(SdaiException.VA_NSET);
		return a2;
	}
	public AIfcsurfacestyleelementselect createStyles(EIfcsurfacestyle type) throws SdaiException {
		a2 = (AIfcsurfacestyleelementselect)create_aggregate_class(a2, a2$, AIfcsurfacestyleelementselect.class, 0);
		return a2;
	}
	public void unsetStyles(EIfcsurfacestyle type) throws SdaiException {
		unset_aggregate(a2);
		a2 = null;
	}
	public static jsdai.dictionary.EAttribute attributeStyles(EIfcsurfacestyle type) throws SdaiException {
		return a2$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getEnumeration(0, a1$);
		a2 = (AIfcsurfacestyleelementselect)av.entityValues[1].getInstanceAggregate(1, a2$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getEnumeration(0, a1$);
		a2 = (AIfcsurfacestyleelementselect)av.entityValues[1].getInstanceAggregate(1, a2$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationStyle
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcSurfaceStyle
		av.entityValues[1].setEnumeration(0, a1, a1$);
		av.entityValues[1].setInstanceAggregate(1, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationStyle
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcSurfaceStyle
		av.entityValues[1].setEnumeration(0, a1, a1$);
		av.entityValues[1].setInstanceAggregate(1, a2);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcsurfacestyleMaxoneshading(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source293 = Value.alloc(jsdai.SIfc4.CIfcsurfacestyle.definition).set(_context, this).getAttribute(a2$, _context);
									Value _result291 = Value.alloc(_internal_aggregate_source293).create();
									if (_internal_aggregate_source293.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i292 = 1; _i292 <= _internal_aggregate_source293.getMemberCount(); _i292++) {
											Value _implicit_68_Style = _internal_aggregate_source293.getByIndex(_i292);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSURFACESTYLESHADING", "IFC4"), _implicit_68_Style.typeOfV(_context)).getLogical() == 2) {
												_result291.addMember(_context, _implicit_68_Style);
											} else
											if (_internal_aggregate_source293.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_68_Style.unset();
												_result291.addMember(_context, _implicit_68_Style);
											}
										}
									} else {
										_result291.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt(_context, _result291), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical());
	}
	public int rIfcsurfacestyleMaxoneextdefined(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source297 = Value.alloc(jsdai.SIfc4.CIfcsurfacestyle.definition).set(_context, this).getAttribute(a2$, _context);
									Value _result295 = Value.alloc(_internal_aggregate_source297).create();
									if (_internal_aggregate_source297.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i296 = 1; _i296 <= _internal_aggregate_source297.getMemberCount(); _i296++) {
											Value _implicit_72_Style = _internal_aggregate_source297.getByIndex(_i296);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCEXTERNALLYDEFINEDSURFACESTYLE", "IFC4"), _implicit_72_Style.typeOfV(_context)).getLogical() == 2) {
												_result295.addMember(_context, _implicit_72_Style);
											} else
											if (_internal_aggregate_source297.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_72_Style.unset();
												_result295.addMember(_context, _implicit_72_Style);
											}
										}
									} else {
										_result295.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt(_context, _result295), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical());
	}
	public int rIfcsurfacestyleMaxonetextures(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source301 = Value.alloc(jsdai.SIfc4.CIfcsurfacestyle.definition).set(_context, this).getAttribute(a2$, _context);
									Value _result299 = Value.alloc(_internal_aggregate_source301).create();
									if (_internal_aggregate_source301.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i300 = 1; _i300 <= _internal_aggregate_source301.getMemberCount(); _i300++) {
											Value _implicit_71_Style = _internal_aggregate_source301.getByIndex(_i300);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSURFACESTYLEWITHTEXTURES", "IFC4"), _implicit_71_Style.typeOfV(_context)).getLogical() == 2) {
												_result299.addMember(_context, _implicit_71_Style);
											} else
											if (_internal_aggregate_source301.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_71_Style.unset();
												_result299.addMember(_context, _implicit_71_Style);
											}
										}
									} else {
										_result299.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt(_context, _result299), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical());
	}
	public int rIfcsurfacestyleMaxonelighting(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source305 = Value.alloc(jsdai.SIfc4.CIfcsurfacestyle.definition).set(_context, this).getAttribute(a2$, _context);
									Value _result303 = Value.alloc(_internal_aggregate_source305).create();
									if (_internal_aggregate_source305.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i304 = 1; _i304 <= _internal_aggregate_source305.getMemberCount(); _i304++) {
											Value _implicit_69_Style = _internal_aggregate_source305.getByIndex(_i304);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSURFACESTYLELIGHTING", "IFC4"), _implicit_69_Style.typeOfV(_context)).getLogical() == 2) {
												_result303.addMember(_context, _implicit_69_Style);
											} else
											if (_internal_aggregate_source305.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_69_Style.unset();
												_result303.addMember(_context, _implicit_69_Style);
											}
										}
									} else {
										_result303.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt(_context, _result303), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical());
	}
	public int rIfcsurfacestyleMaxonerefraction(SdaiContext _context) throws SdaiException {
	



									
									Value _internal_aggregate_source309 = Value.alloc(jsdai.SIfc4.CIfcsurfacestyle.definition).set(_context, this).getAttribute(a2$, _context);
									Value _result307 = Value.alloc(_internal_aggregate_source309).create();
									if (_internal_aggregate_source309.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i308 = 1; _i308 <= _internal_aggregate_source309.getMemberCount(); _i308++) {
											Value _implicit_70_Style = _internal_aggregate_source309.getByIndex(_i308);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSURFACESTYLEREFRACTION", "IFC4"), _implicit_70_Style.typeOfV(_context)).getLogical() == 2) {
												_result307.addMember(_context, _implicit_70_Style);
											} else
											if (_internal_aggregate_source309.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_70_Style.unset();
												_result307.addMember(_context, _implicit_70_Style);
											}
										}
									} else {
										_result307.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt(_context, _result307), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical());
	}
}
