/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialConstituent

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmaterialconstituent extends CIfcmaterialdefinition implements EIfcmaterialconstituent {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmaterialconstituent.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociatesMaterial
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcMaterialProperties
	protected String a0; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a2; // Material - current entity - ENTITY IfcMaterial
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a3; // Fraction - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // Category - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// ToMaterialConstituentSet: protected Object  - inverse - current -  ENTITY IfcMaterialConstituentSet
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Material - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected Object a2;
	// Fraction - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// Category - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// ToMaterialConstituentSet - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a2 == old) {
			a2 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a2 == old) {
			a2 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4658=INVERSE_ATTRIBUTE('AssociatedTo',#4656,0,#5394,$,#5396,#8598,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4659=INVERSE_ATTRIBUTE('HasExternalReferences',#4656,1,#4231,$,#4234,#8600,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4660=INVERSE_ATTRIBUTE('HasProperties',#4656,2,#4721,$,#4723,#8602,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4645=EXPLICIT_ATTRIBUTE('Name',#4643,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcmaterialconstituent type) throws SdaiException {
		return test_string(a0);
	}
	public String getName(EIfcmaterialconstituent type) throws SdaiException {
		return get_string(a0);
	}
	public void setName(EIfcmaterialconstituent type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetName(EIfcmaterialconstituent type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcmaterialconstituent type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4646=EXPLICIT_ATTRIBUTE('Description',#4643,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcmaterialconstituent type) throws SdaiException {
		return test_string(a1);
	}
	public String getDescription(EIfcmaterialconstituent type) throws SdaiException {
		return get_string(a1);
	}
	public void setDescription(EIfcmaterialconstituent type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetDescription(EIfcmaterialconstituent type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcmaterialconstituent type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4647=EXPLICIT_ATTRIBUTE('Material',#4643,2,#4631,$,.F.);
	//<01> generating methods for consolidated attribute:  Material
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Material, base type: entity IfcMaterial
	public static int usedinMaterial(EIfcmaterialconstituent type, EIfcmaterial instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	public boolean testMaterial(EIfcmaterialconstituent type) throws SdaiException {
		return test_instance(a2);
	}
	public EIfcmaterial getMaterial(EIfcmaterialconstituent type) throws SdaiException {
		return (EIfcmaterial)get_instance(a2);
	}
	public void setMaterial(EIfcmaterialconstituent type, EIfcmaterial value) throws SdaiException {
		a2 = set_instance(a2, value);
	}
	public void unsetMaterial(EIfcmaterialconstituent type) throws SdaiException {
		a2 = unset_instance(a2);
	}
	public static jsdai.dictionary.EAttribute attributeMaterial(EIfcmaterialconstituent type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4648=EXPLICIT_ATTRIBUTE('Fraction',#4643,3,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  Fraction
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Fraction, base type: REAL
	public boolean testFraction(EIfcmaterialconstituent type) throws SdaiException {
		return test_double(a3);
	}
	public double getFraction(EIfcmaterialconstituent type) throws SdaiException {
		return get_double(a3);
	}
	public void setFraction(EIfcmaterialconstituent type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetFraction(EIfcmaterialconstituent type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeFraction(EIfcmaterialconstituent type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4649=EXPLICIT_ATTRIBUTE('Category',#4643,4,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Category
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Category, base type: STRING
	public boolean testCategory(EIfcmaterialconstituent type) throws SdaiException {
		return test_string(a4);
	}
	public String getCategory(EIfcmaterialconstituent type) throws SdaiException {
		return get_string(a4);
	}
	public void setCategory(EIfcmaterialconstituent type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetCategory(EIfcmaterialconstituent type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeCategory(EIfcmaterialconstituent type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4650=INVERSE_ATTRIBUTE('ToMaterialConstituentSet',#4643,0,#4651,$,#4655,$,$,.F.);
	//<01> generating methods for consolidated attribute:  ToMaterialConstituentSet
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - ToMaterialConstituentSet : IfcMaterialConstituentSet FOR MaterialConstituents
	public AIfcmaterialconstituentset getTomaterialconstituentset(EIfcmaterialconstituent type, ASdaiModel domain) throws SdaiException {
		AIfcmaterialconstituentset result = new AIfcmaterialconstituentset();
		CIfcmaterialconstituentset.usedinMaterialconstituents(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeTomaterialconstituentset(EIfcmaterialconstituent type) throws SdaiException {
		return i3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			a4 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[0].getString(4);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			a4 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[0].getString(4);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialConstituent
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstance(2, a2);
		av.entityValues[0].setDouble(3, a3);
		av.entityValues[0].setString(4, a4);
		// partial entity: IfcMaterialDefinition
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialConstituent
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstance(2, a2);
		av.entityValues[0].setDouble(3, a3);
		av.entityValues[0].setString(4, a4);
		// partial entity: IfcMaterialDefinition
	}
}
