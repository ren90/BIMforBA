/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing aggregate of  IfcBendingParameterSelect of level 1

package jsdai.SIfc4;
import jsdai.lang.*;


public class AIfcbendingparameterselect extends CAggregate {
	public static final int sIfclengthmeasure = 2;
	public static final int sIfcplaneanglemeasure = 3;

	public int testByIndex(int index) throws SdaiException {
		return pTestByIndex(index);
	}

	public int testCurrentMember(SdaiIterator iter) throws SdaiException {
		return pTestCurrentMember(iter);
	}

	public boolean isMember(double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		return pIsMember(value, 2);
	}
	public boolean isMember(double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		return pIsMember(value, 3);
	}
	public double getByIndex(int index, EIfclengthmeasure node1) throws SdaiException { // case 2
		return pGetByIndexDouble(index, 2);
	}
	public double getByIndex(int index, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		return pGetByIndexDouble(index, 3);
	}
	public double getCurrentMember(SdaiIterator iter, EIfclengthmeasure node1) throws SdaiException { // case 2
		return pGetCurrentMemberDouble(iter, 2);
	}
	public double getCurrentMember(SdaiIterator iter, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		return pGetCurrentMemberDouble(iter, 3);
	}
	public void setByIndex(int index, double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pSetByIndex(index, value, 2);
	}
	public void setByIndex(int index, double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pSetByIndex(index, value, 3);
	}
	public void setCurrentMember(SdaiIterator iter, double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pSetCurrentMember(iter, value, 2);
	}
	public void setCurrentMember(SdaiIterator iter, double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pSetCurrentMember(iter, value, 3);
	}
	public void addBefore(SdaiIterator iter, double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pAddBefore(iter, value, 2);
	}
	public void addBefore(SdaiIterator iter, double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pAddBefore(iter, value, 3);
	}
	public void addAfter(SdaiIterator iter, double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pAddAfter(iter, value, 2);
	}
	public void addAfter(SdaiIterator iter, double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pAddAfter(iter, value, 3);
	}
	public void addUnordered(double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pAddUnordered(value, 2);
	}
	public void addUnordered(double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pAddUnordered(value, 3);
	}
	public void addByIndex(int index, double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pAddByIndex(index, value, 2);
	}
	public void addByIndex(int index, double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pAddByIndex(index, value, 3);
	}
	public void removeUnordered(double value, EIfclengthmeasure node1) throws SdaiException { // case 2
		pRemoveUnordered(value, 2);
	}
	public void removeUnordered(double value, EIfcplaneanglemeasure node1) throws SdaiException { // case 3
		pRemoveUnordered(value, 3);
	}
}
