/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcWindowLiningProperties

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcwindowliningproperties extends EIfcpredefinedpropertyset {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LiningDepth, base type: REAL
	public boolean testLiningdepth(EIfcwindowliningproperties type) throws SdaiException;
	public double getLiningdepth(EIfcwindowliningproperties type) throws SdaiException;
	public void setLiningdepth(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetLiningdepth(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LiningThickness, base type: REAL
	public boolean testLiningthickness(EIfcwindowliningproperties type) throws SdaiException;
	public double getLiningthickness(EIfcwindowliningproperties type) throws SdaiException;
	public void setLiningthickness(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetLiningthickness(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:TransomThickness, base type: REAL
	public boolean testTransomthickness(EIfcwindowliningproperties type) throws SdaiException;
	public double getTransomthickness(EIfcwindowliningproperties type) throws SdaiException;
	public void setTransomthickness(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetTransomthickness(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:MullionThickness, base type: REAL
	public boolean testMullionthickness(EIfcwindowliningproperties type) throws SdaiException;
	public double getMullionthickness(EIfcwindowliningproperties type) throws SdaiException;
	public void setMullionthickness(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetMullionthickness(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:FirstTransomOffset, base type: REAL
	public boolean testFirsttransomoffset(EIfcwindowliningproperties type) throws SdaiException;
	public double getFirsttransomoffset(EIfcwindowliningproperties type) throws SdaiException;
	public void setFirsttransomoffset(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetFirsttransomoffset(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:SecondTransomOffset, base type: REAL
	public boolean testSecondtransomoffset(EIfcwindowliningproperties type) throws SdaiException;
	public double getSecondtransomoffset(EIfcwindowliningproperties type) throws SdaiException;
	public void setSecondtransomoffset(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetSecondtransomoffset(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:FirstMullionOffset, base type: REAL
	public boolean testFirstmullionoffset(EIfcwindowliningproperties type) throws SdaiException;
	public double getFirstmullionoffset(EIfcwindowliningproperties type) throws SdaiException;
	public void setFirstmullionoffset(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetFirstmullionoffset(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:SecondMullionOffset, base type: REAL
	public boolean testSecondmullionoffset(EIfcwindowliningproperties type) throws SdaiException;
	public double getSecondmullionoffset(EIfcwindowliningproperties type) throws SdaiException;
	public void setSecondmullionoffset(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetSecondmullionoffset(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:ShapeAspectStyle, base type: entity IfcShapeAspect
	public boolean testShapeaspectstyle(EIfcwindowliningproperties type) throws SdaiException;
	public EIfcshapeaspect getShapeaspectstyle(EIfcwindowliningproperties type) throws SdaiException;
	public void setShapeaspectstyle(EIfcwindowliningproperties type, EIfcshapeaspect value) throws SdaiException;
	public void unsetShapeaspectstyle(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LiningOffset, base type: REAL
	public boolean testLiningoffset(EIfcwindowliningproperties type) throws SdaiException;
	public double getLiningoffset(EIfcwindowliningproperties type) throws SdaiException;
	public void setLiningoffset(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetLiningoffset(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LiningToPanelOffsetX, base type: REAL
	public boolean testLiningtopaneloffsetx(EIfcwindowliningproperties type) throws SdaiException;
	public double getLiningtopaneloffsetx(EIfcwindowliningproperties type) throws SdaiException;
	public void setLiningtopaneloffsetx(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetLiningtopaneloffsetx(EIfcwindowliningproperties type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LiningToPanelOffsetY, base type: REAL
	public boolean testLiningtopaneloffsety(EIfcwindowliningproperties type) throws SdaiException;
	public double getLiningtopaneloffsety(EIfcwindowliningproperties type) throws SdaiException;
	public void setLiningtopaneloffsety(EIfcwindowliningproperties type, double value) throws SdaiException;
	public void unsetLiningtopaneloffsety(EIfcwindowliningproperties type) throws SdaiException;

}
