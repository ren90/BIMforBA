/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcStructuralLoadLinearForce

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcstructuralloadlinearforce extends CIfcstructuralloadstatic implements EIfcstructuralloadlinearforce {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcstructuralloadlinearforce.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	protected double a1; // LinearForceX - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a2; // LinearForceY - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a3; // LinearForceZ - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // LinearMomentX - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a5; // LinearMomentY - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // LinearMomentZ - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// LinearForceX - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a1;
	// LinearForceY - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a2;
	// LinearForceZ - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// LinearMomentX - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// LinearMomentY - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;
	// LinearMomentZ - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5838=EXPLICIT_ATTRIBUTE('Name',#5836,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5857=EXPLICIT_ATTRIBUTE('LinearForceX',#5855,0,#2545,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearForceX
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearForceX, base type: REAL
	public boolean testLinearforcex(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a1);
	}
	public double getLinearforcex(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a1);
	}
	public void setLinearforcex(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a1 = set_double(value);
	}
	public void unsetLinearforcex(EIfcstructuralloadlinearforce type) throws SdaiException {
		a1 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearforcex(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5858=EXPLICIT_ATTRIBUTE('LinearForceY',#5855,1,#2545,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearForceY
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearForceY, base type: REAL
	public boolean testLinearforcey(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a2);
	}
	public double getLinearforcey(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a2);
	}
	public void setLinearforcey(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a2 = set_double(value);
	}
	public void unsetLinearforcey(EIfcstructuralloadlinearforce type) throws SdaiException {
		a2 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearforcey(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #5859=EXPLICIT_ATTRIBUTE('LinearForceZ',#5855,2,#2545,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearForceZ
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearForceZ, base type: REAL
	public boolean testLinearforcez(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a3);
	}
	public double getLinearforcez(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a3);
	}
	public void setLinearforcez(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetLinearforcez(EIfcstructuralloadlinearforce type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearforcez(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #5860=EXPLICIT_ATTRIBUTE('LinearMomentX',#5855,3,#2547,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearMomentX
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearMomentX, base type: REAL
	public boolean testLinearmomentx(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a4);
	}
	public double getLinearmomentx(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a4);
	}
	public void setLinearmomentx(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetLinearmomentx(EIfcstructuralloadlinearforce type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearmomentx(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5861=EXPLICIT_ATTRIBUTE('LinearMomentY',#5855,4,#2547,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearMomentY
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearMomentY, base type: REAL
	public boolean testLinearmomenty(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a5);
	}
	public double getLinearmomenty(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a5);
	}
	public void setLinearmomenty(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetLinearmomenty(EIfcstructuralloadlinearforce type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearmomenty(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #5862=EXPLICIT_ATTRIBUTE('LinearMomentZ',#5855,5,#2547,$,.T.);
	//<01> generating methods for consolidated attribute:  LinearMomentZ
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LinearMomentZ, base type: REAL
	public boolean testLinearmomentz(EIfcstructuralloadlinearforce type) throws SdaiException {
		return test_double(a6);
	}
	public double getLinearmomentz(EIfcstructuralloadlinearforce type) throws SdaiException {
		return get_double(a6);
	}
	public void setLinearmomentz(EIfcstructuralloadlinearforce type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetLinearmomentz(EIfcstructuralloadlinearforce type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLinearmomentz(EIfcstructuralloadlinearforce type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getDouble(0);
		a2 = av.entityValues[1].getDouble(1);
		a3 = av.entityValues[1].getDouble(2);
		a4 = av.entityValues[1].getDouble(3);
		a5 = av.entityValues[1].getDouble(4);
		a6 = av.entityValues[1].getDouble(5);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getDouble(0);
		a2 = av.entityValues[1].getDouble(1);
		a3 = av.entityValues[1].getDouble(2);
		a4 = av.entityValues[1].getDouble(3);
		a5 = av.entityValues[1].getDouble(4);
		a6 = av.entityValues[1].getDouble(5);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcStructuralLoad
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcStructuralLoadLinearForce
		av.entityValues[1].setDouble(0, a1);
		av.entityValues[1].setDouble(1, a2);
		av.entityValues[1].setDouble(2, a3);
		av.entityValues[1].setDouble(3, a4);
		av.entityValues[1].setDouble(4, a5);
		av.entityValues[1].setDouble(5, a6);
		// partial entity: IfcStructuralLoadOrResult
		// partial entity: IfcStructuralLoadStatic
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcStructuralLoad
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcStructuralLoadLinearForce
		av.entityValues[1].setDouble(0, a1);
		av.entityValues[1].setDouble(1, a2);
		av.entityValues[1].setDouble(2, a3);
		av.entityValues[1].setDouble(3, a4);
		av.entityValues[1].setDouble(4, a5);
		av.entityValues[1].setDouble(5, a6);
		// partial entity: IfcStructuralLoadOrResult
		// partial entity: IfcStructuralLoadStatic
	}
}
