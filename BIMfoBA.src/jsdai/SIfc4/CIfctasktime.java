/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcTaskTime

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfctasktime extends CIfcschedulingtime implements EIfctasktime {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfctasktime.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// DataOrigin: protected int a1;   DataOrigin - java inheritance - ENUMERATION IfcDataOriginEnum
	// UserDefinedDataOrigin: protected String a2;   UserDefinedDataOrigin - java inheritance - STRING
	protected int a3; // DurationType - current entity - ENUMERATION IfcTaskDurationEnum
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // ScheduleDuration - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // ScheduleStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a6; // ScheduleFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a7; // EarlyStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected String a8; // EarlyFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected String a9; // LateStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	protected String a10; // LateFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	protected String a11; // FreeFloat - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a11$ = CEntity.initExplicitAttribute(definition, 11);
	protected String a12; // TotalFloat - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a12$ = CEntity.initExplicitAttribute(definition, 12);
	protected int a13; // IsCritical - current entity - BOOLEAN
	protected static final jsdai.dictionary.CExplicit_attribute a13$ = CEntity.initExplicitAttribute(definition, 13);
	protected String a14; // StatusTime - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a14$ = CEntity.initExplicitAttribute(definition, 14);
	protected String a15; // ActualDuration - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a15$ = CEntity.initExplicitAttribute(definition, 15);
	protected String a16; // ActualStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a16$ = CEntity.initExplicitAttribute(definition, 16);
	protected String a17; // ActualFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a17$ = CEntity.initExplicitAttribute(definition, 17);
	protected String a18; // RemainingTime - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a18$ = CEntity.initExplicitAttribute(definition, 18);
	protected double a19; // Completion - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a19$ = CEntity.initExplicitAttribute(definition, 19);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// DataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected int a1;
	// UserDefinedDataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// DurationType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a3;
	// ScheduleDuration - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// ScheduleStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// ScheduleFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a6;
	// EarlyStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected String a7;
	// EarlyFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected String a8;
	// LateStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	protected String a9;
	// LateFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	protected String a10;
	// FreeFloat - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a11$ = CEntity.initExplicitAttribute(definition, 11);
	protected String a11;
	// TotalFloat - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a12$ = CEntity.initExplicitAttribute(definition, 12);
	protected String a12;
	// IsCritical - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a13$ = CEntity.initExplicitAttribute(definition, 13);
	protected int a13;
	// StatusTime - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a14$ = CEntity.initExplicitAttribute(definition, 14);
	protected String a14;
	// ActualDuration - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a15$ = CEntity.initExplicitAttribute(definition, 15);
	protected String a15;
	// ActualStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a16$ = CEntity.initExplicitAttribute(definition, 16);
	protected String a16;
	// ActualFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a17$ = CEntity.initExplicitAttribute(definition, 17);
	protected String a17;
	// RemainingTime - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a18$ = CEntity.initExplicitAttribute(definition, 18);
	protected String a18;
	// Completion - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a19$ = CEntity.initExplicitAttribute(definition, 19);
	protected double a19;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5638=EXPLICIT_ATTRIBUTE('Name',#5636,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5639=EXPLICIT_ATTRIBUTE('DataOrigin',#5636,1,#2803,$,.T.);
	//<01> generating methods for consolidated attribute:  DataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5640=EXPLICIT_ATTRIBUTE('UserDefinedDataOrigin',#5636,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedDataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6097=EXPLICIT_ATTRIBUTE('DurationType',#6095,0,#3055,$,.T.);
	//<01> generating methods for consolidated attribute:  DurationType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:DurationType, base type: ENUMERATION
	public boolean testDurationtype(EIfctasktime type) throws SdaiException {
		return test_enumeration(a3);
	}
	public int getDurationtype(EIfctasktime type) throws SdaiException {
		return get_enumeration(a3);
	}
	public void setDurationtype(EIfctasktime type, int value) throws SdaiException {
		a3 = set_enumeration(value, a3$);
	}
	public void unsetDurationtype(EIfctasktime type) throws SdaiException {
		a3 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeDurationtype(EIfctasktime type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #6098=EXPLICIT_ATTRIBUTE('ScheduleDuration',#6095,1,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleDuration
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleDuration, base type: STRING
	public boolean testScheduleduration(EIfctasktime type) throws SdaiException {
		return test_string(a4);
	}
	public String getScheduleduration(EIfctasktime type) throws SdaiException {
		return get_string(a4);
	}
	public void setScheduleduration(EIfctasktime type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetScheduleduration(EIfctasktime type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeScheduleduration(EIfctasktime type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #6099=EXPLICIT_ATTRIBUTE('ScheduleStart',#6095,2,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleStart, base type: STRING
	public boolean testSchedulestart(EIfctasktime type) throws SdaiException {
		return test_string(a5);
	}
	public String getSchedulestart(EIfctasktime type) throws SdaiException {
		return get_string(a5);
	}
	public void setSchedulestart(EIfctasktime type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetSchedulestart(EIfctasktime type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulestart(EIfctasktime type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #6100=EXPLICIT_ATTRIBUTE('ScheduleFinish',#6095,3,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleFinish, base type: STRING
	public boolean testSchedulefinish(EIfctasktime type) throws SdaiException {
		return test_string(a6);
	}
	public String getSchedulefinish(EIfctasktime type) throws SdaiException {
		return get_string(a6);
	}
	public void setSchedulefinish(EIfctasktime type, String value) throws SdaiException {
		a6 = set_string(value);
	}
	public void unsetSchedulefinish(EIfctasktime type) throws SdaiException {
		a6 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulefinish(EIfctasktime type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #6101=EXPLICIT_ATTRIBUTE('EarlyStart',#6095,4,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  EarlyStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EarlyStart, base type: STRING
	public boolean testEarlystart(EIfctasktime type) throws SdaiException {
		return test_string(a7);
	}
	public String getEarlystart(EIfctasktime type) throws SdaiException {
		return get_string(a7);
	}
	public void setEarlystart(EIfctasktime type, String value) throws SdaiException {
		a7 = set_string(value);
	}
	public void unsetEarlystart(EIfctasktime type) throws SdaiException {
		a7 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeEarlystart(EIfctasktime type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #6102=EXPLICIT_ATTRIBUTE('EarlyFinish',#6095,5,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  EarlyFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EarlyFinish, base type: STRING
	public boolean testEarlyfinish(EIfctasktime type) throws SdaiException {
		return test_string(a8);
	}
	public String getEarlyfinish(EIfctasktime type) throws SdaiException {
		return get_string(a8);
	}
	public void setEarlyfinish(EIfctasktime type, String value) throws SdaiException {
		a8 = set_string(value);
	}
	public void unsetEarlyfinish(EIfctasktime type) throws SdaiException {
		a8 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeEarlyfinish(EIfctasktime type) throws SdaiException {
		return a8$;
	}

	//going through all the attributes: #6103=EXPLICIT_ATTRIBUTE('LateStart',#6095,6,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  LateStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LateStart, base type: STRING
	public boolean testLatestart(EIfctasktime type) throws SdaiException {
		return test_string(a9);
	}
	public String getLatestart(EIfctasktime type) throws SdaiException {
		return get_string(a9);
	}
	public void setLatestart(EIfctasktime type, String value) throws SdaiException {
		a9 = set_string(value);
	}
	public void unsetLatestart(EIfctasktime type) throws SdaiException {
		a9 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLatestart(EIfctasktime type) throws SdaiException {
		return a9$;
	}

	//going through all the attributes: #6104=EXPLICIT_ATTRIBUTE('LateFinish',#6095,7,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  LateFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LateFinish, base type: STRING
	public boolean testLatefinish(EIfctasktime type) throws SdaiException {
		return test_string(a10);
	}
	public String getLatefinish(EIfctasktime type) throws SdaiException {
		return get_string(a10);
	}
	public void setLatefinish(EIfctasktime type, String value) throws SdaiException {
		a10 = set_string(value);
	}
	public void unsetLatefinish(EIfctasktime type) throws SdaiException {
		a10 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLatefinish(EIfctasktime type) throws SdaiException {
		return a10$;
	}

	//going through all the attributes: #6105=EXPLICIT_ATTRIBUTE('FreeFloat',#6095,8,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  FreeFloat
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: FreeFloat, base type: STRING
	public boolean testFreefloat(EIfctasktime type) throws SdaiException {
		return test_string(a11);
	}
	public String getFreefloat(EIfctasktime type) throws SdaiException {
		return get_string(a11);
	}
	public void setFreefloat(EIfctasktime type, String value) throws SdaiException {
		a11 = set_string(value);
	}
	public void unsetFreefloat(EIfctasktime type) throws SdaiException {
		a11 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeFreefloat(EIfctasktime type) throws SdaiException {
		return a11$;
	}

	//going through all the attributes: #6106=EXPLICIT_ATTRIBUTE('TotalFloat',#6095,9,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  TotalFloat
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TotalFloat, base type: STRING
	public boolean testTotalfloat(EIfctasktime type) throws SdaiException {
		return test_string(a12);
	}
	public String getTotalfloat(EIfctasktime type) throws SdaiException {
		return get_string(a12);
	}
	public void setTotalfloat(EIfctasktime type, String value) throws SdaiException {
		a12 = set_string(value);
	}
	public void unsetTotalfloat(EIfctasktime type) throws SdaiException {
		a12 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeTotalfloat(EIfctasktime type) throws SdaiException {
		return a12$;
	}

	//going through all the attributes: #6107=EXPLICIT_ATTRIBUTE('IsCritical',#6095,10,#6,$,.T.);
	//<01> generating methods for consolidated attribute:  IsCritical
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: IsCritical, base type: BOOLEAN
	public boolean testIscritical(EIfctasktime type) throws SdaiException {
		return test_boolean(a13);
	}
	public boolean getIscritical(EIfctasktime type) throws SdaiException {
		return get_boolean(a13);
	}
	public void setIscritical(EIfctasktime type, boolean value) throws SdaiException {
		a13 = set_boolean(value);
	}
	public void unsetIscritical(EIfctasktime type) throws SdaiException {
		a13 = unset_boolean();
	}
	public static jsdai.dictionary.EAttribute attributeIscritical(EIfctasktime type) throws SdaiException {
		return a13$;
	}

	//going through all the attributes: #6108=EXPLICIT_ATTRIBUTE('StatusTime',#6095,11,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  StatusTime
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: StatusTime, base type: STRING
	public boolean testStatustime(EIfctasktime type) throws SdaiException {
		return test_string(a14);
	}
	public String getStatustime(EIfctasktime type) throws SdaiException {
		return get_string(a14);
	}
	public void setStatustime(EIfctasktime type, String value) throws SdaiException {
		a14 = set_string(value);
	}
	public void unsetStatustime(EIfctasktime type) throws SdaiException {
		a14 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeStatustime(EIfctasktime type) throws SdaiException {
		return a14$;
	}

	//going through all the attributes: #6109=EXPLICIT_ATTRIBUTE('ActualDuration',#6095,12,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualDuration
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualDuration, base type: STRING
	public boolean testActualduration(EIfctasktime type) throws SdaiException {
		return test_string(a15);
	}
	public String getActualduration(EIfctasktime type) throws SdaiException {
		return get_string(a15);
	}
	public void setActualduration(EIfctasktime type, String value) throws SdaiException {
		a15 = set_string(value);
	}
	public void unsetActualduration(EIfctasktime type) throws SdaiException {
		a15 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualduration(EIfctasktime type) throws SdaiException {
		return a15$;
	}

	//going through all the attributes: #6110=EXPLICIT_ATTRIBUTE('ActualStart',#6095,13,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualStart, base type: STRING
	public boolean testActualstart(EIfctasktime type) throws SdaiException {
		return test_string(a16);
	}
	public String getActualstart(EIfctasktime type) throws SdaiException {
		return get_string(a16);
	}
	public void setActualstart(EIfctasktime type, String value) throws SdaiException {
		a16 = set_string(value);
	}
	public void unsetActualstart(EIfctasktime type) throws SdaiException {
		a16 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualstart(EIfctasktime type) throws SdaiException {
		return a16$;
	}

	//going through all the attributes: #6111=EXPLICIT_ATTRIBUTE('ActualFinish',#6095,14,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualFinish, base type: STRING
	public boolean testActualfinish(EIfctasktime type) throws SdaiException {
		return test_string(a17);
	}
	public String getActualfinish(EIfctasktime type) throws SdaiException {
		return get_string(a17);
	}
	public void setActualfinish(EIfctasktime type, String value) throws SdaiException {
		a17 = set_string(value);
	}
	public void unsetActualfinish(EIfctasktime type) throws SdaiException {
		a17 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualfinish(EIfctasktime type) throws SdaiException {
		return a17$;
	}

	//going through all the attributes: #6112=EXPLICIT_ATTRIBUTE('RemainingTime',#6095,15,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  RemainingTime
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: RemainingTime, base type: STRING
	public boolean testRemainingtime(EIfctasktime type) throws SdaiException {
		return test_string(a18);
	}
	public String getRemainingtime(EIfctasktime type) throws SdaiException {
		return get_string(a18);
	}
	public void setRemainingtime(EIfctasktime type, String value) throws SdaiException {
		a18 = set_string(value);
	}
	public void unsetRemainingtime(EIfctasktime type) throws SdaiException {
		a18 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeRemainingtime(EIfctasktime type) throws SdaiException {
		return a18$;
	}

	//going through all the attributes: #6113=EXPLICIT_ATTRIBUTE('Completion',#6095,16,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  Completion
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Completion, base type: REAL
	public boolean testCompletion(EIfctasktime type) throws SdaiException {
		return test_double(a19);
	}
	public double getCompletion(EIfctasktime type) throws SdaiException {
		return get_double(a19);
	}
	public void setCompletion(EIfctasktime type, double value) throws SdaiException {
		a19 = set_double(value);
	}
	public void unsetCompletion(EIfctasktime type) throws SdaiException {
		a19 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeCompletion(EIfctasktime type) throws SdaiException {
		return a19$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			a2 = null;
			a3 = 0;
			a4 = null;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = null;
			a10 = null;
			a11 = null;
			a12 = null;
			a13 = 0;
			a14 = null;
			a15 = null;
			a16 = null;
			a17 = null;
			a18 = null;
			a19 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getEnumeration(0, a3$);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getString(2);
		a6 = av.entityValues[1].getString(3);
		a7 = av.entityValues[1].getString(4);
		a8 = av.entityValues[1].getString(5);
		a9 = av.entityValues[1].getString(6);
		a10 = av.entityValues[1].getString(7);
		a11 = av.entityValues[1].getString(8);
		a12 = av.entityValues[1].getString(9);
		a13 = av.entityValues[1].getBoolean(10);
		a14 = av.entityValues[1].getString(11);
		a15 = av.entityValues[1].getString(12);
		a16 = av.entityValues[1].getString(13);
		a17 = av.entityValues[1].getString(14);
		a18 = av.entityValues[1].getString(15);
		a19 = av.entityValues[1].getDouble(16);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			a2 = null;
			a3 = 0;
			a4 = null;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = null;
			a10 = null;
			a11 = null;
			a12 = null;
			a13 = 0;
			a14 = null;
			a15 = null;
			a16 = null;
			a17 = null;
			a18 = null;
			a19 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getEnumeration(0, a3$);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getString(2);
		a6 = av.entityValues[1].getString(3);
		a7 = av.entityValues[1].getString(4);
		a8 = av.entityValues[1].getString(5);
		a9 = av.entityValues[1].getString(6);
		a10 = av.entityValues[1].getString(7);
		a11 = av.entityValues[1].getString(8);
		a12 = av.entityValues[1].getString(9);
		a13 = av.entityValues[1].getBoolean(10);
		a14 = av.entityValues[1].getString(11);
		a15 = av.entityValues[1].getString(12);
		a16 = av.entityValues[1].getString(13);
		a17 = av.entityValues[1].getString(14);
		a18 = av.entityValues[1].getString(15);
		a19 = av.entityValues[1].getDouble(16);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcSchedulingTime
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcTaskTime
		av.entityValues[1].setEnumeration(0, a3, a3$);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setString(2, a5);
		av.entityValues[1].setString(3, a6);
		av.entityValues[1].setString(4, a7);
		av.entityValues[1].setString(5, a8);
		av.entityValues[1].setString(6, a9);
		av.entityValues[1].setString(7, a10);
		av.entityValues[1].setString(8, a11);
		av.entityValues[1].setString(9, a12);
		av.entityValues[1].setBoolean(10, a13);
		av.entityValues[1].setString(11, a14);
		av.entityValues[1].setString(12, a15);
		av.entityValues[1].setString(13, a16);
		av.entityValues[1].setString(14, a17);
		av.entityValues[1].setString(15, a18);
		av.entityValues[1].setDouble(16, a19);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcSchedulingTime
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcTaskTime
		av.entityValues[1].setEnumeration(0, a3, a3$);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setString(2, a5);
		av.entityValues[1].setString(3, a6);
		av.entityValues[1].setString(4, a7);
		av.entityValues[1].setString(5, a8);
		av.entityValues[1].setString(6, a9);
		av.entityValues[1].setString(7, a10);
		av.entityValues[1].setString(8, a11);
		av.entityValues[1].setString(9, a12);
		av.entityValues[1].setBoolean(10, a13);
		av.entityValues[1].setString(11, a14);
		av.entityValues[1].setString(12, a15);
		av.entityValues[1].setString(13, a16);
		av.entityValues[1].setString(14, a17);
		av.entityValues[1].setString(15, a18);
		av.entityValues[1].setDouble(16, a19);
	}
}
