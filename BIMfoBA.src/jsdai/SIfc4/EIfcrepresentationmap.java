/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcRepresentationMap

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcrepresentationmap extends EEntity {

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: MappingOrigin
	boolean testMappingorigin(EIfcrepresentationmap type) throws SdaiException;

	EEntity getMappingorigin(EIfcrepresentationmap type) throws SdaiException; // case 1

	void setMappingorigin(EIfcrepresentationmap type, EEntity value) throws SdaiException; // case 1

	void unsetMappingorigin(EIfcrepresentationmap type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:MappedRepresentation, base type: entity IfcRepresentation
	public boolean testMappedrepresentation(EIfcrepresentationmap type) throws SdaiException;
	public EIfcrepresentation getMappedrepresentation(EIfcrepresentationmap type) throws SdaiException;
	public void setMappedrepresentation(EIfcrepresentationmap type, EIfcrepresentation value) throws SdaiException;
	public void unsetMappedrepresentation(EIfcrepresentationmap type) throws SdaiException;

	// Inverse attribute - HasShapeAspects : SET[0:-2147483648] OF IfcShapeAspect FOR PartOfProductDefinitionShape
	public AIfcshapeaspect getHasshapeaspects(EIfcrepresentationmap type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - MapUsage : SET[0:-2147483648] OF IfcMappedItem FOR MappingSource
	public AIfcmappeditem getMapusage(EIfcrepresentationmap type, ASdaiModel domain) throws SdaiException;
}
