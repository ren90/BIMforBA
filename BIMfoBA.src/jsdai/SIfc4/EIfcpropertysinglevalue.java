/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcPropertySingleValue

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcpropertysinglevalue extends EIfcsimpleproperty {

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: NominalValue
	int sNominalvalueIfcabsorbeddosemeasure = 2;
	int sNominalvalueIfcaccelerationmeasure = 3;
	int sNominalvalueIfcangularvelocitymeasure = 4;
	int sNominalvalueIfcareadensitymeasure = 5;
	int sNominalvalueIfccompoundplaneanglemeasure = 6;
	int sNominalvalueIfccurvaturemeasure = 7;
	int sNominalvalueIfcdoseequivalentmeasure = 8;
	int sNominalvalueIfcdynamicviscositymeasure = 9;
	int sNominalvalueIfcelectriccapacitancemeasure = 10;
	int sNominalvalueIfcelectricchargemeasure = 11;
	int sNominalvalueIfcelectricconductancemeasure = 12;
	int sNominalvalueIfcelectricresistancemeasure = 13;
	int sNominalvalueIfcelectricvoltagemeasure = 14;
	int sNominalvalueIfcenergymeasure = 15;
	int sNominalvalueIfcforcemeasure = 16;
	int sNominalvalueIfcfrequencymeasure = 17;
	int sNominalvalueIfcheatfluxdensitymeasure = 18;
	int sNominalvalueIfcheatingvaluemeasure = 19;
	int sNominalvalueIfcilluminancemeasure = 20;
	int sNominalvalueIfcinductancemeasure = 21;
	int sNominalvalueIfcintegercountratemeasure = 22;
	int sNominalvalueIfcionconcentrationmeasure = 23;
	int sNominalvalueIfcisothermalmoisturecapacitymeasure = 24;
	int sNominalvalueIfckinematicviscositymeasure = 25;
	int sNominalvalueIfclinearforcemeasure = 26;
	int sNominalvalueIfclinearmomentmeasure = 27;
	int sNominalvalueIfclinearstiffnessmeasure = 28;
	int sNominalvalueIfclinearvelocitymeasure = 29;
	int sNominalvalueIfcluminousfluxmeasure = 30;
	int sNominalvalueIfcluminousintensitydistributionmeasure = 31;
	int sNominalvalueIfcmagneticfluxdensitymeasure = 32;
	int sNominalvalueIfcmagneticfluxmeasure = 33;
	int sNominalvalueIfcmassdensitymeasure = 34;
	int sNominalvalueIfcmassflowratemeasure = 35;
	int sNominalvalueIfcmassperlengthmeasure = 36;
	int sNominalvalueIfcmodulusofelasticitymeasure = 37;
	int sNominalvalueIfcmodulusoflinearsubgradereactionmeasure = 38;
	int sNominalvalueIfcmodulusofrotationalsubgradereactionmeasure = 39;
	int sNominalvalueIfcmodulusofsubgradereactionmeasure = 40;
	int sNominalvalueIfcmoisturediffusivitymeasure = 41;
	int sNominalvalueIfcmolecularweightmeasure = 42;
	int sNominalvalueIfcmomentofinertiameasure = 43;
	int sNominalvalueIfcmonetarymeasure = 44;
	int sNominalvalueIfcphmeasure = 45;
	int sNominalvalueIfcplanarforcemeasure = 46;
	int sNominalvalueIfcpowermeasure = 47;
	int sNominalvalueIfcpressuremeasure = 48;
	int sNominalvalueIfcradioactivitymeasure = 49;
	int sNominalvalueIfcrotationalfrequencymeasure = 50;
	int sNominalvalueIfcrotationalmassmeasure = 51;
	int sNominalvalueIfcrotationalstiffnessmeasure = 52;
	int sNominalvalueIfcsectionmodulusmeasure = 53;
	int sNominalvalueIfcsectionalareaintegralmeasure = 54;
	int sNominalvalueIfcshearmodulusmeasure = 55;
	int sNominalvalueIfcsoundpowerlevelmeasure = 56;
	int sNominalvalueIfcsoundpowermeasure = 57;
	int sNominalvalueIfcsoundpressurelevelmeasure = 58;
	int sNominalvalueIfcsoundpressuremeasure = 59;
	int sNominalvalueIfcspecificheatcapacitymeasure = 60;
	int sNominalvalueIfctemperaturegradientmeasure = 61;
	int sNominalvalueIfctemperaturerateofchangemeasure = 62;
	int sNominalvalueIfcthermaladmittancemeasure = 63;
	int sNominalvalueIfcthermalconductivitymeasure = 64;
	int sNominalvalueIfcthermalexpansioncoefficientmeasure = 65;
	int sNominalvalueIfcthermalresistancemeasure = 66;
	int sNominalvalueIfcthermaltransmittancemeasure = 67;
	int sNominalvalueIfctorquemeasure = 68;
	int sNominalvalueIfcvaporpermeabilitymeasure = 69;
	int sNominalvalueIfcvolumetricflowratemeasure = 70;
	int sNominalvalueIfcwarpingconstantmeasure = 71;
	int sNominalvalueIfcwarpingmomentmeasure = 72;
	int sNominalvalueIfcamountofsubstancemeasure = 73;
	int sNominalvalueIfcareameasure = 74;
	int sNominalvalueIfccomplexnumber = 75;
	int sNominalvalueIfccontextdependentmeasure = 76;
	int sNominalvalueIfccountmeasure = 77;
	int sNominalvalueIfcdescriptivemeasure = 78;
	int sNominalvalueIfcelectriccurrentmeasure = 79;
	int sNominalvalueIfclengthmeasure = 80;
	int sNominalvalueIfcluminousintensitymeasure = 81;
	int sNominalvalueIfcmassmeasure = 82;
	int sNominalvalueIfcnonnegativelengthmeasure = 83;
	int sNominalvalueIfcnormalisedratiomeasure = 84;
	int sNominalvalueIfcnumericmeasure = 85;
	int sNominalvalueIfcparametervalue = 86;
	int sNominalvalueIfcplaneanglemeasure = 87;
	int sNominalvalueIfcpositivelengthmeasure = 88;
	int sNominalvalueIfcpositiveplaneanglemeasure = 89;
	int sNominalvalueIfcpositiveratiomeasure = 90;
	int sNominalvalueIfcratiomeasure = 91;
	int sNominalvalueIfcsolidanglemeasure = 92;
	int sNominalvalueIfcthermodynamictemperaturemeasure = 93;
	int sNominalvalueIfctimemeasure = 94;
	int sNominalvalueIfcvolumemeasure = 95;
	int sNominalvalueIfcboolean = 96;
	int sNominalvalueIfcdate = 97;
	int sNominalvalueIfcdatetime = 98;
	int sNominalvalueIfcduration = 99;
	int sNominalvalueIfcidentifier = 100;
	int sNominalvalueIfcinteger = 101;
	int sNominalvalueIfclabel = 102;
	int sNominalvalueIfclogical = 103;
	int sNominalvalueIfcreal = 104;
	int sNominalvalueIfctext = 105;
	int sNominalvalueIfctime = 106;
	int sNominalvalueIfctimestamp = 107;

	int testNominalvalue(EIfcpropertysinglevalue type) throws SdaiException;

	double getNominalvalue(EIfcpropertysinglevalue type, EIfcabsorbeddosemeasure node1) throws SdaiException; // case 2
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcaccelerationmeasure node1) throws SdaiException; // case 3
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcangularvelocitymeasure node1) throws SdaiException; // case 4
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcareadensitymeasure node1) throws SdaiException; // case 5
	A_integer getNominalvalue(EIfcpropertysinglevalue type, EIfccompoundplaneanglemeasure node1) throws SdaiException; // case 6
	double getNominalvalue(EIfcpropertysinglevalue type, EIfccurvaturemeasure node1) throws SdaiException; // case 7
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcdoseequivalentmeasure node1) throws SdaiException; // case 8
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcdynamicviscositymeasure node1) throws SdaiException; // case 9
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectriccapacitancemeasure node1) throws SdaiException; // case 10
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectricchargemeasure node1) throws SdaiException; // case 11
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectricconductancemeasure node1) throws SdaiException; // case 12
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectricresistancemeasure node1) throws SdaiException; // case 13
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectricvoltagemeasure node1) throws SdaiException; // case 14
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcenergymeasure node1) throws SdaiException; // case 15
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcforcemeasure node1) throws SdaiException; // case 16
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcfrequencymeasure node1) throws SdaiException; // case 17
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcheatfluxdensitymeasure node1) throws SdaiException; // case 18
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcheatingvaluemeasure node1) throws SdaiException; // case 19
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcilluminancemeasure node1) throws SdaiException; // case 20
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcinductancemeasure node1) throws SdaiException; // case 21
	int getNominalvalue(EIfcpropertysinglevalue type, EIfcintegercountratemeasure node1) throws SdaiException; // case 22
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcionconcentrationmeasure node1) throws SdaiException; // case 23
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcisothermalmoisturecapacitymeasure node1) throws SdaiException; // case 24
	double getNominalvalue(EIfcpropertysinglevalue type, EIfckinematicviscositymeasure node1) throws SdaiException; // case 25
	double getNominalvalue(EIfcpropertysinglevalue type, EIfclinearforcemeasure node1) throws SdaiException; // case 26
	double getNominalvalue(EIfcpropertysinglevalue type, EIfclinearmomentmeasure node1) throws SdaiException; // case 27
	double getNominalvalue(EIfcpropertysinglevalue type, EIfclinearstiffnessmeasure node1) throws SdaiException; // case 28
	double getNominalvalue(EIfcpropertysinglevalue type, EIfclinearvelocitymeasure node1) throws SdaiException; // case 29
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcluminousfluxmeasure node1) throws SdaiException; // case 30
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcluminousintensitydistributionmeasure node1) throws SdaiException; // case 31
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmagneticfluxdensitymeasure node1) throws SdaiException; // case 32
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmagneticfluxmeasure node1) throws SdaiException; // case 33
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmassdensitymeasure node1) throws SdaiException; // case 34
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmassflowratemeasure node1) throws SdaiException; // case 35
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmassperlengthmeasure node1) throws SdaiException; // case 36
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmodulusofelasticitymeasure node1) throws SdaiException; // case 37
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmodulusoflinearsubgradereactionmeasure node1) throws SdaiException; // case 38
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmodulusofrotationalsubgradereactionmeasure node1) throws SdaiException; // case 39
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException; // case 40
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmoisturediffusivitymeasure node1) throws SdaiException; // case 41
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmolecularweightmeasure node1) throws SdaiException; // case 42
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmomentofinertiameasure node1) throws SdaiException; // case 43
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmonetarymeasure node1) throws SdaiException; // case 44
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcphmeasure node1) throws SdaiException; // case 45
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcplanarforcemeasure node1) throws SdaiException; // case 46
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcpowermeasure node1) throws SdaiException; // case 47
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcpressuremeasure node1) throws SdaiException; // case 48
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcradioactivitymeasure node1) throws SdaiException; // case 49
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcrotationalfrequencymeasure node1) throws SdaiException; // case 50
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcrotationalmassmeasure node1) throws SdaiException; // case 51
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcrotationalstiffnessmeasure node1) throws SdaiException; // case 52
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsectionmodulusmeasure node1) throws SdaiException; // case 53
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsectionalareaintegralmeasure node1) throws SdaiException; // case 54
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcshearmodulusmeasure node1) throws SdaiException; // case 55
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsoundpowerlevelmeasure node1) throws SdaiException; // case 56
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsoundpowermeasure node1) throws SdaiException; // case 57
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsoundpressurelevelmeasure node1) throws SdaiException; // case 58
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsoundpressuremeasure node1) throws SdaiException; // case 59
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcspecificheatcapacitymeasure node1) throws SdaiException; // case 60
	double getNominalvalue(EIfcpropertysinglevalue type, EIfctemperaturegradientmeasure node1) throws SdaiException; // case 61
	double getNominalvalue(EIfcpropertysinglevalue type, EIfctemperaturerateofchangemeasure node1) throws SdaiException; // case 62
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermaladmittancemeasure node1) throws SdaiException; // case 63
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermalconductivitymeasure node1) throws SdaiException; // case 64
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermalexpansioncoefficientmeasure node1) throws SdaiException; // case 65
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermalresistancemeasure node1) throws SdaiException; // case 66
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermaltransmittancemeasure node1) throws SdaiException; // case 67
	double getNominalvalue(EIfcpropertysinglevalue type, EIfctorquemeasure node1) throws SdaiException; // case 68
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcvaporpermeabilitymeasure node1) throws SdaiException; // case 69
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcvolumetricflowratemeasure node1) throws SdaiException; // case 70
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcwarpingconstantmeasure node1) throws SdaiException; // case 71
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcwarpingmomentmeasure node1) throws SdaiException; // case 72
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcamountofsubstancemeasure node1) throws SdaiException; // case 73
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcareameasure node1) throws SdaiException; // case 74
	A_double getNominalvalue(EIfcpropertysinglevalue type, EIfccomplexnumber node1) throws SdaiException; // case 75
	double getNominalvalue(EIfcpropertysinglevalue type, EIfccontextdependentmeasure node1) throws SdaiException; // case 76
	double getNominalvalue(EIfcpropertysinglevalue type, EIfccountmeasure node1) throws SdaiException; // case 77
	String getNominalvalue(EIfcpropertysinglevalue type, EIfcdescriptivemeasure node1) throws SdaiException; // case 78
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcelectriccurrentmeasure node1) throws SdaiException; // case 79
	double getNominalvalue(EIfcpropertysinglevalue type, EIfclengthmeasure node1) throws SdaiException; // case 80
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcluminousintensitymeasure node1) throws SdaiException; // case 81
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcmassmeasure node1) throws SdaiException; // case 82
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcnonnegativelengthmeasure node1) throws SdaiException; // case 83
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcnormalisedratiomeasure node1) throws SdaiException; // case 84
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcnumericmeasure node1) throws SdaiException; // case 85
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcparametervalue node1) throws SdaiException; // case 86
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcplaneanglemeasure node1) throws SdaiException; // case 87
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcpositivelengthmeasure node1) throws SdaiException; // case 88
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcpositiveplaneanglemeasure node1) throws SdaiException; // case 89
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcpositiveratiomeasure node1) throws SdaiException; // case 90
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcratiomeasure node1) throws SdaiException; // case 91
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcsolidanglemeasure node1) throws SdaiException; // case 92
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcthermodynamictemperaturemeasure node1) throws SdaiException; // case 93
	double getNominalvalue(EIfcpropertysinglevalue type, EIfctimemeasure node1) throws SdaiException; // case 94
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcvolumemeasure node1) throws SdaiException; // case 95
	boolean getNominalvalue(EIfcpropertysinglevalue type, EIfcboolean node1) throws SdaiException; // case 96
	String getNominalvalue(EIfcpropertysinglevalue type, EIfcdate node1) throws SdaiException; // case 97
	String getNominalvalue(EIfcpropertysinglevalue type, EIfcdatetime node1) throws SdaiException; // case 98
	String getNominalvalue(EIfcpropertysinglevalue type, EIfcduration node1) throws SdaiException; // case 99
	String getNominalvalue(EIfcpropertysinglevalue type, EIfcidentifier node1) throws SdaiException; // case 100
	int getNominalvalue(EIfcpropertysinglevalue type, EIfcinteger node1) throws SdaiException; // case 101
	String getNominalvalue(EIfcpropertysinglevalue type, EIfclabel node1) throws SdaiException; // case 102
	int getNominalvalue(EIfcpropertysinglevalue type, EIfclogical node1) throws SdaiException; // case 103
	double getNominalvalue(EIfcpropertysinglevalue type, EIfcreal node1) throws SdaiException; // case 104
	String getNominalvalue(EIfcpropertysinglevalue type, EIfctext node1) throws SdaiException; // case 105
	String getNominalvalue(EIfcpropertysinglevalue type, EIfctime node1) throws SdaiException; // case 106
	int getNominalvalue(EIfcpropertysinglevalue type, EIfctimestamp node1) throws SdaiException; // case 107

	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcabsorbeddosemeasure node1) throws SdaiException; // case 2
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcaccelerationmeasure node1) throws SdaiException; // case 3
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcangularvelocitymeasure node1) throws SdaiException; // case 4
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcareadensitymeasure node1) throws SdaiException; // case 5
	A_integer createNominalvalue(EIfcpropertysinglevalue type, EIfccompoundplaneanglemeasure node1) throws SdaiException; // case 6
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfccurvaturemeasure node1) throws SdaiException; // case 7
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcdoseequivalentmeasure node1) throws SdaiException; // case 8
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcdynamicviscositymeasure node1) throws SdaiException; // case 9
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectriccapacitancemeasure node1) throws SdaiException; // case 10
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectricchargemeasure node1) throws SdaiException; // case 11
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectricconductancemeasure node1) throws SdaiException; // case 12
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectricresistancemeasure node1) throws SdaiException; // case 13
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectricvoltagemeasure node1) throws SdaiException; // case 14
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcenergymeasure node1) throws SdaiException; // case 15
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcforcemeasure node1) throws SdaiException; // case 16
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcfrequencymeasure node1) throws SdaiException; // case 17
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcheatfluxdensitymeasure node1) throws SdaiException; // case 18
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcheatingvaluemeasure node1) throws SdaiException; // case 19
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcilluminancemeasure node1) throws SdaiException; // case 20
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcinductancemeasure node1) throws SdaiException; // case 21
	void setNominalvalue(EIfcpropertysinglevalue type, int value, EIfcintegercountratemeasure node1) throws SdaiException; // case 22
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcionconcentrationmeasure node1) throws SdaiException; // case 23
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcisothermalmoisturecapacitymeasure node1) throws SdaiException; // case 24
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfckinematicviscositymeasure node1) throws SdaiException; // case 25
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfclinearforcemeasure node1) throws SdaiException; // case 26
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfclinearmomentmeasure node1) throws SdaiException; // case 27
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfclinearstiffnessmeasure node1) throws SdaiException; // case 28
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfclinearvelocitymeasure node1) throws SdaiException; // case 29
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcluminousfluxmeasure node1) throws SdaiException; // case 30
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcluminousintensitydistributionmeasure node1) throws SdaiException; // case 31
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmagneticfluxdensitymeasure node1) throws SdaiException; // case 32
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmagneticfluxmeasure node1) throws SdaiException; // case 33
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmassdensitymeasure node1) throws SdaiException; // case 34
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmassflowratemeasure node1) throws SdaiException; // case 35
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmassperlengthmeasure node1) throws SdaiException; // case 36
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmodulusofelasticitymeasure node1) throws SdaiException; // case 37
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmodulusoflinearsubgradereactionmeasure node1) throws SdaiException; // case 38
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmodulusofrotationalsubgradereactionmeasure node1) throws SdaiException; // case 39
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException; // case 40
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmoisturediffusivitymeasure node1) throws SdaiException; // case 41
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmolecularweightmeasure node1) throws SdaiException; // case 42
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmomentofinertiameasure node1) throws SdaiException; // case 43
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmonetarymeasure node1) throws SdaiException; // case 44
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcphmeasure node1) throws SdaiException; // case 45
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcplanarforcemeasure node1) throws SdaiException; // case 46
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcpowermeasure node1) throws SdaiException; // case 47
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcpressuremeasure node1) throws SdaiException; // case 48
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcradioactivitymeasure node1) throws SdaiException; // case 49
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcrotationalfrequencymeasure node1) throws SdaiException; // case 50
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcrotationalmassmeasure node1) throws SdaiException; // case 51
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcrotationalstiffnessmeasure node1) throws SdaiException; // case 52
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsectionmodulusmeasure node1) throws SdaiException; // case 53
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsectionalareaintegralmeasure node1) throws SdaiException; // case 54
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcshearmodulusmeasure node1) throws SdaiException; // case 55
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsoundpowerlevelmeasure node1) throws SdaiException; // case 56
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsoundpowermeasure node1) throws SdaiException; // case 57
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsoundpressurelevelmeasure node1) throws SdaiException; // case 58
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsoundpressuremeasure node1) throws SdaiException; // case 59
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcspecificheatcapacitymeasure node1) throws SdaiException; // case 60
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfctemperaturegradientmeasure node1) throws SdaiException; // case 61
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfctemperaturerateofchangemeasure node1) throws SdaiException; // case 62
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermaladmittancemeasure node1) throws SdaiException; // case 63
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermalconductivitymeasure node1) throws SdaiException; // case 64
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermalexpansioncoefficientmeasure node1) throws SdaiException; // case 65
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermalresistancemeasure node1) throws SdaiException; // case 66
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermaltransmittancemeasure node1) throws SdaiException; // case 67
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfctorquemeasure node1) throws SdaiException; // case 68
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcvaporpermeabilitymeasure node1) throws SdaiException; // case 69
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcvolumetricflowratemeasure node1) throws SdaiException; // case 70
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcwarpingconstantmeasure node1) throws SdaiException; // case 71
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcwarpingmomentmeasure node1) throws SdaiException; // case 72
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcamountofsubstancemeasure node1) throws SdaiException; // case 73
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcareameasure node1) throws SdaiException; // case 74
	A_double createNominalvalue(EIfcpropertysinglevalue type, EIfccomplexnumber node1) throws SdaiException; // case 75
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfccontextdependentmeasure node1) throws SdaiException; // case 76
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfccountmeasure node1) throws SdaiException; // case 77
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfcdescriptivemeasure node1) throws SdaiException; // case 78
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcelectriccurrentmeasure node1) throws SdaiException; // case 79
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfclengthmeasure node1) throws SdaiException; // case 80
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcluminousintensitymeasure node1) throws SdaiException; // case 81
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcmassmeasure node1) throws SdaiException; // case 82
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcnonnegativelengthmeasure node1) throws SdaiException; // case 83
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException; // case 84
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcnumericmeasure node1) throws SdaiException; // case 85
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcparametervalue node1) throws SdaiException; // case 86
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcplaneanglemeasure node1) throws SdaiException; // case 87
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcpositivelengthmeasure node1) throws SdaiException; // case 88
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcpositiveplaneanglemeasure node1) throws SdaiException; // case 89
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcpositiveratiomeasure node1) throws SdaiException; // case 90
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcratiomeasure node1) throws SdaiException; // case 91
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcsolidanglemeasure node1) throws SdaiException; // case 92
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcthermodynamictemperaturemeasure node1) throws SdaiException; // case 93
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfctimemeasure node1) throws SdaiException; // case 94
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcvolumemeasure node1) throws SdaiException; // case 95
	void setNominalvalue(EIfcpropertysinglevalue type, boolean value, EIfcboolean node1) throws SdaiException; // case 96
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfcdate node1) throws SdaiException; // case 97
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfcdatetime node1) throws SdaiException; // case 98
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfcduration node1) throws SdaiException; // case 99
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfcidentifier node1) throws SdaiException; // case 100
	void setNominalvalue(EIfcpropertysinglevalue type, int value, EIfcinteger node1) throws SdaiException; // case 101
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfclabel node1) throws SdaiException; // case 102
	void setNominalvalue(EIfcpropertysinglevalue type, int value, EIfclogical node1) throws SdaiException; // case 103
	void setNominalvalue(EIfcpropertysinglevalue type, double value, EIfcreal node1) throws SdaiException; // case 104
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfctext node1) throws SdaiException; // case 105
	void setNominalvalue(EIfcpropertysinglevalue type, String value, EIfctime node1) throws SdaiException; // case 106
	void setNominalvalue(EIfcpropertysinglevalue type, int value, EIfctimestamp node1) throws SdaiException; // case 107

	void unsetNominalvalue(EIfcpropertysinglevalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: Unit
	boolean testUnit(EIfcpropertysinglevalue type) throws SdaiException;

	EEntity getUnit(EIfcpropertysinglevalue type) throws SdaiException; // case 1

	void setUnit(EIfcpropertysinglevalue type, EEntity value) throws SdaiException; // case 1

	void unsetUnit(EIfcpropertysinglevalue type) throws SdaiException;

}
