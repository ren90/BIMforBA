/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLibraryReference

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclibraryreference extends CIfcexternalreference implements EIfclibraryreference {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclibraryreference.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Location: protected String a0;   Location - java inheritance - STRING
	// Identification: protected String a1;   Identification - java inheritance - STRING
	// Name: protected String a2;   Name - java inheritance - STRING
	// ExternalReferenceForResources: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	protected String a3; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // Language - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a5; // ReferencedLibrary - current entity - ENTITY IfcLibraryInformation
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// LibraryRefForObjects: protected Object  - inverse - current -  ENTITY IfcRelAssociatesLibrary
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Location - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// Identification - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// ExternalReferenceForResources - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// Language - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// ReferencedLibrary - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected Object a5;
	// LibraryRefForObjects - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a5 == old) {
			a5 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a5 == old) {
			a5 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4227=EXPLICIT_ATTRIBUTE('Location',#4225,0,#2687,$,.T.);
	//<01> generating methods for consolidated attribute:  Location
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4228=EXPLICIT_ATTRIBUTE('Identification',#4225,1,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Identification
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4229=EXPLICIT_ATTRIBUTE('Name',#4225,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4230=INVERSE_ATTRIBUTE('ExternalReferenceForResources',#4225,0,#4231,$,#4233,#8311,$,.F.);
	//<01> generating methods for consolidated attribute:  ExternalReferenceForResources
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4555=EXPLICIT_ATTRIBUTE('Description',#4553,0,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfclibraryreference type) throws SdaiException {
		return test_string(a3);
	}
	public String getDescription(EIfclibraryreference type) throws SdaiException {
		return get_string(a3);
	}
	public void setDescription(EIfclibraryreference type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetDescription(EIfclibraryreference type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfclibraryreference type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4556=EXPLICIT_ATTRIBUTE('Language',#4553,1,#2541,$,.T.);
	//<01> generating methods for consolidated attribute:  Language
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Language, base type: STRING
	public boolean testLanguage(EIfclibraryreference type) throws SdaiException {
		return test_string(a4);
	}
	public String getLanguage(EIfclibraryreference type) throws SdaiException {
		return get_string(a4);
	}
	public void setLanguage(EIfclibraryreference type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetLanguage(EIfclibraryreference type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLanguage(EIfclibraryreference type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4557=EXPLICIT_ATTRIBUTE('ReferencedLibrary',#4553,2,#4543,$,.T.);
	//<01> generating methods for consolidated attribute:  ReferencedLibrary
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ReferencedLibrary, base type: entity IfcLibraryInformation
	public static int usedinReferencedlibrary(EIfclibraryreference type, EIfclibraryinformation instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a5$, domain, result);
	}
	public boolean testReferencedlibrary(EIfclibraryreference type) throws SdaiException {
		return test_instance(a5);
	}
	public EIfclibraryinformation getReferencedlibrary(EIfclibraryreference type) throws SdaiException {
		return (EIfclibraryinformation)get_instance(a5);
	}
	public void setReferencedlibrary(EIfclibraryreference type, EIfclibraryinformation value) throws SdaiException {
		a5 = set_instance(a5, value);
	}
	public void unsetReferencedlibrary(EIfclibraryreference type) throws SdaiException {
		a5 = unset_instance(a5);
	}
	public static jsdai.dictionary.EAttribute attributeReferencedlibrary(EIfclibraryreference type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4558=INVERSE_ATTRIBUTE('LibraryRefForObjects',#4553,0,#5391,$,#5393,#8563,$,.F.);
	//<01> generating methods for consolidated attribute:  LibraryRefForObjects
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - LibraryRefForObjects : SET[0:-2147483648] OF IfcRelAssociatesLibrary FOR RelatingLibrary
	public AIfcrelassociateslibrary getLibraryrefforobjects(EIfclibraryreference type, ASdaiModel domain) throws SdaiException {
		AIfcrelassociateslibrary result = (AIfcrelassociateslibrary)get_inverse_aggregate(i1$);
		CIfcrelassociateslibrary.usedinRelatinglibrary(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeLibraryrefforobjects(EIfclibraryreference type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			a4 = null;
			a5 = unset_instance(a5);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getString(0);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getInstance(2, this, a5$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			a4 = null;
			a5 = unset_instance(a5);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getString(0);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getInstance(2, this, a5$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExternalReference
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcLibraryReference
		av.entityValues[1].setString(0, a3);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setInstance(2, a5);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExternalReference
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcLibraryReference
		av.entityValues[1].setString(0, a3);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setInstance(2, a5);
	}
}
