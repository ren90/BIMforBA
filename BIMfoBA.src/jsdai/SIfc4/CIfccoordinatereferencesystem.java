/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcCoordinateReferenceSystem

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfccoordinatereferencesystem extends CEntity implements EIfccoordinatereferencesystem {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfccoordinatereferencesystem.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // GeodeticDatum - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a3; // VerticalDatum - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// GeodeticDatum - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// VerticalDatum - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3832=EXPLICIT_ATTRIBUTE('Name',#3830,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfccoordinatereferencesystem type) throws SdaiException {
		return test_string(a0);
	}
	public String getName(EIfccoordinatereferencesystem type) throws SdaiException {
		return get_string(a0);
	}
	public void setName(EIfccoordinatereferencesystem type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetName(EIfccoordinatereferencesystem type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfccoordinatereferencesystem type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3833=EXPLICIT_ATTRIBUTE('Description',#3830,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfccoordinatereferencesystem type) throws SdaiException {
		return test_string(a1);
	}
	public String getDescription(EIfccoordinatereferencesystem type) throws SdaiException {
		return get_string(a1);
	}
	public void setDescription(EIfccoordinatereferencesystem type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetDescription(EIfccoordinatereferencesystem type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfccoordinatereferencesystem type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3834=EXPLICIT_ATTRIBUTE('GeodeticDatum',#3830,2,#2523,$,.F.);
	//<01> generating methods for consolidated attribute:  GeodeticDatum
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: GeodeticDatum, base type: STRING
	public boolean testGeodeticdatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return test_string(a2);
	}
	public String getGeodeticdatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return get_string(a2);
	}
	public void setGeodeticdatum(EIfccoordinatereferencesystem type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetGeodeticdatum(EIfccoordinatereferencesystem type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeGeodeticdatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3835=EXPLICIT_ATTRIBUTE('VerticalDatum',#3830,3,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  VerticalDatum
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: VerticalDatum, base type: STRING
	public boolean testVerticaldatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return test_string(a3);
	}
	public String getVerticaldatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return get_string(a3);
	}
	public void setVerticaldatum(EIfccoordinatereferencesystem type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetVerticaldatum(EIfccoordinatereferencesystem type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeVerticaldatum(EIfccoordinatereferencesystem type) throws SdaiException {
		return a3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCoordinateReferenceSystem
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCoordinateReferenceSystem
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setString(3, a3);
	}
}
