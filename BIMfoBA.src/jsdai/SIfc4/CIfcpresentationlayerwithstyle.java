/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcPresentationLayerWithStyle

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcpresentationlayerwithstyle extends CIfcpresentationlayerassignment implements EIfcpresentationlayerwithstyle {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcpresentationlayerwithstyle.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// Description: protected String a1;   Description - java inheritance - STRING
	// AssignedItems: protected AIfclayereditem a2;   AssignedItems - java inheritance - SET OF SELECT
	// Identifier: protected String a3;   Identifier - java inheritance - STRING
	protected int a4; // LayerOn - current entity - LOGICAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a5; // LayerFrozen - current entity - LOGICAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a6; // LayerBlocked - current entity - LOGICAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected AIfcpresentationstyle a7; // LayerStyles - current entity - SET OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// AssignedItems - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected AIfclayereditem a2;
	// Identifier - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// LayerOn - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a4;
	// LayerFrozen - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a5;
	// LayerBlocked - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected int a6;
	// LayerStyles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected AIfcpresentationstyle a7;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5025=EXPLICIT_ATTRIBUTE('Name',#5023,0,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5026=EXPLICIT_ATTRIBUTE('Description',#5023,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5027=EXPLICIT_ATTRIBUTE('AssignedItems',#5023,2,#7015,$,.F.);
	//<01> generating methods for consolidated attribute:  AssignedItems
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: AssignedItems, base type: SET OF SELECT
	public static int usedinAssigneditems(EIfcpresentationlayerassignment type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #5028=EXPLICIT_ATTRIBUTE('Identifier',#5023,3,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Identifier
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5031=EXPLICIT_ATTRIBUTE('LayerOn',#5029,0,#5,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerOn
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LayerOn, base type: LOGICAL
	public boolean testLayeron(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return test_logical(a4);
	}
	public int getLayeron(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return get_logical(a4);
	}
	public void setLayeron(EIfcpresentationlayerwithstyle type, int value) throws SdaiException {
		a4 = set_logical(value);
	}
	public void unsetLayeron(EIfcpresentationlayerwithstyle type) throws SdaiException {
		a4 = unset_logical();
	}
	public static jsdai.dictionary.EAttribute attributeLayeron(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5032=EXPLICIT_ATTRIBUTE('LayerFrozen',#5029,1,#5,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerFrozen
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LayerFrozen, base type: LOGICAL
	public boolean testLayerfrozen(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return test_logical(a5);
	}
	public int getLayerfrozen(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return get_logical(a5);
	}
	public void setLayerfrozen(EIfcpresentationlayerwithstyle type, int value) throws SdaiException {
		a5 = set_logical(value);
	}
	public void unsetLayerfrozen(EIfcpresentationlayerwithstyle type) throws SdaiException {
		a5 = unset_logical();
	}
	public static jsdai.dictionary.EAttribute attributeLayerfrozen(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #5033=EXPLICIT_ATTRIBUTE('LayerBlocked',#5029,2,#5,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerBlocked
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LayerBlocked, base type: LOGICAL
	public boolean testLayerblocked(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return test_logical(a6);
	}
	public int getLayerblocked(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return get_logical(a6);
	}
	public void setLayerblocked(EIfcpresentationlayerwithstyle type, int value) throws SdaiException {
		a6 = set_logical(value);
	}
	public void unsetLayerblocked(EIfcpresentationlayerwithstyle type) throws SdaiException {
		a6 = unset_logical();
	}
	public static jsdai.dictionary.EAttribute attributeLayerblocked(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #5034=EXPLICIT_ATTRIBUTE('LayerStyles',#5029,3,#7017,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerStyles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: LayerStyles, base type: SET OF ENTITY
	public static int usedinLayerstyles(EIfcpresentationlayerwithstyle type, EIfcpresentationstyle instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testLayerstyles(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return test_aggregate(a7);
	}
	public AIfcpresentationstyle getLayerstyles(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return (AIfcpresentationstyle)get_aggregate(a7);
	}
	public AIfcpresentationstyle createLayerstyles(EIfcpresentationlayerwithstyle type) throws SdaiException {
		a7 = (AIfcpresentationstyle)create_aggregate_class(a7, a7$,  AIfcpresentationstyle.class, 0);
		return a7;
	}
	public void unsetLayerstyles(EIfcpresentationlayerwithstyle type) throws SdaiException {
		unset_aggregate(a7);
		a7 = null;
	}
	public static jsdai.dictionary.EAttribute attributeLayerstyles(EIfcpresentationlayerwithstyle type) throws SdaiException {
		return a7$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			a3 = null;
			a4 = 0;
			a5 = 0;
			a6 = 0;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = (AIfclayereditem)av.entityValues[0].getInstanceAggregate(2, a2$, this);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[1].getLogical(0);
		a5 = av.entityValues[1].getLogical(1);
		a6 = av.entityValues[1].getLogical(2);
		a7 = (AIfcpresentationstyle)av.entityValues[1].getInstanceAggregate(3, a7$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			a3 = null;
			a4 = 0;
			a5 = 0;
			a6 = 0;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = (AIfclayereditem)av.entityValues[0].getInstanceAggregate(2, a2$, this);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[1].getLogical(0);
		a5 = av.entityValues[1].getLogical(1);
		a6 = av.entityValues[1].getLogical(2);
		a7 = (AIfcpresentationstyle)av.entityValues[1].getInstanceAggregate(3, a7$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationLayerAssignment
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstanceAggregate(2, a2);
		av.entityValues[0].setString(3, a3);
		// partial entity: IfcPresentationLayerWithStyle
		av.entityValues[1].setLogical(0, a4);
		av.entityValues[1].setLogical(1, a5);
		av.entityValues[1].setLogical(2, a6);
		av.entityValues[1].setInstanceAggregate(3, a7);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationLayerAssignment
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstanceAggregate(2, a2);
		av.entityValues[0].setString(3, a3);
		// partial entity: IfcPresentationLayerWithStyle
		av.entityValues[1].setLogical(0, a4);
		av.entityValues[1].setLogical(1, a5);
		av.entityValues[1].setLogical(2, a6);
		av.entityValues[1].setInstanceAggregate(3, a7);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcpresentationlayerwithstyleApplicableonlytoitems(SdaiContext _context) throws SdaiException {
	




									Value _internal_aggregate_source162 = Value.alloc(ExpressTypes.SET_GENERIC_TYPE).set(_context, get(jsdai.SIfc4.CIfcpresentationlayerassignment.attributeAssigneditems(null)));
									Value _result160 = Value.alloc(_internal_aggregate_source162).create();
									if (_internal_aggregate_source162.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i161 = 1; _i161 <= _internal_aggregate_source162.getMemberCount(); _i161++) {
											Value _implicit_37_temp = _internal_aggregate_source162.getByIndex(_i161);
									
																	Value _elements158 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																	_elements158.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCGEOMETRICREPRESENTATIONITEM", "IFC4"));
																	_elements158.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCMAPPEDITEM", "IFC4"));
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(Value.alloc().mulOrIntersect(_context, _implicit_37_temp.typeOfV(_context), _elements158)), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).getLogical() == 2) {
												_result160.addMember(_context, _implicit_37_temp);
											} else
											if (_internal_aggregate_source162.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_37_temp.unset();
												_result160.addMember(_context, _implicit_37_temp);
											}
										}
									} else {
										_result160.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result160), Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(Value.alloc(ExpressTypes.SET_GENERIC_TYPE).set(_context, get(jsdai.SIfc4.CIfcpresentationlayerassignment.attributeAssigneditems(null)))))).getLogical());
	}
}
