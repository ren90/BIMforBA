/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcTaskTimeRecurring

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfctasktimerecurring extends CIfctasktime implements EIfctasktimerecurring {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfctasktimerecurring.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// DataOrigin: protected int a1;   DataOrigin - java inheritance - ENUMERATION IfcDataOriginEnum
	// UserDefinedDataOrigin: protected String a2;   UserDefinedDataOrigin - java inheritance - STRING
	// DurationType: protected int a3;   DurationType - java inheritance - ENUMERATION IfcTaskDurationEnum
	// ScheduleDuration: protected String a4;   ScheduleDuration - java inheritance - STRING
	// ScheduleStart: protected String a5;   ScheduleStart - java inheritance - STRING
	// ScheduleFinish: protected String a6;   ScheduleFinish - java inheritance - STRING
	// EarlyStart: protected String a7;   EarlyStart - java inheritance - STRING
	// EarlyFinish: protected String a8;   EarlyFinish - java inheritance - STRING
	// LateStart: protected String a9;   LateStart - java inheritance - STRING
	// LateFinish: protected String a10;   LateFinish - java inheritance - STRING
	// FreeFloat: protected String a11;   FreeFloat - java inheritance - STRING
	// TotalFloat: protected String a12;   TotalFloat - java inheritance - STRING
	// IsCritical: protected int a13;   IsCritical - java inheritance - BOOLEAN
	// StatusTime: protected String a14;   StatusTime - java inheritance - STRING
	// ActualDuration: protected String a15;   ActualDuration - java inheritance - STRING
	// ActualStart: protected String a16;   ActualStart - java inheritance - STRING
	// ActualFinish: protected String a17;   ActualFinish - java inheritance - STRING
	// RemainingTime: protected String a18;   RemainingTime - java inheritance - STRING
	// Completion: protected double a19;   Completion - java inheritance - REAL
	protected Object a20; // Recurrance - current entity - ENTITY IfcRecurrencePattern
	protected static final jsdai.dictionary.CExplicit_attribute a20$ = CEntity.initExplicitAttribute(definition, 20);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// DataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected int a1;
	// UserDefinedDataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// DurationType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected int a3;
	// ScheduleDuration - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected String a4;
	// ScheduleStart - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected String a5;
	// ScheduleFinish - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// protected String a6;
	// EarlyStart - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	// protected String a7;
	// EarlyFinish - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	// protected String a8;
	// LateStart - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	// protected String a9;
	// LateFinish - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	// protected String a10;
	// FreeFloat - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a11$ = CEntity.initExplicitAttribute(definition, 11);
	// protected String a11;
	// TotalFloat - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a12$ = CEntity.initExplicitAttribute(definition, 12);
	// protected String a12;
	// IsCritical - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a13$ = CEntity.initExplicitAttribute(definition, 13);
	// protected int a13;
	// StatusTime - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a14$ = CEntity.initExplicitAttribute(definition, 14);
	// protected String a14;
	// ActualDuration - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a15$ = CEntity.initExplicitAttribute(definition, 15);
	// protected String a15;
	// ActualStart - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a16$ = CEntity.initExplicitAttribute(definition, 16);
	// protected String a16;
	// ActualFinish - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a17$ = CEntity.initExplicitAttribute(definition, 17);
	// protected String a17;
	// RemainingTime - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a18$ = CEntity.initExplicitAttribute(definition, 18);
	// protected String a18;
	// Completion - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a19$ = CEntity.initExplicitAttribute(definition, 19);
	// protected double a19;
	// Recurrance - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a20$ = CEntity.initExplicitAttribute(definition, 20);
	protected Object a20;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a20 == old) {
			a20 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a20 == old) {
			a20 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5638=EXPLICIT_ATTRIBUTE('Name',#5636,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5639=EXPLICIT_ATTRIBUTE('DataOrigin',#5636,1,#2803,$,.T.);
	//<01> generating methods for consolidated attribute:  DataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5640=EXPLICIT_ATTRIBUTE('UserDefinedDataOrigin',#5636,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedDataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6097=EXPLICIT_ATTRIBUTE('DurationType',#6095,0,#3055,$,.T.);
	//<01> generating methods for consolidated attribute:  DurationType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6098=EXPLICIT_ATTRIBUTE('ScheduleDuration',#6095,1,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleDuration
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6099=EXPLICIT_ATTRIBUTE('ScheduleStart',#6095,2,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleStart
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6100=EXPLICIT_ATTRIBUTE('ScheduleFinish',#6095,3,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleFinish
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6101=EXPLICIT_ATTRIBUTE('EarlyStart',#6095,4,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  EarlyStart
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6102=EXPLICIT_ATTRIBUTE('EarlyFinish',#6095,5,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  EarlyFinish
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6103=EXPLICIT_ATTRIBUTE('LateStart',#6095,6,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  LateStart
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6104=EXPLICIT_ATTRIBUTE('LateFinish',#6095,7,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  LateFinish
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6105=EXPLICIT_ATTRIBUTE('FreeFloat',#6095,8,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  FreeFloat
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6106=EXPLICIT_ATTRIBUTE('TotalFloat',#6095,9,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  TotalFloat
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6107=EXPLICIT_ATTRIBUTE('IsCritical',#6095,10,#6,$,.T.);
	//<01> generating methods for consolidated attribute:  IsCritical
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6108=EXPLICIT_ATTRIBUTE('StatusTime',#6095,11,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  StatusTime
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6109=EXPLICIT_ATTRIBUTE('ActualDuration',#6095,12,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualDuration
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6110=EXPLICIT_ATTRIBUTE('ActualStart',#6095,13,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualStart
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6111=EXPLICIT_ATTRIBUTE('ActualFinish',#6095,14,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualFinish
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6112=EXPLICIT_ATTRIBUTE('RemainingTime',#6095,15,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  RemainingTime
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6113=EXPLICIT_ATTRIBUTE('Completion',#6095,16,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  Completion
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #6116=EXPLICIT_ATTRIBUTE('Recurrance',#6114,0,#5266,$,.F.);
	//<01> generating methods for consolidated attribute:  Recurrance
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Recurrance, base type: entity IfcRecurrencePattern
	public static int usedinRecurrance(EIfctasktimerecurring type, EIfcrecurrencepattern instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a20$, domain, result);
	}
	public boolean testRecurrance(EIfctasktimerecurring type) throws SdaiException {
		return test_instance(a20);
	}
	public EIfcrecurrencepattern getRecurrance(EIfctasktimerecurring type) throws SdaiException {
		return (EIfcrecurrencepattern)get_instance(a20);
	}
	public void setRecurrance(EIfctasktimerecurring type, EIfcrecurrencepattern value) throws SdaiException {
		a20 = set_instance(a20, value);
	}
	public void unsetRecurrance(EIfctasktimerecurring type) throws SdaiException {
		a20 = unset_instance(a20);
	}
	public static jsdai.dictionary.EAttribute attributeRecurrance(EIfctasktimerecurring type) throws SdaiException {
		return a20$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			a2 = null;
			a3 = 0;
			a4 = null;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = null;
			a10 = null;
			a11 = null;
			a12 = null;
			a13 = 0;
			a14 = null;
			a15 = null;
			a16 = null;
			a17 = null;
			a18 = null;
			a19 = Double.NaN;
			a20 = unset_instance(a20);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getEnumeration(0, a3$);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getString(2);
		a6 = av.entityValues[1].getString(3);
		a7 = av.entityValues[1].getString(4);
		a8 = av.entityValues[1].getString(5);
		a9 = av.entityValues[1].getString(6);
		a10 = av.entityValues[1].getString(7);
		a11 = av.entityValues[1].getString(8);
		a12 = av.entityValues[1].getString(9);
		a13 = av.entityValues[1].getBoolean(10);
		a14 = av.entityValues[1].getString(11);
		a15 = av.entityValues[1].getString(12);
		a16 = av.entityValues[1].getString(13);
		a17 = av.entityValues[1].getString(14);
		a18 = av.entityValues[1].getString(15);
		a19 = av.entityValues[1].getDouble(16);
		a20 = av.entityValues[2].getInstance(0, this, a20$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = 0;
			a2 = null;
			a3 = 0;
			a4 = null;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = null;
			a10 = null;
			a11 = null;
			a12 = null;
			a13 = 0;
			a14 = null;
			a15 = null;
			a16 = null;
			a17 = null;
			a18 = null;
			a19 = Double.NaN;
			a20 = unset_instance(a20);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[1].getEnumeration(0, a3$);
		a4 = av.entityValues[1].getString(1);
		a5 = av.entityValues[1].getString(2);
		a6 = av.entityValues[1].getString(3);
		a7 = av.entityValues[1].getString(4);
		a8 = av.entityValues[1].getString(5);
		a9 = av.entityValues[1].getString(6);
		a10 = av.entityValues[1].getString(7);
		a11 = av.entityValues[1].getString(8);
		a12 = av.entityValues[1].getString(9);
		a13 = av.entityValues[1].getBoolean(10);
		a14 = av.entityValues[1].getString(11);
		a15 = av.entityValues[1].getString(12);
		a16 = av.entityValues[1].getString(13);
		a17 = av.entityValues[1].getString(14);
		a18 = av.entityValues[1].getString(15);
		a19 = av.entityValues[1].getDouble(16);
		a20 = av.entityValues[2].getInstance(0, this, a20$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcSchedulingTime
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcTaskTime
		av.entityValues[1].setEnumeration(0, a3, a3$);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setString(2, a5);
		av.entityValues[1].setString(3, a6);
		av.entityValues[1].setString(4, a7);
		av.entityValues[1].setString(5, a8);
		av.entityValues[1].setString(6, a9);
		av.entityValues[1].setString(7, a10);
		av.entityValues[1].setString(8, a11);
		av.entityValues[1].setString(9, a12);
		av.entityValues[1].setBoolean(10, a13);
		av.entityValues[1].setString(11, a14);
		av.entityValues[1].setString(12, a15);
		av.entityValues[1].setString(13, a16);
		av.entityValues[1].setString(14, a17);
		av.entityValues[1].setString(15, a18);
		av.entityValues[1].setDouble(16, a19);
		// partial entity: IfcTaskTimeRecurring
		av.entityValues[2].setInstance(0, a20);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcSchedulingTime
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcTaskTime
		av.entityValues[1].setEnumeration(0, a3, a3$);
		av.entityValues[1].setString(1, a4);
		av.entityValues[1].setString(2, a5);
		av.entityValues[1].setString(3, a6);
		av.entityValues[1].setString(4, a7);
		av.entityValues[1].setString(5, a8);
		av.entityValues[1].setString(6, a9);
		av.entityValues[1].setString(7, a10);
		av.entityValues[1].setString(8, a11);
		av.entityValues[1].setString(9, a12);
		av.entityValues[1].setBoolean(10, a13);
		av.entityValues[1].setString(11, a14);
		av.entityValues[1].setString(12, a15);
		av.entityValues[1].setString(13, a16);
		av.entityValues[1].setString(14, a17);
		av.entityValues[1].setString(15, a18);
		av.entityValues[1].setDouble(16, a19);
		// partial entity: IfcTaskTimeRecurring
		av.entityValues[2].setInstance(0, a20);
	}
}
