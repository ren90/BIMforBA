/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcFailureConnectionCondition

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcfailureconnectioncondition extends EIfcstructuralconnectioncondition {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:TensionFailureX, base type: REAL
	public boolean testTensionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getTensionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setTensionfailurex(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetTensionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:TensionFailureY, base type: REAL
	public boolean testTensionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getTensionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setTensionfailurey(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetTensionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:TensionFailureZ, base type: REAL
	public boolean testTensionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getTensionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setTensionfailurez(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetTensionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:CompressionFailureX, base type: REAL
	public boolean testCompressionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getCompressionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setCompressionfailurex(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetCompressionfailurex(EIfcfailureconnectioncondition type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:CompressionFailureY, base type: REAL
	public boolean testCompressionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getCompressionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setCompressionfailurey(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetCompressionfailurey(EIfcfailureconnectioncondition type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:CompressionFailureZ, base type: REAL
	public boolean testCompressionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;
	public double getCompressionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;
	public void setCompressionfailurez(EIfcfailureconnectioncondition type, double value) throws SdaiException;
	public void unsetCompressionfailurez(EIfcfailureconnectioncondition type) throws SdaiException;

}
