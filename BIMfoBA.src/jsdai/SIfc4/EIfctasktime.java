/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcTaskTime

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfctasktime extends EIfcschedulingtime {

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:DurationType, base type: ENUMERATION
	public boolean testDurationtype(EIfctasktime type) throws SdaiException;
	public int getDurationtype(EIfctasktime type) throws SdaiException;
	public void setDurationtype(EIfctasktime type, int value) throws SdaiException;
	public void unsetDurationtype(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ScheduleDuration, base type: STRING
	public boolean testScheduleduration(EIfctasktime type) throws SdaiException;
	public String getScheduleduration(EIfctasktime type) throws SdaiException;
	public void setScheduleduration(EIfctasktime type, String value) throws SdaiException;
	public void unsetScheduleduration(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ScheduleStart, base type: STRING
	public boolean testSchedulestart(EIfctasktime type) throws SdaiException;
	public String getSchedulestart(EIfctasktime type) throws SdaiException;
	public void setSchedulestart(EIfctasktime type, String value) throws SdaiException;
	public void unsetSchedulestart(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ScheduleFinish, base type: STRING
	public boolean testSchedulefinish(EIfctasktime type) throws SdaiException;
	public String getSchedulefinish(EIfctasktime type) throws SdaiException;
	public void setSchedulefinish(EIfctasktime type, String value) throws SdaiException;
	public void unsetSchedulefinish(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:EarlyStart, base type: STRING
	public boolean testEarlystart(EIfctasktime type) throws SdaiException;
	public String getEarlystart(EIfctasktime type) throws SdaiException;
	public void setEarlystart(EIfctasktime type, String value) throws SdaiException;
	public void unsetEarlystart(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:EarlyFinish, base type: STRING
	public boolean testEarlyfinish(EIfctasktime type) throws SdaiException;
	public String getEarlyfinish(EIfctasktime type) throws SdaiException;
	public void setEarlyfinish(EIfctasktime type, String value) throws SdaiException;
	public void unsetEarlyfinish(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LateStart, base type: STRING
	public boolean testLatestart(EIfctasktime type) throws SdaiException;
	public String getLatestart(EIfctasktime type) throws SdaiException;
	public void setLatestart(EIfctasktime type, String value) throws SdaiException;
	public void unsetLatestart(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:LateFinish, base type: STRING
	public boolean testLatefinish(EIfctasktime type) throws SdaiException;
	public String getLatefinish(EIfctasktime type) throws SdaiException;
	public void setLatefinish(EIfctasktime type, String value) throws SdaiException;
	public void unsetLatefinish(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:FreeFloat, base type: STRING
	public boolean testFreefloat(EIfctasktime type) throws SdaiException;
	public String getFreefloat(EIfctasktime type) throws SdaiException;
	public void setFreefloat(EIfctasktime type, String value) throws SdaiException;
	public void unsetFreefloat(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:TotalFloat, base type: STRING
	public boolean testTotalfloat(EIfctasktime type) throws SdaiException;
	public String getTotalfloat(EIfctasktime type) throws SdaiException;
	public void setTotalfloat(EIfctasktime type, String value) throws SdaiException;
	public void unsetTotalfloat(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:IsCritical, base type: BOOLEAN
	public boolean testIscritical(EIfctasktime type) throws SdaiException;
	public boolean getIscritical(EIfctasktime type) throws SdaiException;
	public void setIscritical(EIfctasktime type, boolean value) throws SdaiException;
	public void unsetIscritical(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:StatusTime, base type: STRING
	public boolean testStatustime(EIfctasktime type) throws SdaiException;
	public String getStatustime(EIfctasktime type) throws SdaiException;
	public void setStatustime(EIfctasktime type, String value) throws SdaiException;
	public void unsetStatustime(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ActualDuration, base type: STRING
	public boolean testActualduration(EIfctasktime type) throws SdaiException;
	public String getActualduration(EIfctasktime type) throws SdaiException;
	public void setActualduration(EIfctasktime type, String value) throws SdaiException;
	public void unsetActualduration(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ActualStart, base type: STRING
	public boolean testActualstart(EIfctasktime type) throws SdaiException;
	public String getActualstart(EIfctasktime type) throws SdaiException;
	public void setActualstart(EIfctasktime type, String value) throws SdaiException;
	public void unsetActualstart(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ActualFinish, base type: STRING
	public boolean testActualfinish(EIfctasktime type) throws SdaiException;
	public String getActualfinish(EIfctasktime type) throws SdaiException;
	public void setActualfinish(EIfctasktime type, String value) throws SdaiException;
	public void unsetActualfinish(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:RemainingTime, base type: STRING
	public boolean testRemainingtime(EIfctasktime type) throws SdaiException;
	public String getRemainingtime(EIfctasktime type) throws SdaiException;
	public void setRemainingtime(EIfctasktime type, String value) throws SdaiException;
	public void unsetRemainingtime(EIfctasktime type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Completion, base type: REAL
	public boolean testCompletion(EIfctasktime type) throws SdaiException;
	public double getCompletion(EIfctasktime type) throws SdaiException;
	public void setCompletion(EIfctasktime type, double value) throws SdaiException;
	public void unsetCompletion(EIfctasktime type) throws SdaiException;

}
