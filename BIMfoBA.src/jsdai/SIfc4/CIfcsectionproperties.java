/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcSectionProperties

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcsectionproperties extends CIfcpredefinedproperties implements EIfcsectionproperties {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcsectionproperties.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	protected int a0; // SectionType - current entity - ENUMERATION IfcSectionTypeEnum
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a1; // StartProfile - current entity - ENTITY IfcProfileDef
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a2; // EndProfile - current entity - ENTITY IfcProfileDef
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// SectionType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0;
	// StartProfile - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a1;
	// EndProfile - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected Object a2;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a1 == old) {
			a1 = newer;
		}
		if (a2 == old) {
			a2 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a1 == old) {
			a1 = newer;
		}
		if (a2 == old) {
			a2 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5104=INVERSE_ATTRIBUTE('HasExternalReferences',#5102,0,#4231,$,#4234,#8918,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5643=EXPLICIT_ATTRIBUTE('SectionType',#5641,0,#3007,$,.F.);
	//<01> generating methods for consolidated attribute:  SectionType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:SectionType, base type: ENUMERATION
	public boolean testSectiontype(EIfcsectionproperties type) throws SdaiException {
		return test_enumeration(a0);
	}
	public int getSectiontype(EIfcsectionproperties type) throws SdaiException {
		return get_enumeration(a0);
	}
	public void setSectiontype(EIfcsectionproperties type, int value) throws SdaiException {
		a0 = set_enumeration(value, a0$);
	}
	public void unsetSectiontype(EIfcsectionproperties type) throws SdaiException {
		a0 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeSectiontype(EIfcsectionproperties type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #5644=EXPLICIT_ATTRIBUTE('StartProfile',#5641,1,#5068,$,.F.);
	//<01> generating methods for consolidated attribute:  StartProfile
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : StartProfile, base type: entity IfcProfileDef
	public static int usedinStartprofile(EIfcsectionproperties type, EIfcprofiledef instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	public boolean testStartprofile(EIfcsectionproperties type) throws SdaiException {
		return test_instance(a1);
	}
	public EIfcprofiledef getStartprofile(EIfcsectionproperties type) throws SdaiException {
		return (EIfcprofiledef)get_instance(a1);
	}
	public void setStartprofile(EIfcsectionproperties type, EIfcprofiledef value) throws SdaiException {
		a1 = set_instance(a1, value);
	}
	public void unsetStartprofile(EIfcsectionproperties type) throws SdaiException {
		a1 = unset_instance(a1);
	}
	public static jsdai.dictionary.EAttribute attributeStartprofile(EIfcsectionproperties type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5645=EXPLICIT_ATTRIBUTE('EndProfile',#5641,2,#5068,$,.T.);
	//<01> generating methods for consolidated attribute:  EndProfile
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : EndProfile, base type: entity IfcProfileDef
	public static int usedinEndprofile(EIfcsectionproperties type, EIfcprofiledef instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	public boolean testEndprofile(EIfcsectionproperties type) throws SdaiException {
		return test_instance(a2);
	}
	public EIfcprofiledef getEndprofile(EIfcsectionproperties type) throws SdaiException {
		return (EIfcprofiledef)get_instance(a2);
	}
	public void setEndprofile(EIfcsectionproperties type, EIfcprofiledef value) throws SdaiException {
		a2 = set_instance(a2, value);
	}
	public void unsetEndprofile(EIfcsectionproperties type) throws SdaiException {
		a2 = unset_instance(a2);
	}
	public static jsdai.dictionary.EAttribute attributeEndprofile(EIfcsectionproperties type) throws SdaiException {
		return a2$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			return;
		}
		a0 = av.entityValues[2].getEnumeration(0, a0$);
		a1 = av.entityValues[2].getInstance(1, this, a1$);
		a2 = av.entityValues[2].getInstance(2, this, a2$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			return;
		}
		a0 = av.entityValues[2].getEnumeration(0, a0$);
		a1 = av.entityValues[2].getInstance(1, this, a1$);
		a2 = av.entityValues[2].getInstance(2, this, a2$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPreDefinedProperties
		// partial entity: IfcPropertyAbstraction
		// partial entity: IfcSectionProperties
		av.entityValues[2].setEnumeration(0, a0, a0$);
		av.entityValues[2].setInstance(1, a1);
		av.entityValues[2].setInstance(2, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPreDefinedProperties
		// partial entity: IfcPropertyAbstraction
		// partial entity: IfcSectionProperties
		av.entityValues[2].setEnumeration(0, a0, a0$);
		av.entityValues[2].setInstance(1, a1);
		av.entityValues[2].setInstance(2, a2);
	}
}
