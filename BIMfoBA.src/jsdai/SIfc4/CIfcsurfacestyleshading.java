/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcSurfaceStyleShading

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcsurfacestyleshading extends CIfcpresentationitem implements EIfcsurfacestyleshading {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcsurfacestyleshading.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected Object a0; // SurfaceColour - current entity - ENTITY IfcColourRgb
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// SurfaceColour - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #6004=EXPLICIT_ATTRIBUTE('SurfaceColour',#6002,0,#3650,$,.F.);
	//<01> generating methods for consolidated attribute:  SurfaceColour
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : SurfaceColour, base type: entity IfcColourRgb
	public static int usedinSurfacecolour(EIfcsurfacestyleshading type, EIfccolourrgb instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testSurfacecolour(EIfcsurfacestyleshading type) throws SdaiException {
		return test_instance(a0);
	}
	public EIfccolourrgb getSurfacecolour(EIfcsurfacestyleshading type) throws SdaiException {
		return (EIfccolourrgb)get_instance(a0);
	}
	public void setSurfacecolour(EIfcsurfacestyleshading type, EIfccolourrgb value) throws SdaiException {
		a0 = set_instance(a0, value);
	}
	public void unsetSurfacecolour(EIfcsurfacestyleshading type) throws SdaiException {
		a0 = unset_instance(a0);
	}
	public static jsdai.dictionary.EAttribute attributeSurfacecolour(EIfcsurfacestyleshading type) throws SdaiException {
		return a0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcSurfaceStyleShading
		av.entityValues[1].setInstance(0, a0);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcSurfaceStyleShading
		av.entityValues[1].setInstance(0, a0);
	}
}
