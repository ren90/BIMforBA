/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcAppliedValue

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcappliedvalue extends EEntity {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Name, base type: STRING
	public boolean testName(EIfcappliedvalue type) throws SdaiException;
	public String getName(EIfcappliedvalue type) throws SdaiException;
	public void setName(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetName(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Description, base type: STRING
	public boolean testDescription(EIfcappliedvalue type) throws SdaiException;
	public String getDescription(EIfcappliedvalue type) throws SdaiException;
	public void setDescription(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetDescription(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: AppliedValue
	int sAppliedvalueIfcabsorbeddosemeasure = 2;
	int sAppliedvalueIfcaccelerationmeasure = 3;
	int sAppliedvalueIfcangularvelocitymeasure = 4;
	int sAppliedvalueIfcareadensitymeasure = 5;
	int sAppliedvalueIfccompoundplaneanglemeasure = 6;
	int sAppliedvalueIfccurvaturemeasure = 7;
	int sAppliedvalueIfcdoseequivalentmeasure = 8;
	int sAppliedvalueIfcdynamicviscositymeasure = 9;
	int sAppliedvalueIfcelectriccapacitancemeasure = 10;
	int sAppliedvalueIfcelectricchargemeasure = 11;
	int sAppliedvalueIfcelectricconductancemeasure = 12;
	int sAppliedvalueIfcelectricresistancemeasure = 13;
	int sAppliedvalueIfcelectricvoltagemeasure = 14;
	int sAppliedvalueIfcenergymeasure = 15;
	int sAppliedvalueIfcforcemeasure = 16;
	int sAppliedvalueIfcfrequencymeasure = 17;
	int sAppliedvalueIfcheatfluxdensitymeasure = 18;
	int sAppliedvalueIfcheatingvaluemeasure = 19;
	int sAppliedvalueIfcilluminancemeasure = 20;
	int sAppliedvalueIfcinductancemeasure = 21;
	int sAppliedvalueIfcintegercountratemeasure = 22;
	int sAppliedvalueIfcionconcentrationmeasure = 23;
	int sAppliedvalueIfcisothermalmoisturecapacitymeasure = 24;
	int sAppliedvalueIfckinematicviscositymeasure = 25;
	int sAppliedvalueIfclinearforcemeasure = 26;
	int sAppliedvalueIfclinearmomentmeasure = 27;
	int sAppliedvalueIfclinearstiffnessmeasure = 28;
	int sAppliedvalueIfclinearvelocitymeasure = 29;
	int sAppliedvalueIfcluminousfluxmeasure = 30;
	int sAppliedvalueIfcluminousintensitydistributionmeasure = 31;
	int sAppliedvalueIfcmagneticfluxdensitymeasure = 32;
	int sAppliedvalueIfcmagneticfluxmeasure = 33;
	int sAppliedvalueIfcmassdensitymeasure = 34;
	int sAppliedvalueIfcmassflowratemeasure = 35;
	int sAppliedvalueIfcmassperlengthmeasure = 36;
	int sAppliedvalueIfcmodulusofelasticitymeasure = 37;
	int sAppliedvalueIfcmodulusoflinearsubgradereactionmeasure = 38;
	int sAppliedvalueIfcmodulusofrotationalsubgradereactionmeasure = 39;
	int sAppliedvalueIfcmodulusofsubgradereactionmeasure = 40;
	int sAppliedvalueIfcmoisturediffusivitymeasure = 41;
	int sAppliedvalueIfcmolecularweightmeasure = 42;
	int sAppliedvalueIfcmomentofinertiameasure = 43;
	int sAppliedvalueIfcmonetarymeasure = 44;
	int sAppliedvalueIfcphmeasure = 45;
	int sAppliedvalueIfcplanarforcemeasure = 46;
	int sAppliedvalueIfcpowermeasure = 47;
	int sAppliedvalueIfcpressuremeasure = 48;
	int sAppliedvalueIfcradioactivitymeasure = 49;
	int sAppliedvalueIfcrotationalfrequencymeasure = 50;
	int sAppliedvalueIfcrotationalmassmeasure = 51;
	int sAppliedvalueIfcrotationalstiffnessmeasure = 52;
	int sAppliedvalueIfcsectionmodulusmeasure = 53;
	int sAppliedvalueIfcsectionalareaintegralmeasure = 54;
	int sAppliedvalueIfcshearmodulusmeasure = 55;
	int sAppliedvalueIfcsoundpowerlevelmeasure = 56;
	int sAppliedvalueIfcsoundpowermeasure = 57;
	int sAppliedvalueIfcsoundpressurelevelmeasure = 58;
	int sAppliedvalueIfcsoundpressuremeasure = 59;
	int sAppliedvalueIfcspecificheatcapacitymeasure = 60;
	int sAppliedvalueIfctemperaturegradientmeasure = 61;
	int sAppliedvalueIfctemperaturerateofchangemeasure = 62;
	int sAppliedvalueIfcthermaladmittancemeasure = 63;
	int sAppliedvalueIfcthermalconductivitymeasure = 64;
	int sAppliedvalueIfcthermalexpansioncoefficientmeasure = 65;
	int sAppliedvalueIfcthermalresistancemeasure = 66;
	int sAppliedvalueIfcthermaltransmittancemeasure = 67;
	int sAppliedvalueIfctorquemeasure = 68;
	int sAppliedvalueIfcvaporpermeabilitymeasure = 69;
	int sAppliedvalueIfcvolumetricflowratemeasure = 70;
	int sAppliedvalueIfcwarpingconstantmeasure = 71;
	int sAppliedvalueIfcwarpingmomentmeasure = 72;
	int sAppliedvalueIfcamountofsubstancemeasure = 73;
	int sAppliedvalueIfcareameasure = 74;
	int sAppliedvalueIfccomplexnumber = 75;
	int sAppliedvalueIfccontextdependentmeasure = 76;
	int sAppliedvalueIfccountmeasure = 77;
	int sAppliedvalueIfcdescriptivemeasure = 78;
	int sAppliedvalueIfcelectriccurrentmeasure = 79;
	int sAppliedvalueIfclengthmeasure = 80;
	int sAppliedvalueIfcluminousintensitymeasure = 81;
	int sAppliedvalueIfcmassmeasure = 82;
	int sAppliedvalueIfcnonnegativelengthmeasure = 83;
	int sAppliedvalueIfcnormalisedratiomeasure = 84;
	int sAppliedvalueIfcnumericmeasure = 85;
	int sAppliedvalueIfcparametervalue = 86;
	int sAppliedvalueIfcplaneanglemeasure = 87;
	int sAppliedvalueIfcpositivelengthmeasure = 88;
	int sAppliedvalueIfcpositiveplaneanglemeasure = 89;
	int sAppliedvalueIfcpositiveratiomeasure = 90;
	int sAppliedvalueIfcratiomeasure = 91;
	int sAppliedvalueIfcsolidanglemeasure = 92;
	int sAppliedvalueIfcthermodynamictemperaturemeasure = 93;
	int sAppliedvalueIfctimemeasure = 94;
	int sAppliedvalueIfcvolumemeasure = 95;
	int sAppliedvalueIfcboolean = 96;
	int sAppliedvalueIfcdate = 97;
	int sAppliedvalueIfcdatetime = 98;
	int sAppliedvalueIfcduration = 99;
	int sAppliedvalueIfcidentifier = 100;
	int sAppliedvalueIfcinteger = 101;
	int sAppliedvalueIfclabel = 102;
	int sAppliedvalueIfclogical = 103;
	int sAppliedvalueIfcreal = 104;
	int sAppliedvalueIfctext = 105;
	int sAppliedvalueIfctime = 106;
	int sAppliedvalueIfctimestamp = 107;

	int testAppliedvalue(EIfcappliedvalue type) throws SdaiException;

	EEntity getAppliedvalue(EIfcappliedvalue type) throws SdaiException; // case 1
	double getAppliedvalue(EIfcappliedvalue type, EIfcabsorbeddosemeasure node1) throws SdaiException; // case 2
	double getAppliedvalue(EIfcappliedvalue type, EIfcaccelerationmeasure node1) throws SdaiException; // case 3
	double getAppliedvalue(EIfcappliedvalue type, EIfcangularvelocitymeasure node1) throws SdaiException; // case 4
	double getAppliedvalue(EIfcappliedvalue type, EIfcareadensitymeasure node1) throws SdaiException; // case 5
	A_integer getAppliedvalue(EIfcappliedvalue type, EIfccompoundplaneanglemeasure node1) throws SdaiException; // case 6
	double getAppliedvalue(EIfcappliedvalue type, EIfccurvaturemeasure node1) throws SdaiException; // case 7
	double getAppliedvalue(EIfcappliedvalue type, EIfcdoseequivalentmeasure node1) throws SdaiException; // case 8
	double getAppliedvalue(EIfcappliedvalue type, EIfcdynamicviscositymeasure node1) throws SdaiException; // case 9
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectriccapacitancemeasure node1) throws SdaiException; // case 10
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectricchargemeasure node1) throws SdaiException; // case 11
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectricconductancemeasure node1) throws SdaiException; // case 12
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectricresistancemeasure node1) throws SdaiException; // case 13
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectricvoltagemeasure node1) throws SdaiException; // case 14
	double getAppliedvalue(EIfcappliedvalue type, EIfcenergymeasure node1) throws SdaiException; // case 15
	double getAppliedvalue(EIfcappliedvalue type, EIfcforcemeasure node1) throws SdaiException; // case 16
	double getAppliedvalue(EIfcappliedvalue type, EIfcfrequencymeasure node1) throws SdaiException; // case 17
	double getAppliedvalue(EIfcappliedvalue type, EIfcheatfluxdensitymeasure node1) throws SdaiException; // case 18
	double getAppliedvalue(EIfcappliedvalue type, EIfcheatingvaluemeasure node1) throws SdaiException; // case 19
	double getAppliedvalue(EIfcappliedvalue type, EIfcilluminancemeasure node1) throws SdaiException; // case 20
	double getAppliedvalue(EIfcappliedvalue type, EIfcinductancemeasure node1) throws SdaiException; // case 21
	int getAppliedvalue(EIfcappliedvalue type, EIfcintegercountratemeasure node1) throws SdaiException; // case 22
	double getAppliedvalue(EIfcappliedvalue type, EIfcionconcentrationmeasure node1) throws SdaiException; // case 23
	double getAppliedvalue(EIfcappliedvalue type, EIfcisothermalmoisturecapacitymeasure node1) throws SdaiException; // case 24
	double getAppliedvalue(EIfcappliedvalue type, EIfckinematicviscositymeasure node1) throws SdaiException; // case 25
	double getAppliedvalue(EIfcappliedvalue type, EIfclinearforcemeasure node1) throws SdaiException; // case 26
	double getAppliedvalue(EIfcappliedvalue type, EIfclinearmomentmeasure node1) throws SdaiException; // case 27
	double getAppliedvalue(EIfcappliedvalue type, EIfclinearstiffnessmeasure node1) throws SdaiException; // case 28
	double getAppliedvalue(EIfcappliedvalue type, EIfclinearvelocitymeasure node1) throws SdaiException; // case 29
	double getAppliedvalue(EIfcappliedvalue type, EIfcluminousfluxmeasure node1) throws SdaiException; // case 30
	double getAppliedvalue(EIfcappliedvalue type, EIfcluminousintensitydistributionmeasure node1) throws SdaiException; // case 31
	double getAppliedvalue(EIfcappliedvalue type, EIfcmagneticfluxdensitymeasure node1) throws SdaiException; // case 32
	double getAppliedvalue(EIfcappliedvalue type, EIfcmagneticfluxmeasure node1) throws SdaiException; // case 33
	double getAppliedvalue(EIfcappliedvalue type, EIfcmassdensitymeasure node1) throws SdaiException; // case 34
	double getAppliedvalue(EIfcappliedvalue type, EIfcmassflowratemeasure node1) throws SdaiException; // case 35
	double getAppliedvalue(EIfcappliedvalue type, EIfcmassperlengthmeasure node1) throws SdaiException; // case 36
	double getAppliedvalue(EIfcappliedvalue type, EIfcmodulusofelasticitymeasure node1) throws SdaiException; // case 37
	double getAppliedvalue(EIfcappliedvalue type, EIfcmodulusoflinearsubgradereactionmeasure node1) throws SdaiException; // case 38
	double getAppliedvalue(EIfcappliedvalue type, EIfcmodulusofrotationalsubgradereactionmeasure node1) throws SdaiException; // case 39
	double getAppliedvalue(EIfcappliedvalue type, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException; // case 40
	double getAppliedvalue(EIfcappliedvalue type, EIfcmoisturediffusivitymeasure node1) throws SdaiException; // case 41
	double getAppliedvalue(EIfcappliedvalue type, EIfcmolecularweightmeasure node1) throws SdaiException; // case 42
	double getAppliedvalue(EIfcappliedvalue type, EIfcmomentofinertiameasure node1) throws SdaiException; // case 43
	double getAppliedvalue(EIfcappliedvalue type, EIfcmonetarymeasure node1) throws SdaiException; // case 44
	double getAppliedvalue(EIfcappliedvalue type, EIfcphmeasure node1) throws SdaiException; // case 45
	double getAppliedvalue(EIfcappliedvalue type, EIfcplanarforcemeasure node1) throws SdaiException; // case 46
	double getAppliedvalue(EIfcappliedvalue type, EIfcpowermeasure node1) throws SdaiException; // case 47
	double getAppliedvalue(EIfcappliedvalue type, EIfcpressuremeasure node1) throws SdaiException; // case 48
	double getAppliedvalue(EIfcappliedvalue type, EIfcradioactivitymeasure node1) throws SdaiException; // case 49
	double getAppliedvalue(EIfcappliedvalue type, EIfcrotationalfrequencymeasure node1) throws SdaiException; // case 50
	double getAppliedvalue(EIfcappliedvalue type, EIfcrotationalmassmeasure node1) throws SdaiException; // case 51
	double getAppliedvalue(EIfcappliedvalue type, EIfcrotationalstiffnessmeasure node1) throws SdaiException; // case 52
	double getAppliedvalue(EIfcappliedvalue type, EIfcsectionmodulusmeasure node1) throws SdaiException; // case 53
	double getAppliedvalue(EIfcappliedvalue type, EIfcsectionalareaintegralmeasure node1) throws SdaiException; // case 54
	double getAppliedvalue(EIfcappliedvalue type, EIfcshearmodulusmeasure node1) throws SdaiException; // case 55
	double getAppliedvalue(EIfcappliedvalue type, EIfcsoundpowerlevelmeasure node1) throws SdaiException; // case 56
	double getAppliedvalue(EIfcappliedvalue type, EIfcsoundpowermeasure node1) throws SdaiException; // case 57
	double getAppliedvalue(EIfcappliedvalue type, EIfcsoundpressurelevelmeasure node1) throws SdaiException; // case 58
	double getAppliedvalue(EIfcappliedvalue type, EIfcsoundpressuremeasure node1) throws SdaiException; // case 59
	double getAppliedvalue(EIfcappliedvalue type, EIfcspecificheatcapacitymeasure node1) throws SdaiException; // case 60
	double getAppliedvalue(EIfcappliedvalue type, EIfctemperaturegradientmeasure node1) throws SdaiException; // case 61
	double getAppliedvalue(EIfcappliedvalue type, EIfctemperaturerateofchangemeasure node1) throws SdaiException; // case 62
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermaladmittancemeasure node1) throws SdaiException; // case 63
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermalconductivitymeasure node1) throws SdaiException; // case 64
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermalexpansioncoefficientmeasure node1) throws SdaiException; // case 65
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermalresistancemeasure node1) throws SdaiException; // case 66
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermaltransmittancemeasure node1) throws SdaiException; // case 67
	double getAppliedvalue(EIfcappliedvalue type, EIfctorquemeasure node1) throws SdaiException; // case 68
	double getAppliedvalue(EIfcappliedvalue type, EIfcvaporpermeabilitymeasure node1) throws SdaiException; // case 69
	double getAppliedvalue(EIfcappliedvalue type, EIfcvolumetricflowratemeasure node1) throws SdaiException; // case 70
	double getAppliedvalue(EIfcappliedvalue type, EIfcwarpingconstantmeasure node1) throws SdaiException; // case 71
	double getAppliedvalue(EIfcappliedvalue type, EIfcwarpingmomentmeasure node1) throws SdaiException; // case 72
	double getAppliedvalue(EIfcappliedvalue type, EIfcamountofsubstancemeasure node1) throws SdaiException; // case 73
	double getAppliedvalue(EIfcappliedvalue type, EIfcareameasure node1) throws SdaiException; // case 74
	A_double getAppliedvalue(EIfcappliedvalue type, EIfccomplexnumber node1) throws SdaiException; // case 75
	double getAppliedvalue(EIfcappliedvalue type, EIfccontextdependentmeasure node1) throws SdaiException; // case 76
	double getAppliedvalue(EIfcappliedvalue type, EIfccountmeasure node1) throws SdaiException; // case 77
	String getAppliedvalue(EIfcappliedvalue type, EIfcdescriptivemeasure node1) throws SdaiException; // case 78
	double getAppliedvalue(EIfcappliedvalue type, EIfcelectriccurrentmeasure node1) throws SdaiException; // case 79
	double getAppliedvalue(EIfcappliedvalue type, EIfclengthmeasure node1) throws SdaiException; // case 80
	double getAppliedvalue(EIfcappliedvalue type, EIfcluminousintensitymeasure node1) throws SdaiException; // case 81
	double getAppliedvalue(EIfcappliedvalue type, EIfcmassmeasure node1) throws SdaiException; // case 82
	double getAppliedvalue(EIfcappliedvalue type, EIfcnonnegativelengthmeasure node1) throws SdaiException; // case 83
	double getAppliedvalue(EIfcappliedvalue type, EIfcnormalisedratiomeasure node1) throws SdaiException; // case 84
	double getAppliedvalue(EIfcappliedvalue type, EIfcnumericmeasure node1) throws SdaiException; // case 85
	double getAppliedvalue(EIfcappliedvalue type, EIfcparametervalue node1) throws SdaiException; // case 86
	double getAppliedvalue(EIfcappliedvalue type, EIfcplaneanglemeasure node1) throws SdaiException; // case 87
	double getAppliedvalue(EIfcappliedvalue type, EIfcpositivelengthmeasure node1) throws SdaiException; // case 88
	double getAppliedvalue(EIfcappliedvalue type, EIfcpositiveplaneanglemeasure node1) throws SdaiException; // case 89
	double getAppliedvalue(EIfcappliedvalue type, EIfcpositiveratiomeasure node1) throws SdaiException; // case 90
	double getAppliedvalue(EIfcappliedvalue type, EIfcratiomeasure node1) throws SdaiException; // case 91
	double getAppliedvalue(EIfcappliedvalue type, EIfcsolidanglemeasure node1) throws SdaiException; // case 92
	double getAppliedvalue(EIfcappliedvalue type, EIfcthermodynamictemperaturemeasure node1) throws SdaiException; // case 93
	double getAppliedvalue(EIfcappliedvalue type, EIfctimemeasure node1) throws SdaiException; // case 94
	double getAppliedvalue(EIfcappliedvalue type, EIfcvolumemeasure node1) throws SdaiException; // case 95
	boolean getAppliedvalue(EIfcappliedvalue type, EIfcboolean node1) throws SdaiException; // case 96
	String getAppliedvalue(EIfcappliedvalue type, EIfcdate node1) throws SdaiException; // case 97
	String getAppliedvalue(EIfcappliedvalue type, EIfcdatetime node1) throws SdaiException; // case 98
	String getAppliedvalue(EIfcappliedvalue type, EIfcduration node1) throws SdaiException; // case 99
	String getAppliedvalue(EIfcappliedvalue type, EIfcidentifier node1) throws SdaiException; // case 100
	int getAppliedvalue(EIfcappliedvalue type, EIfcinteger node1) throws SdaiException; // case 101
	String getAppliedvalue(EIfcappliedvalue type, EIfclabel node1) throws SdaiException; // case 102
	int getAppliedvalue(EIfcappliedvalue type, EIfclogical node1) throws SdaiException; // case 103
	double getAppliedvalue(EIfcappliedvalue type, EIfcreal node1) throws SdaiException; // case 104
	String getAppliedvalue(EIfcappliedvalue type, EIfctext node1) throws SdaiException; // case 105
	String getAppliedvalue(EIfcappliedvalue type, EIfctime node1) throws SdaiException; // case 106
	int getAppliedvalue(EIfcappliedvalue type, EIfctimestamp node1) throws SdaiException; // case 107

	void setAppliedvalue(EIfcappliedvalue type, EEntity value) throws SdaiException; // case 1
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcabsorbeddosemeasure node1) throws SdaiException; // case 2
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcaccelerationmeasure node1) throws SdaiException; // case 3
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcangularvelocitymeasure node1) throws SdaiException; // case 4
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcareadensitymeasure node1) throws SdaiException; // case 5
	A_integer createAppliedvalue(EIfcappliedvalue type, EIfccompoundplaneanglemeasure node1) throws SdaiException; // case 6
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfccurvaturemeasure node1) throws SdaiException; // case 7
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcdoseequivalentmeasure node1) throws SdaiException; // case 8
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcdynamicviscositymeasure node1) throws SdaiException; // case 9
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectriccapacitancemeasure node1) throws SdaiException; // case 10
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectricchargemeasure node1) throws SdaiException; // case 11
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectricconductancemeasure node1) throws SdaiException; // case 12
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectricresistancemeasure node1) throws SdaiException; // case 13
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectricvoltagemeasure node1) throws SdaiException; // case 14
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcenergymeasure node1) throws SdaiException; // case 15
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcforcemeasure node1) throws SdaiException; // case 16
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcfrequencymeasure node1) throws SdaiException; // case 17
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcheatfluxdensitymeasure node1) throws SdaiException; // case 18
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcheatingvaluemeasure node1) throws SdaiException; // case 19
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcilluminancemeasure node1) throws SdaiException; // case 20
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcinductancemeasure node1) throws SdaiException; // case 21
	void setAppliedvalue(EIfcappliedvalue type, int value, EIfcintegercountratemeasure node1) throws SdaiException; // case 22
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcionconcentrationmeasure node1) throws SdaiException; // case 23
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcisothermalmoisturecapacitymeasure node1) throws SdaiException; // case 24
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfckinematicviscositymeasure node1) throws SdaiException; // case 25
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfclinearforcemeasure node1) throws SdaiException; // case 26
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfclinearmomentmeasure node1) throws SdaiException; // case 27
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfclinearstiffnessmeasure node1) throws SdaiException; // case 28
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfclinearvelocitymeasure node1) throws SdaiException; // case 29
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcluminousfluxmeasure node1) throws SdaiException; // case 30
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcluminousintensitydistributionmeasure node1) throws SdaiException; // case 31
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmagneticfluxdensitymeasure node1) throws SdaiException; // case 32
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmagneticfluxmeasure node1) throws SdaiException; // case 33
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmassdensitymeasure node1) throws SdaiException; // case 34
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmassflowratemeasure node1) throws SdaiException; // case 35
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmassperlengthmeasure node1) throws SdaiException; // case 36
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmodulusofelasticitymeasure node1) throws SdaiException; // case 37
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmodulusoflinearsubgradereactionmeasure node1) throws SdaiException; // case 38
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmodulusofrotationalsubgradereactionmeasure node1) throws SdaiException; // case 39
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException; // case 40
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmoisturediffusivitymeasure node1) throws SdaiException; // case 41
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmolecularweightmeasure node1) throws SdaiException; // case 42
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmomentofinertiameasure node1) throws SdaiException; // case 43
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmonetarymeasure node1) throws SdaiException; // case 44
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcphmeasure node1) throws SdaiException; // case 45
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcplanarforcemeasure node1) throws SdaiException; // case 46
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcpowermeasure node1) throws SdaiException; // case 47
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcpressuremeasure node1) throws SdaiException; // case 48
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcradioactivitymeasure node1) throws SdaiException; // case 49
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcrotationalfrequencymeasure node1) throws SdaiException; // case 50
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcrotationalmassmeasure node1) throws SdaiException; // case 51
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcrotationalstiffnessmeasure node1) throws SdaiException; // case 52
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsectionmodulusmeasure node1) throws SdaiException; // case 53
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsectionalareaintegralmeasure node1) throws SdaiException; // case 54
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcshearmodulusmeasure node1) throws SdaiException; // case 55
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsoundpowerlevelmeasure node1) throws SdaiException; // case 56
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsoundpowermeasure node1) throws SdaiException; // case 57
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsoundpressurelevelmeasure node1) throws SdaiException; // case 58
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsoundpressuremeasure node1) throws SdaiException; // case 59
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcspecificheatcapacitymeasure node1) throws SdaiException; // case 60
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfctemperaturegradientmeasure node1) throws SdaiException; // case 61
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfctemperaturerateofchangemeasure node1) throws SdaiException; // case 62
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermaladmittancemeasure node1) throws SdaiException; // case 63
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermalconductivitymeasure node1) throws SdaiException; // case 64
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermalexpansioncoefficientmeasure node1) throws SdaiException; // case 65
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermalresistancemeasure node1) throws SdaiException; // case 66
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermaltransmittancemeasure node1) throws SdaiException; // case 67
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfctorquemeasure node1) throws SdaiException; // case 68
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcvaporpermeabilitymeasure node1) throws SdaiException; // case 69
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcvolumetricflowratemeasure node1) throws SdaiException; // case 70
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcwarpingconstantmeasure node1) throws SdaiException; // case 71
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcwarpingmomentmeasure node1) throws SdaiException; // case 72
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcamountofsubstancemeasure node1) throws SdaiException; // case 73
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcareameasure node1) throws SdaiException; // case 74
	A_double createAppliedvalue(EIfcappliedvalue type, EIfccomplexnumber node1) throws SdaiException; // case 75
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfccontextdependentmeasure node1) throws SdaiException; // case 76
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfccountmeasure node1) throws SdaiException; // case 77
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfcdescriptivemeasure node1) throws SdaiException; // case 78
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcelectriccurrentmeasure node1) throws SdaiException; // case 79
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfclengthmeasure node1) throws SdaiException; // case 80
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcluminousintensitymeasure node1) throws SdaiException; // case 81
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcmassmeasure node1) throws SdaiException; // case 82
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcnonnegativelengthmeasure node1) throws SdaiException; // case 83
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException; // case 84
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcnumericmeasure node1) throws SdaiException; // case 85
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcparametervalue node1) throws SdaiException; // case 86
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcplaneanglemeasure node1) throws SdaiException; // case 87
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcpositivelengthmeasure node1) throws SdaiException; // case 88
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcpositiveplaneanglemeasure node1) throws SdaiException; // case 89
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcpositiveratiomeasure node1) throws SdaiException; // case 90
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcratiomeasure node1) throws SdaiException; // case 91
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcsolidanglemeasure node1) throws SdaiException; // case 92
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcthermodynamictemperaturemeasure node1) throws SdaiException; // case 93
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfctimemeasure node1) throws SdaiException; // case 94
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcvolumemeasure node1) throws SdaiException; // case 95
	void setAppliedvalue(EIfcappliedvalue type, boolean value, EIfcboolean node1) throws SdaiException; // case 96
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfcdate node1) throws SdaiException; // case 97
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfcdatetime node1) throws SdaiException; // case 98
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfcduration node1) throws SdaiException; // case 99
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfcidentifier node1) throws SdaiException; // case 100
	void setAppliedvalue(EIfcappliedvalue type, int value, EIfcinteger node1) throws SdaiException; // case 101
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfclabel node1) throws SdaiException; // case 102
	void setAppliedvalue(EIfcappliedvalue type, int value, EIfclogical node1) throws SdaiException; // case 103
	void setAppliedvalue(EIfcappliedvalue type, double value, EIfcreal node1) throws SdaiException; // case 104
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfctext node1) throws SdaiException; // case 105
	void setAppliedvalue(EIfcappliedvalue type, String value, EIfctime node1) throws SdaiException; // case 106
	void setAppliedvalue(EIfcappliedvalue type, int value, EIfctimestamp node1) throws SdaiException; // case 107

	void unsetAppliedvalue(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:UnitBasis, base type: entity IfcMeasureWithUnit
	public boolean testUnitbasis(EIfcappliedvalue type) throws SdaiException;
	public EIfcmeasurewithunit getUnitbasis(EIfcappliedvalue type) throws SdaiException;
	public void setUnitbasis(EIfcappliedvalue type, EIfcmeasurewithunit value) throws SdaiException;
	public void unsetUnitbasis(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ApplicableDate, base type: STRING
	public boolean testApplicabledate(EIfcappliedvalue type) throws SdaiException;
	public String getApplicabledate(EIfcappliedvalue type) throws SdaiException;
	public void setApplicabledate(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetApplicabledate(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:FixedUntilDate, base type: STRING
	public boolean testFixeduntildate(EIfcappliedvalue type) throws SdaiException;
	public String getFixeduntildate(EIfcappliedvalue type) throws SdaiException;
	public void setFixeduntildate(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetFixeduntildate(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Category, base type: STRING
	public boolean testCategory(EIfcappliedvalue type) throws SdaiException;
	public String getCategory(EIfcappliedvalue type) throws SdaiException;
	public void setCategory(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetCategory(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Condition, base type: STRING
	public boolean testCondition(EIfcappliedvalue type) throws SdaiException;
	public String getCondition(EIfcappliedvalue type) throws SdaiException;
	public void setCondition(EIfcappliedvalue type, String value) throws SdaiException;
	public void unsetCondition(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:ArithmeticOperator, base type: ENUMERATION
	public boolean testArithmeticoperator(EIfcappliedvalue type) throws SdaiException;
	public int getArithmeticoperator(EIfcappliedvalue type) throws SdaiException;
	public void setArithmeticoperator(EIfcappliedvalue type, int value) throws SdaiException;
	public void unsetArithmeticoperator(EIfcappliedvalue type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// methods for attribute: Components, base type: LIST OF ENTITY
	public boolean testComponents(EIfcappliedvalue type) throws SdaiException;
	public AIfcappliedvalue getComponents(EIfcappliedvalue type) throws SdaiException;
	public AIfcappliedvalue createComponents(EIfcappliedvalue type) throws SdaiException;
	public void unsetComponents(EIfcappliedvalue type) throws SdaiException;

	// Inverse attribute - HasExternalReference : SET[0:-2147483648] OF IfcExternalReferenceRelationship FOR RelatedResourceObjects
	public AIfcexternalreferencerelationship getHasexternalreference(EIfcappliedvalue type, ASdaiModel domain) throws SdaiException;
}
