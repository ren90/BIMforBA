/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcAsset

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcasset extends EIfcgroup {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Identification, base type: STRING
	public boolean testIdentification(EIfcasset type) throws SdaiException;
	public String getIdentification(EIfcasset type) throws SdaiException;
	public void setIdentification(EIfcasset type, String value) throws SdaiException;
	public void unsetIdentification(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:OriginalValue, base type: entity IfcCostValue
	public boolean testOriginalvalue(EIfcasset type) throws SdaiException;
	public EIfccostvalue getOriginalvalue(EIfcasset type) throws SdaiException;
	public void setOriginalvalue(EIfcasset type, EIfccostvalue value) throws SdaiException;
	public void unsetOriginalvalue(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:CurrentValue, base type: entity IfcCostValue
	public boolean testCurrentvalue(EIfcasset type) throws SdaiException;
	public EIfccostvalue getCurrentvalue(EIfcasset type) throws SdaiException;
	public void setCurrentvalue(EIfcasset type, EIfccostvalue value) throws SdaiException;
	public void unsetCurrentvalue(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:TotalReplacementCost, base type: entity IfcCostValue
	public boolean testTotalreplacementcost(EIfcasset type) throws SdaiException;
	public EIfccostvalue getTotalreplacementcost(EIfcasset type) throws SdaiException;
	public void setTotalreplacementcost(EIfcasset type, EIfccostvalue value) throws SdaiException;
	public void unsetTotalreplacementcost(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: Owner
	boolean testOwner(EIfcasset type) throws SdaiException;

	EEntity getOwner(EIfcasset type) throws SdaiException; // case 1

	void setOwner(EIfcasset type, EEntity value) throws SdaiException; // case 1

	void unsetOwner(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: User
	boolean testUser(EIfcasset type) throws SdaiException;

	EEntity getUser(EIfcasset type) throws SdaiException; // case 1

	void setUser(EIfcasset type, EEntity value) throws SdaiException; // case 1

	void unsetUser(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:ResponsiblePerson, base type: entity IfcPerson
	public boolean testResponsibleperson(EIfcasset type) throws SdaiException;
	public EIfcperson getResponsibleperson(EIfcasset type) throws SdaiException;
	public void setResponsibleperson(EIfcasset type, EIfcperson value) throws SdaiException;
	public void unsetResponsibleperson(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:IncorporationDate, base type: STRING
	public boolean testIncorporationdate(EIfcasset type) throws SdaiException;
	public String getIncorporationdate(EIfcasset type) throws SdaiException;
	public void setIncorporationdate(EIfcasset type, String value) throws SdaiException;
	public void unsetIncorporationdate(EIfcasset type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:DepreciatedValue, base type: entity IfcCostValue
	public boolean testDepreciatedvalue(EIfcasset type) throws SdaiException;
	public EIfccostvalue getDepreciatedvalue(EIfcasset type) throws SdaiException;
	public void setDepreciatedvalue(EIfcasset type, EIfccostvalue value) throws SdaiException;
	public void unsetDepreciatedvalue(EIfcasset type) throws SdaiException;

}
