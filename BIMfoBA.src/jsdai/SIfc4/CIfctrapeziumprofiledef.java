/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcTrapeziumProfileDef

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfctrapeziumprofiledef extends CIfcparameterizedprofiledef implements EIfctrapeziumprofiledef {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfctrapeziumprofiledef.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// ProfileType: protected int a0;   ProfileType - java inheritance - ENUMERATION IfcProfileTypeEnum
	// ProfileName: protected String a1;   ProfileName - java inheritance - STRING
	// HasExternalReference: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcProfileProperties
	// Position: protected Object a2;   Position - java inheritance - ENTITY IfcAxis2Placement2D
	protected double a3; // BottomXDim - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // TopXDim - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a5; // YDim - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // TopXOffset - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// ProfileType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected int a0;
	// ProfileName - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// HasExternalReference - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Position - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// BottomXDim - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// TopXDim - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// YDim - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;
	// TopXOffset - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5070=EXPLICIT_ATTRIBUTE('ProfileType',#5068,0,#2963,$,.F.);
	//<01> generating methods for consolidated attribute:  ProfileType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5071=EXPLICIT_ATTRIBUTE('ProfileName',#5068,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ProfileName
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5072=INVERSE_ATTRIBUTE('HasExternalReference',#5068,0,#4231,$,#4234,#8892,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReference
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5073=INVERSE_ATTRIBUTE('HasProperties',#5068,1,#5074,$,#5076,#8894,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4870=EXPLICIT_ATTRIBUTE('Position',#4868,0,#3378,$,.T.);
	//<01> generating methods for consolidated attribute:  Position
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Position, base type: entity IfcAxis2Placement2D
	public static int usedinPosition(EIfcparameterizedprofiledef type, EIfcaxis2placement2d instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #6248=EXPLICIT_ATTRIBUTE('BottomXDim',#6246,0,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  BottomXDim
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: BottomXDim, base type: REAL
	public boolean testBottomxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return test_double(a3);
	}
	public double getBottomxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return get_double(a3);
	}
	public void setBottomxdim(EIfctrapeziumprofiledef type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetBottomxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeBottomxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #6249=EXPLICIT_ATTRIBUTE('TopXDim',#6246,1,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  TopXDim
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TopXDim, base type: REAL
	public boolean testTopxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return test_double(a4);
	}
	public double getTopxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return get_double(a4);
	}
	public void setTopxdim(EIfctrapeziumprofiledef type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetTopxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeTopxdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #6250=EXPLICIT_ATTRIBUTE('YDim',#6246,2,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  YDim
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: YDim, base type: REAL
	public boolean testYdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return test_double(a5);
	}
	public double getYdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return get_double(a5);
	}
	public void setYdim(EIfctrapeziumprofiledef type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetYdim(EIfctrapeziumprofiledef type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeYdim(EIfctrapeziumprofiledef type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #6251=EXPLICIT_ATTRIBUTE('TopXOffset',#6246,3,#2543,$,.F.);
	//<01> generating methods for consolidated attribute:  TopXOffset
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TopXOffset, base type: REAL
	public boolean testTopxoffset(EIfctrapeziumprofiledef type) throws SdaiException {
		return test_double(a6);
	}
	public double getTopxoffset(EIfctrapeziumprofiledef type) throws SdaiException {
		return get_double(a6);
	}
	public void setTopxoffset(EIfctrapeziumprofiledef type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetTopxoffset(EIfctrapeziumprofiledef type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeTopxoffset(EIfctrapeziumprofiledef type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			return;
		}
		a2 = av.entityValues[0].getInstance(0, this, a2$);
		a0 = av.entityValues[1].getEnumeration(0, a0$);
		a1 = av.entityValues[1].getString(1);
		a3 = av.entityValues[2].getDouble(0);
		a4 = av.entityValues[2].getDouble(1);
		a5 = av.entityValues[2].getDouble(2);
		a6 = av.entityValues[2].getDouble(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			return;
		}
		a2 = av.entityValues[0].getInstance(0, this, a2$);
		a0 = av.entityValues[1].getEnumeration(0, a0$);
		a1 = av.entityValues[1].getString(1);
		a3 = av.entityValues[2].getDouble(0);
		a4 = av.entityValues[2].getDouble(1);
		a5 = av.entityValues[2].getDouble(2);
		a6 = av.entityValues[2].getDouble(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[0].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[1].setEnumeration(0, a0, a0$);
		av.entityValues[1].setString(1, a1);
		// partial entity: IfcTrapeziumProfileDef
		av.entityValues[2].setDouble(0, a3);
		av.entityValues[2].setDouble(1, a4);
		av.entityValues[2].setDouble(2, a5);
		av.entityValues[2].setDouble(3, a6);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[0].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[1].setEnumeration(0, a0, a0$);
		av.entityValues[1].setString(1, a1);
		// partial entity: IfcTrapeziumProfileDef
		av.entityValues[2].setDouble(0, a3);
		av.entityValues[2].setDouble(1, a4);
		av.entityValues[2].setDouble(2, a5);
		av.entityValues[2].setDouble(3, a6);
	}
}
