/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRectangularTrimmedSurface

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrectangulartrimmedsurface extends CIfcboundedsurface implements EIfcrectangulartrimmedsurface {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrectangulartrimmedsurface.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	// Dim: protected int  - derived - java inheritance -  INTEGER
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	protected Object a0; // BasisSurface - current entity - ENTITY IfcSurface
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected double a1; // U1 - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a2; // V1 - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a3; // U2 - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // V2 - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a5; // Usense - current entity - BOOLEAN
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a6; // Vsense - current entity - BOOLEAN
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Dim - derived - java inheritance
	// protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// BasisSurface - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	// U1 - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a1;
	// V1 - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a2;
	// U2 - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// V2 - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// Usense - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a5;
	// Vsense - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected int a6;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5954=DERIVED_ATTRIBUTE('Dim',#5952,0,#2485,$);
	//<01> generating methods for consolidated attribute:  Dim
	//<01-1> supertype, java inheritance
	//<01-1-1> derived
	//<01-1-1-2> NOT explicit-to-derived - generateDerivedSupertypeJavaInheritedMethodsX
	// methods for derived attribute: Dim, base type: INTEGER
	public boolean testDim(EIfcsurface type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getDim(EIfcsurface type, SdaiContext _context) throws SdaiException {


//###-01 jc.generated_java: Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)
				return (Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3));
	}
	public int getDim(EIfcsurface type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return getDim((EIfcsurface)null, _context).getInteger();
	}
	public static jsdai.dictionary.EAttribute attributeDim(EIfcsurface type) throws SdaiException {
		return d0$;
	}

	//going through all the attributes: #5259=EXPLICIT_ATTRIBUTE('BasisSurface',#5257,0,#5952,$,.F.);
	//<01> generating methods for consolidated attribute:  BasisSurface
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : BasisSurface, base type: entity IfcSurface
	public static int usedinBasissurface(EIfcrectangulartrimmedsurface type, EIfcsurface instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testBasissurface(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_instance(a0);
	}
	public EIfcsurface getBasissurface(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return (EIfcsurface)get_instance(a0);
	}
	public void setBasissurface(EIfcrectangulartrimmedsurface type, EIfcsurface value) throws SdaiException {
		a0 = set_instance(a0, value);
	}
	public void unsetBasissurface(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a0 = unset_instance(a0);
	}
	public static jsdai.dictionary.EAttribute attributeBasissurface(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #5260=EXPLICIT_ATTRIBUTE('U1',#5257,1,#2599,$,.F.);
	//<01> generating methods for consolidated attribute:  U1
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: U1, base type: REAL
	public boolean testU1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_double(a1);
	}
	public double getU1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_double(a1);
	}
	public void setU1(EIfcrectangulartrimmedsurface type, double value) throws SdaiException {
		a1 = set_double(value);
	}
	public void unsetU1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a1 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeU1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5261=EXPLICIT_ATTRIBUTE('V1',#5257,2,#2599,$,.F.);
	//<01> generating methods for consolidated attribute:  V1
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: V1, base type: REAL
	public boolean testV1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_double(a2);
	}
	public double getV1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_double(a2);
	}
	public void setV1(EIfcrectangulartrimmedsurface type, double value) throws SdaiException {
		a2 = set_double(value);
	}
	public void unsetV1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a2 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeV1(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #5262=EXPLICIT_ATTRIBUTE('U2',#5257,3,#2599,$,.F.);
	//<01> generating methods for consolidated attribute:  U2
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: U2, base type: REAL
	public boolean testU2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_double(a3);
	}
	public double getU2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_double(a3);
	}
	public void setU2(EIfcrectangulartrimmedsurface type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetU2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeU2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #5263=EXPLICIT_ATTRIBUTE('V2',#5257,4,#2599,$,.F.);
	//<01> generating methods for consolidated attribute:  V2
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: V2, base type: REAL
	public boolean testV2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_double(a4);
	}
	public double getV2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_double(a4);
	}
	public void setV2(EIfcrectangulartrimmedsurface type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetV2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeV2(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5264=EXPLICIT_ATTRIBUTE('Usense',#5257,5,#6,$,.F.);
	//<01> generating methods for consolidated attribute:  Usense
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Usense, base type: BOOLEAN
	public boolean testUsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_boolean(a5);
	}
	public boolean getUsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_boolean(a5);
	}
	public void setUsense(EIfcrectangulartrimmedsurface type, boolean value) throws SdaiException {
		a5 = set_boolean(value);
	}
	public void unsetUsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a5 = unset_boolean();
	}
	public static jsdai.dictionary.EAttribute attributeUsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #5265=EXPLICIT_ATTRIBUTE('Vsense',#5257,6,#6,$,.F.);
	//<01> generating methods for consolidated attribute:  Vsense
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Vsense, base type: BOOLEAN
	public boolean testVsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return test_boolean(a6);
	}
	public boolean getVsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return get_boolean(a6);
	}
	public void setVsense(EIfcrectangulartrimmedsurface type, boolean value) throws SdaiException {
		a6 = set_boolean(value);
	}
	public void unsetVsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		a6 = unset_boolean();
	}
	public static jsdai.dictionary.EAttribute attributeVsense(EIfcrectangulartrimmedsurface type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = 0;
			a6 = 0;
			return;
		}
		a0 = av.entityValues[2].getInstance(0, this, a0$);
		a1 = av.entityValues[2].getDouble(1);
		a2 = av.entityValues[2].getDouble(2);
		a3 = av.entityValues[2].getDouble(3);
		a4 = av.entityValues[2].getDouble(4);
		a5 = av.entityValues[2].getBoolean(5);
		a6 = av.entityValues[2].getBoolean(6);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = 0;
			a6 = 0;
			return;
		}
		a0 = av.entityValues[2].getInstance(0, this, a0$);
		a1 = av.entityValues[2].getDouble(1);
		a2 = av.entityValues[2].getDouble(2);
		a3 = av.entityValues[2].getDouble(3);
		a4 = av.entityValues[2].getDouble(4);
		a5 = av.entityValues[2].getBoolean(5);
		a6 = av.entityValues[2].getBoolean(6);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcBoundedSurface
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRectangularTrimmedSurface
		av.entityValues[2].setInstance(0, a0);
		av.entityValues[2].setDouble(1, a1);
		av.entityValues[2].setDouble(2, a2);
		av.entityValues[2].setDouble(3, a3);
		av.entityValues[2].setDouble(4, a4);
		av.entityValues[2].setBoolean(5, a5);
		av.entityValues[2].setBoolean(6, a6);
		// partial entity: IfcRepresentationItem
		// partial entity: IfcSurface
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcBoundedSurface
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRectangularTrimmedSurface
		av.entityValues[2].setInstance(0, a0);
		av.entityValues[2].setDouble(1, a1);
		av.entityValues[2].setDouble(2, a2);
		av.entityValues[2].setDouble(3, a3);
		av.entityValues[2].setDouble(4, a4);
		av.entityValues[2].setBoolean(5, a5);
		av.entityValues[2].setBoolean(6, a6);
		// partial entity: IfcRepresentationItem
		// partial entity: IfcSurface
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcrectangulartrimmedsurfaceUsensecompatible(SdaiContext _context) throws SdaiException {
	








		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCELEMENTARYSURFACE", "IFC4"), Value.alloc(jsdai.SIfc4.CIfcsurface.definition).set(_context, get(a0$)).typeOfV(_context)), Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCPLANE", "IFC4"), Value.alloc(jsdai.SIfc4.CIfcsurface.definition).set(_context, get(a0$)).typeOfV(_context)))), Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCSURFACEOFREVOLUTION", "IFC4"), Value.alloc(jsdai.SIfc4.CIfcsurface.definition).set(_context, get(a0$)).typeOfV(_context))), Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).set(_context, get(a5$)), Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a3$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a1$)))))).getLogical());
	}
	public int rIfcrectangulartrimmedsurfaceU1andu2different(SdaiContext _context) throws SdaiException {
	




		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a1$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a3$)))).getLogical());
	}
	public int rIfcrectangulartrimmedsurfaceV1andv2different(SdaiContext _context) throws SdaiException {
	




		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a2$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a4$)))).getLogical());
	}
	public int rIfcrectangulartrimmedsurfaceVsensecompatible(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).set(_context, get(a6$)), Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a4$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a2$))))).getLogical());
	}
}
