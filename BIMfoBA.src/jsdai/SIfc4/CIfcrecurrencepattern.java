/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRecurrencePattern

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrecurrencepattern extends CEntity implements EIfcrecurrencepattern {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrecurrencepattern.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected int a0; // RecurrenceType - current entity - ENUMERATION IfcRecurrenceTypeEnum
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected A_integer a1; // DayComponent - current entity - SET OF INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected A_integer a2; // WeekdayComponent - current entity - SET OF INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected A_integer a3; // MonthComponent - current entity - SET OF INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a4; // Position - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a5; // Interval - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a6; // Occurrences - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected AIfctimeperiod a7; // TimePeriods - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// RecurrenceType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0;
	// DayComponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected A_integer a1;
	// WeekdayComponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected A_integer a2;
	// MonthComponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected A_integer a3;
	// Position - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a4;
	// Interval - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a5;
	// Occurrences - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected int a6;
	// TimePeriods - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected AIfctimeperiod a7;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a7, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a7, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5268=EXPLICIT_ATTRIBUTE('RecurrenceType',#5266,0,#2985,$,.F.);
	//<01> generating methods for consolidated attribute:  RecurrenceType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:RecurrenceType, base type: ENUMERATION
	public boolean testRecurrencetype(EIfcrecurrencepattern type) throws SdaiException {
		return test_enumeration(a0);
	}
	public int getRecurrencetype(EIfcrecurrencepattern type) throws SdaiException {
		return get_enumeration(a0);
	}
	public void setRecurrencetype(EIfcrecurrencepattern type, int value) throws SdaiException {
		a0 = set_enumeration(value, a0$);
	}
	public void unsetRecurrencetype(EIfcrecurrencepattern type) throws SdaiException {
		a0 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeRecurrencetype(EIfcrecurrencepattern type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #5269=EXPLICIT_ATTRIBUTE('DayComponent',#5266,1,#7064,$,.T.);
	//<01> generating methods for consolidated attribute:  DayComponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: DayComponent, base type: SET OF INTEGER
	public boolean testDaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return test_aggregate(a1);
	}
	public A_integer getDaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return (A_integer)get_aggregate(a1);
	}
	public A_integer createDaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		a1 = create_aggregate_integer(a1, a1$, 0);
		return a1;
	}
	public void unsetDaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		unset_aggregate(a1);
		a1 = null;
	}
	public static jsdai.dictionary.EAttribute attributeDaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5270=EXPLICIT_ATTRIBUTE('WeekdayComponent',#5266,2,#7065,$,.T.);
	//<01> generating methods for consolidated attribute:  WeekdayComponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: WeekdayComponent, base type: SET OF INTEGER
	public boolean testWeekdaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return test_aggregate(a2);
	}
	public A_integer getWeekdaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return (A_integer)get_aggregate(a2);
	}
	public A_integer createWeekdaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		a2 = create_aggregate_integer(a2, a2$, 0);
		return a2;
	}
	public void unsetWeekdaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		unset_aggregate(a2);
		a2 = null;
	}
	public static jsdai.dictionary.EAttribute attributeWeekdaycomponent(EIfcrecurrencepattern type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #5271=EXPLICIT_ATTRIBUTE('MonthComponent',#5266,3,#7066,$,.T.);
	//<01> generating methods for consolidated attribute:  MonthComponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: MonthComponent, base type: SET OF INTEGER
	public boolean testMonthcomponent(EIfcrecurrencepattern type) throws SdaiException {
		return test_aggregate(a3);
	}
	public A_integer getMonthcomponent(EIfcrecurrencepattern type) throws SdaiException {
		return (A_integer)get_aggregate(a3);
	}
	public A_integer createMonthcomponent(EIfcrecurrencepattern type) throws SdaiException {
		a3 = create_aggregate_integer(a3, a3$, 0);
		return a3;
	}
	public void unsetMonthcomponent(EIfcrecurrencepattern type) throws SdaiException {
		unset_aggregate(a3);
		a3 = null;
	}
	public static jsdai.dictionary.EAttribute attributeMonthcomponent(EIfcrecurrencepattern type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #5272=EXPLICIT_ATTRIBUTE('Position',#5266,4,#2529,$,.T.);
	//<01> generating methods for consolidated attribute:  Position
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Position, base type: INTEGER
	public boolean testPosition(EIfcrecurrencepattern type) throws SdaiException {
		return test_integer(a4);
	}
	public int getPosition(EIfcrecurrencepattern type) throws SdaiException {
		return get_integer(a4);
	}
	public void setPosition(EIfcrecurrencepattern type, int value) throws SdaiException {
		a4 = set_integer(value);
	}
	public void unsetPosition(EIfcrecurrencepattern type) throws SdaiException {
		a4 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributePosition(EIfcrecurrencepattern type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5273=EXPLICIT_ATTRIBUTE('Interval',#5266,5,#2529,$,.T.);
	//<01> generating methods for consolidated attribute:  Interval
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Interval, base type: INTEGER
	public boolean testInterval(EIfcrecurrencepattern type) throws SdaiException {
		return test_integer(a5);
	}
	public int getInterval(EIfcrecurrencepattern type) throws SdaiException {
		return get_integer(a5);
	}
	public void setInterval(EIfcrecurrencepattern type, int value) throws SdaiException {
		a5 = set_integer(value);
	}
	public void unsetInterval(EIfcrecurrencepattern type) throws SdaiException {
		a5 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeInterval(EIfcrecurrencepattern type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #5274=EXPLICIT_ATTRIBUTE('Occurrences',#5266,6,#2529,$,.T.);
	//<01> generating methods for consolidated attribute:  Occurrences
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Occurrences, base type: INTEGER
	public boolean testOccurrences(EIfcrecurrencepattern type) throws SdaiException {
		return test_integer(a6);
	}
	public int getOccurrences(EIfcrecurrencepattern type) throws SdaiException {
		return get_integer(a6);
	}
	public void setOccurrences(EIfcrecurrencepattern type, int value) throws SdaiException {
		a6 = set_integer(value);
	}
	public void unsetOccurrences(EIfcrecurrencepattern type) throws SdaiException {
		a6 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeOccurrences(EIfcrecurrencepattern type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #5275=EXPLICIT_ATTRIBUTE('TimePeriods',#5266,7,#7067,$,.T.);
	//<01> generating methods for consolidated attribute:  TimePeriods
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: TimePeriods, base type: LIST OF ENTITY
	public static int usedinTimeperiods(EIfcrecurrencepattern type, EIfctimeperiod instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testTimeperiods(EIfcrecurrencepattern type) throws SdaiException {
		return test_aggregate(a7);
	}
	public AIfctimeperiod getTimeperiods(EIfcrecurrencepattern type) throws SdaiException {
		return (AIfctimeperiod)get_aggregate(a7);
	}
	public AIfctimeperiod createTimeperiods(EIfcrecurrencepattern type) throws SdaiException {
		a7 = (AIfctimeperiod)create_aggregate_class(a7, a7$,  AIfctimeperiod.class, 0);
		return a7;
	}
	public void unsetTimeperiods(EIfcrecurrencepattern type) throws SdaiException {
		unset_aggregate(a7);
		a7 = null;
	}
	public static jsdai.dictionary.EAttribute attributeTimeperiods(EIfcrecurrencepattern type) throws SdaiException {
		return a7$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a4 = Integer.MIN_VALUE;
			a5 = Integer.MIN_VALUE;
			a6 = Integer.MIN_VALUE;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getIntegerAggregate(1, a1$, this);
		a2 = av.entityValues[0].getIntegerAggregate(2, a2$, this);
		a3 = av.entityValues[0].getIntegerAggregate(3, a3$, this);
		a4 = av.entityValues[0].getInteger(4);
		a5 = av.entityValues[0].getInteger(5);
		a6 = av.entityValues[0].getInteger(6);
		a7 = (AIfctimeperiod)av.entityValues[0].getInstanceAggregate(7, a7$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a4 = Integer.MIN_VALUE;
			a5 = Integer.MIN_VALUE;
			a6 = Integer.MIN_VALUE;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getIntegerAggregate(1, a1$, this);
		a2 = av.entityValues[0].getIntegerAggregate(2, a2$, this);
		a3 = av.entityValues[0].getIntegerAggregate(3, a3$, this);
		a4 = av.entityValues[0].getInteger(4);
		a5 = av.entityValues[0].getInteger(5);
		a6 = av.entityValues[0].getInteger(6);
		a7 = (AIfctimeperiod)av.entityValues[0].getInstanceAggregate(7, a7$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRecurrencePattern
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setIntegerAggregate(1, a1);
		av.entityValues[0].setIntegerAggregate(2, a2);
		av.entityValues[0].setIntegerAggregate(3, a3);
		av.entityValues[0].setInteger(4, a4);
		av.entityValues[0].setInteger(5, a5);
		av.entityValues[0].setInteger(6, a6);
		av.entityValues[0].setInstanceAggregate(7, a7);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRecurrencePattern
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setIntegerAggregate(1, a1);
		av.entityValues[0].setIntegerAggregate(2, a2);
		av.entityValues[0].setIntegerAggregate(3, a3);
		av.entityValues[0].setInteger(4, a4);
		av.entityValues[0].setInteger(5, a5);
		av.entityValues[0].setInteger(6, a6);
		av.entityValues[0].setInstanceAggregate(7, a7);
	}
}
