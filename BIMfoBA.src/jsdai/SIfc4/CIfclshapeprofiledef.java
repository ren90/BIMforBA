/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLShapeProfileDef

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclshapeprofiledef extends CIfcparameterizedprofiledef implements EIfclshapeprofiledef {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclshapeprofiledef.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// ProfileType: protected int a0;   ProfileType - java inheritance - ENUMERATION IfcProfileTypeEnum
	// ProfileName: protected String a1;   ProfileName - java inheritance - STRING
	// HasExternalReference: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcProfileProperties
	// Position: protected Object a2;   Position - java inheritance - ENTITY IfcAxis2Placement2D
	protected double a3; // Depth - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // Width - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a5; // Thickness - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // FilletRadius - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a7; // EdgeRadius - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a8; // LegSlope - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// ProfileType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected int a0;
	// ProfileName - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// HasExternalReference - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Position - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// Depth - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// Width - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// Thickness - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;
	// FilletRadius - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;
	// EdgeRadius - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a7;
	// LegSlope - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected double a8;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5070=EXPLICIT_ATTRIBUTE('ProfileType',#5068,0,#2963,$,.F.);
	//<01> generating methods for consolidated attribute:  ProfileType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5071=EXPLICIT_ATTRIBUTE('ProfileName',#5068,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ProfileName
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5072=INVERSE_ATTRIBUTE('HasExternalReference',#5068,0,#4231,$,#4234,#8892,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReference
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5073=INVERSE_ATTRIBUTE('HasProperties',#5068,1,#5074,$,#5076,#8894,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4870=EXPLICIT_ATTRIBUTE('Position',#4868,0,#3378,$,.T.);
	//<01> generating methods for consolidated attribute:  Position
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Position, base type: entity IfcAxis2Placement2D
	public static int usedinPosition(EIfcparameterizedprofiledef type, EIfcaxis2placement2d instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #4521=EXPLICIT_ATTRIBUTE('Depth',#4519,0,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  Depth
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Depth, base type: REAL
	public boolean testDepth(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a3);
	}
	public double getDepth(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a3);
	}
	public void setDepth(EIfclshapeprofiledef type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetDepth(EIfclshapeprofiledef type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeDepth(EIfclshapeprofiledef type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4522=EXPLICIT_ATTRIBUTE('Width',#4519,1,#2605,$,.T.);
	//<01> generating methods for consolidated attribute:  Width
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Width, base type: REAL
	public boolean testWidth(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a4);
	}
	public double getWidth(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a4);
	}
	public void setWidth(EIfclshapeprofiledef type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetWidth(EIfclshapeprofiledef type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeWidth(EIfclshapeprofiledef type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4523=EXPLICIT_ATTRIBUTE('Thickness',#4519,2,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  Thickness
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Thickness, base type: REAL
	public boolean testThickness(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a5);
	}
	public double getThickness(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a5);
	}
	public void setThickness(EIfclshapeprofiledef type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetThickness(EIfclshapeprofiledef type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeThickness(EIfclshapeprofiledef type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4524=EXPLICIT_ATTRIBUTE('FilletRadius',#4519,3,#2591,$,.T.);
	//<01> generating methods for consolidated attribute:  FilletRadius
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: FilletRadius, base type: REAL
	public boolean testFilletradius(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a6);
	}
	public double getFilletradius(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a6);
	}
	public void setFilletradius(EIfclshapeprofiledef type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetFilletradius(EIfclshapeprofiledef type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeFilletradius(EIfclshapeprofiledef type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4525=EXPLICIT_ATTRIBUTE('EdgeRadius',#4519,4,#2591,$,.T.);
	//<01> generating methods for consolidated attribute:  EdgeRadius
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EdgeRadius, base type: REAL
	public boolean testEdgeradius(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a7);
	}
	public double getEdgeradius(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a7);
	}
	public void setEdgeradius(EIfclshapeprofiledef type, double value) throws SdaiException {
		a7 = set_double(value);
	}
	public void unsetEdgeradius(EIfclshapeprofiledef type) throws SdaiException {
		a7 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeEdgeradius(EIfclshapeprofiledef type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4526=EXPLICIT_ATTRIBUTE('LegSlope',#4519,5,#2603,$,.T.);
	//<01> generating methods for consolidated attribute:  LegSlope
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LegSlope, base type: REAL
	public boolean testLegslope(EIfclshapeprofiledef type) throws SdaiException {
		return test_double(a8);
	}
	public double getLegslope(EIfclshapeprofiledef type) throws SdaiException {
		return get_double(a8);
	}
	public void setLegslope(EIfclshapeprofiledef type, double value) throws SdaiException {
		a8 = set_double(value);
	}
	public void unsetLegslope(EIfclshapeprofiledef type) throws SdaiException {
		a8 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLegslope(EIfclshapeprofiledef type) throws SdaiException {
		return a8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = Double.NaN;
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			return;
		}
		a3 = av.entityValues[0].getDouble(0);
		a4 = av.entityValues[0].getDouble(1);
		a5 = av.entityValues[0].getDouble(2);
		a6 = av.entityValues[0].getDouble(3);
		a7 = av.entityValues[0].getDouble(4);
		a8 = av.entityValues[0].getDouble(5);
		a2 = av.entityValues[1].getInstance(0, this, a2$);
		a0 = av.entityValues[2].getEnumeration(0, a0$);
		a1 = av.entityValues[2].getString(1);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = Double.NaN;
			a2 = unset_instance(a2);
			a0 = 0;
			a1 = null;
			return;
		}
		a3 = av.entityValues[0].getDouble(0);
		a4 = av.entityValues[0].getDouble(1);
		a5 = av.entityValues[0].getDouble(2);
		a6 = av.entityValues[0].getDouble(3);
		a7 = av.entityValues[0].getDouble(4);
		a8 = av.entityValues[0].getDouble(5);
		a2 = av.entityValues[1].getInstance(0, this, a2$);
		a0 = av.entityValues[2].getEnumeration(0, a0$);
		a1 = av.entityValues[2].getString(1);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcLShapeProfileDef
		av.entityValues[0].setDouble(0, a3);
		av.entityValues[0].setDouble(1, a4);
		av.entityValues[0].setDouble(2, a5);
		av.entityValues[0].setDouble(3, a6);
		av.entityValues[0].setDouble(4, a7);
		av.entityValues[0].setDouble(5, a8);
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[1].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[2].setEnumeration(0, a0, a0$);
		av.entityValues[2].setString(1, a1);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcLShapeProfileDef
		av.entityValues[0].setDouble(0, a3);
		av.entityValues[0].setDouble(1, a4);
		av.entityValues[0].setDouble(2, a5);
		av.entityValues[0].setDouble(3, a6);
		av.entityValues[0].setDouble(4, a7);
		av.entityValues[0].setDouble(5, a8);
		// partial entity: IfcParameterizedProfileDef
		av.entityValues[1].setInstance(0, a2);
		// partial entity: IfcProfileDef
		av.entityValues[2].setEnumeration(0, a0, a0$);
		av.entityValues[2].setString(1, a1);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfclshapeprofiledefValidthickness(SdaiContext _context) throws SdaiException {
	







		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a5$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a3$))), Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a4$)))), Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a5$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcPositiveLengthMeasure).set(_context, get(a4$)))))).getLogical());
	}
}
