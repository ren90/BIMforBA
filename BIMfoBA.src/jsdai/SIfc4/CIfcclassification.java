/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcClassification

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcclassification extends CIfcexternalinformation implements EIfcclassification {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcclassification.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Source - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Edition - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // EditionDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a3; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // Location - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected A_string a6; // ReferenceTokens - current entity - LIST OF STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// ClassificationForObjects: protected Object  - inverse - current -  ENTITY IfcRelAssociatesClassification
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasReferences: protected Object  - inverse - current -  ENTITY IfcClassificationReference
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Source - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Edition - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// EditionDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// Location - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// ReferenceTokens - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected A_string a6;
	// ClassificationForObjects - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasReferences - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3626=EXPLICIT_ATTRIBUTE('Source',#3624,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Source
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Source, base type: STRING
	public boolean testSource(EIfcclassification type) throws SdaiException {
		return test_string(a0);
	}
	public String getSource(EIfcclassification type) throws SdaiException {
		return get_string(a0);
	}
	public void setSource(EIfcclassification type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetSource(EIfcclassification type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSource(EIfcclassification type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3627=EXPLICIT_ATTRIBUTE('Edition',#3624,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Edition
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Edition, base type: STRING
	public boolean testEdition(EIfcclassification type) throws SdaiException {
		return test_string(a1);
	}
	public String getEdition(EIfcclassification type) throws SdaiException {
		return get_string(a1);
	}
	public void setEdition(EIfcclassification type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetEdition(EIfcclassification type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeEdition(EIfcclassification type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3628=EXPLICIT_ATTRIBUTE('EditionDate',#3624,2,#2475,$,.T.);
	//<01> generating methods for consolidated attribute:  EditionDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EditionDate, base type: STRING
	public boolean testEditiondate(EIfcclassification type) throws SdaiException {
		return test_string(a2);
	}
	public String getEditiondate(EIfcclassification type) throws SdaiException {
		return get_string(a2);
	}
	public void setEditiondate(EIfcclassification type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetEditiondate(EIfcclassification type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeEditiondate(EIfcclassification type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3629=EXPLICIT_ATTRIBUTE('Name',#3624,3,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcclassification type) throws SdaiException {
		return test_string(a3);
	}
	public String getName(EIfcclassification type) throws SdaiException {
		return get_string(a3);
	}
	public void setName(EIfcclassification type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetName(EIfcclassification type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcclassification type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #3630=EXPLICIT_ATTRIBUTE('Description',#3624,4,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcclassification type) throws SdaiException {
		return test_string(a4);
	}
	public String getDescription(EIfcclassification type) throws SdaiException {
		return get_string(a4);
	}
	public void setDescription(EIfcclassification type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetDescription(EIfcclassification type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcclassification type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #3631=EXPLICIT_ATTRIBUTE('Location',#3624,5,#2687,$,.T.);
	//<01> generating methods for consolidated attribute:  Location
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Location, base type: STRING
	public boolean testLocation(EIfcclassification type) throws SdaiException {
		return test_string(a5);
	}
	public String getLocation(EIfcclassification type) throws SdaiException {
		return get_string(a5);
	}
	public void setLocation(EIfcclassification type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetLocation(EIfcclassification type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLocation(EIfcclassification type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #3632=EXPLICIT_ATTRIBUTE('ReferenceTokens',#3624,6,#6850,$,.T.);
	//<01> generating methods for consolidated attribute:  ReferenceTokens
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: ReferenceTokens, base type: LIST OF STRING
	public boolean testReferencetokens(EIfcclassification type) throws SdaiException {
		return test_aggregate(a6);
	}
	public A_string getReferencetokens(EIfcclassification type) throws SdaiException {
		return (A_string)get_aggregate(a6);
	}
	public A_string createReferencetokens(EIfcclassification type) throws SdaiException {
		a6 = create_aggregate_string(a6, a6$, 0);
		return a6;
	}
	public void unsetReferencetokens(EIfcclassification type) throws SdaiException {
		unset_aggregate(a6);
		a6 = null;
	}
	public static jsdai.dictionary.EAttribute attributeReferencetokens(EIfcclassification type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #3633=INVERSE_ATTRIBUTE('ClassificationForObjects',#3624,0,#5381,$,#5383,#7879,$,.F.);
	//<01> generating methods for consolidated attribute:  ClassificationForObjects
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - ClassificationForObjects : SET[0:-2147483648] OF IfcRelAssociatesClassification FOR RelatingClassification
	public AIfcrelassociatesclassification getClassificationforobjects(EIfcclassification type, ASdaiModel domain) throws SdaiException {
		AIfcrelassociatesclassification result = (AIfcrelassociatesclassification)get_inverse_aggregate(i0$);
		CIfcrelassociatesclassification.usedinRelatingclassification(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeClassificationforobjects(EIfcclassification type) throws SdaiException {
		return i0$;
	}

	//going through all the attributes: #3634=INVERSE_ATTRIBUTE('HasReferences',#3624,1,#3635,$,#3637,#7881,$,.F.);
	//<01> generating methods for consolidated attribute:  HasReferences
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasReferences : SET[0:-2147483648] OF IfcClassificationReference FOR ReferencedSource
	public AIfcclassificationreference getHasreferences(EIfcclassification type, ASdaiModel domain) throws SdaiException {
		AIfcclassificationreference result = (AIfcclassificationreference)get_inverse_aggregate(i1$);
		CIfcclassificationreference.usedinReferencedsource(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasreferences(EIfcclassification type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			a4 = null;
			a5 = null;
			if (a6 instanceof CAggregate)
				a6.unsetAll();
			a6 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[0].getString(4);
		a5 = av.entityValues[0].getString(5);
		a6 = av.entityValues[0].getStringAggregate(6, a6$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			a3 = null;
			a4 = null;
			a5 = null;
			if (a6 instanceof CAggregate)
				a6.unsetAll();
			a6 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[0].getString(4);
		a5 = av.entityValues[0].getString(5);
		a6 = av.entityValues[0].getStringAggregate(6, a6$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcClassification
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setString(3, a3);
		av.entityValues[0].setString(4, a4);
		av.entityValues[0].setString(5, a5);
		av.entityValues[0].setStringAggregate(6, a6);
		// partial entity: IfcExternalInformation
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcClassification
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setString(3, a3);
		av.entityValues[0].setString(4, a4);
		av.entityValues[0].setString(5, a5);
		av.entityValues[0].setStringAggregate(6, a6);
		// partial entity: IfcExternalInformation
	}
}
