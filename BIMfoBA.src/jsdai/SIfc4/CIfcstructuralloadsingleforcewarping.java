/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcStructuralLoadSingleForceWarping

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcstructuralloadsingleforcewarping extends CIfcstructuralloadsingleforce implements EIfcstructuralloadsingleforcewarping {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcstructuralloadsingleforcewarping.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// ForceX: protected double a1;   ForceX - java inheritance - REAL
	// ForceY: protected double a2;   ForceY - java inheritance - REAL
	// ForceZ: protected double a3;   ForceZ - java inheritance - REAL
	// MomentX: protected double a4;   MomentX - java inheritance - REAL
	// MomentY: protected double a5;   MomentY - java inheritance - REAL
	// MomentZ: protected double a6;   MomentZ - java inheritance - REAL
	protected double a7; // WarpingMoment - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// ForceX - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected double a1;
	// ForceY - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected double a2;
	// ForceZ - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected double a3;
	// MomentX - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected double a4;
	// MomentY - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected double a5;
	// MomentZ - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// protected double a6;
	// WarpingMoment - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a7;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5838=EXPLICIT_ATTRIBUTE('Name',#5836,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5883=EXPLICIT_ATTRIBUTE('ForceX',#5881,0,#2513,$,.T.);
	//<01> generating methods for consolidated attribute:  ForceX
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5884=EXPLICIT_ATTRIBUTE('ForceY',#5881,1,#2513,$,.T.);
	//<01> generating methods for consolidated attribute:  ForceY
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5885=EXPLICIT_ATTRIBUTE('ForceZ',#5881,2,#2513,$,.T.);
	//<01> generating methods for consolidated attribute:  ForceZ
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5886=EXPLICIT_ATTRIBUTE('MomentX',#5881,3,#2685,$,.T.);
	//<01> generating methods for consolidated attribute:  MomentX
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5887=EXPLICIT_ATTRIBUTE('MomentY',#5881,4,#2685,$,.T.);
	//<01> generating methods for consolidated attribute:  MomentY
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5888=EXPLICIT_ATTRIBUTE('MomentZ',#5881,5,#2685,$,.T.);
	//<01> generating methods for consolidated attribute:  MomentZ
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5891=EXPLICIT_ATTRIBUTE('WarpingMoment',#5889,0,#2697,$,.T.);
	//<01> generating methods for consolidated attribute:  WarpingMoment
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: WarpingMoment, base type: REAL
	public boolean testWarpingmoment(EIfcstructuralloadsingleforcewarping type) throws SdaiException {
		return test_double(a7);
	}
	public double getWarpingmoment(EIfcstructuralloadsingleforcewarping type) throws SdaiException {
		return get_double(a7);
	}
	public void setWarpingmoment(EIfcstructuralloadsingleforcewarping type, double value) throws SdaiException {
		a7 = set_double(value);
	}
	public void unsetWarpingmoment(EIfcstructuralloadsingleforcewarping type) throws SdaiException {
		a7 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeWarpingmoment(EIfcstructuralloadsingleforcewarping type) throws SdaiException {
		return a7$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[2].getDouble(0);
		a2 = av.entityValues[2].getDouble(1);
		a3 = av.entityValues[2].getDouble(2);
		a4 = av.entityValues[2].getDouble(3);
		a5 = av.entityValues[2].getDouble(4);
		a6 = av.entityValues[2].getDouble(5);
		a7 = av.entityValues[3].getDouble(0);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = Double.NaN;
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			a6 = Double.NaN;
			a7 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[2].getDouble(0);
		a2 = av.entityValues[2].getDouble(1);
		a3 = av.entityValues[2].getDouble(2);
		a4 = av.entityValues[2].getDouble(3);
		a5 = av.entityValues[2].getDouble(4);
		a6 = av.entityValues[2].getDouble(5);
		a7 = av.entityValues[3].getDouble(0);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcStructuralLoad
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcStructuralLoadOrResult
		// partial entity: IfcStructuralLoadSingleForce
		av.entityValues[2].setDouble(0, a1);
		av.entityValues[2].setDouble(1, a2);
		av.entityValues[2].setDouble(2, a3);
		av.entityValues[2].setDouble(3, a4);
		av.entityValues[2].setDouble(4, a5);
		av.entityValues[2].setDouble(5, a6);
		// partial entity: IfcStructuralLoadSingleForceWarping
		av.entityValues[3].setDouble(0, a7);
		// partial entity: IfcStructuralLoadStatic
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcStructuralLoad
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcStructuralLoadOrResult
		// partial entity: IfcStructuralLoadSingleForce
		av.entityValues[2].setDouble(0, a1);
		av.entityValues[2].setDouble(1, a2);
		av.entityValues[2].setDouble(2, a3);
		av.entityValues[2].setDouble(3, a4);
		av.entityValues[2].setDouble(4, a5);
		av.entityValues[2].setDouble(5, a6);
		// partial entity: IfcStructuralLoadSingleForceWarping
		av.entityValues[3].setDouble(0, a7);
		// partial entity: IfcStructuralLoadStatic
	}
}
