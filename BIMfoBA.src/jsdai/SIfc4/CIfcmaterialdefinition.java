/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialDefinition

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmaterialdefinition extends CEntity implements EIfcmaterialdefinition {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmaterialdefinition.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - current -  ENTITY IfcRelAssociatesMaterial
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences: protected Object  - inverse - current -  ENTITY IfcExternalReferenceRelationship
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties: protected Object  - inverse - current -  ENTITY IfcMaterialProperties
	protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4658=INVERSE_ATTRIBUTE('AssociatedTo',#4656,0,#5394,$,#5396,#8598,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - AssociatedTo : SET[0:-2147483648] OF IfcRelAssociatesMaterial FOR RelatingMaterial
	public AIfcrelassociatesmaterial getAssociatedto(EIfcmaterialdefinition type, ASdaiModel domain) throws SdaiException {
		AIfcrelassociatesmaterial result = (AIfcrelassociatesmaterial)get_inverse_aggregate(i0$);
		CIfcrelassociatesmaterial.usedinRelatingmaterial(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeAssociatedto(EIfcmaterialdefinition type) throws SdaiException {
		return i0$;
	}

	//going through all the attributes: #4659=INVERSE_ATTRIBUTE('HasExternalReferences',#4656,1,#4231,$,#4234,#8600,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasExternalReferences : SET[0:-2147483648] OF IfcExternalReferenceRelationship FOR RelatedResourceObjects
	public AIfcexternalreferencerelationship getHasexternalreferences(EIfcmaterialdefinition type, ASdaiModel domain) throws SdaiException {
		AIfcexternalreferencerelationship result = (AIfcexternalreferencerelationship)get_inverse_aggregate(i1$);
		CIfcexternalreferencerelationship.usedinRelatedresourceobjects(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasexternalreferences(EIfcmaterialdefinition type) throws SdaiException {
		return i1$;
	}

	//going through all the attributes: #4660=INVERSE_ATTRIBUTE('HasProperties',#4656,2,#4721,$,#4723,#8602,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasProperties : SET[0:-2147483648] OF IfcMaterialProperties FOR Material
	public AIfcmaterialproperties getHasproperties(EIfcmaterialdefinition type, ASdaiModel domain) throws SdaiException {
		AIfcmaterialproperties result = (AIfcmaterialproperties)get_inverse_aggregate(i2$);
		CIfcmaterialproperties.usedinMaterial(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasproperties(EIfcmaterialdefinition type) throws SdaiException {
		return i2$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			return;
		}
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			return;
		}
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
	}
}
