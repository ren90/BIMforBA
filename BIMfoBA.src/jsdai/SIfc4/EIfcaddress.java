/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcAddress

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcaddress extends EEntity {

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:Purpose, base type: ENUMERATION
	public boolean testPurpose(EIfcaddress type) throws SdaiException;
	public int getPurpose(EIfcaddress type) throws SdaiException;
	public void setPurpose(EIfcaddress type, int value) throws SdaiException;
	public void unsetPurpose(EIfcaddress type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Description, base type: STRING
	public boolean testDescription(EIfcaddress type) throws SdaiException;
	public String getDescription(EIfcaddress type) throws SdaiException;
	public void setDescription(EIfcaddress type, String value) throws SdaiException;
	public void unsetDescription(EIfcaddress type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:UserDefinedPurpose, base type: STRING
	public boolean testUserdefinedpurpose(EIfcaddress type) throws SdaiException;
	public String getUserdefinedpurpose(EIfcaddress type) throws SdaiException;
	public void setUserdefinedpurpose(EIfcaddress type, String value) throws SdaiException;
	public void unsetUserdefinedpurpose(EIfcaddress type) throws SdaiException;

	// Inverse attribute - OfPerson : SET[0:-2147483648] OF IfcPerson FOR Addresses
	public AIfcperson getOfperson(EIfcaddress type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - OfOrganization : SET[0:-2147483648] OF IfcOrganization FOR Addresses
	public AIfcorganization getOforganization(EIfcaddress type, ASdaiModel domain) throws SdaiException;
}
