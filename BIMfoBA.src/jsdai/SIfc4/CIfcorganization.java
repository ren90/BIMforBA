/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcOrganization

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcorganization extends CEntity implements EIfcorganization {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcorganization.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Identification - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected AIfcactorrole a3; // Roles - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected AIfcaddress a4; // Addresses - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// IsRelatedBy: protected Object  - inverse - current -  ENTITY IfcOrganizationRelationship
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Relates: protected Object  - inverse - current -  ENTITY IfcOrganizationRelationship
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Engages: protected Object  - inverse - current -  ENTITY IfcPersonAndOrganization
	protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Identification - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// Roles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected AIfcactorrole a3;
	// Addresses - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected AIfcaddress a4;
	// IsRelatedBy - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Relates - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Engages - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a3, old, newer);
		changeReferencesAggregate(a4, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a3, old, newer);
		changeReferencesAggregate(a4, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4832=EXPLICIT_ATTRIBUTE('Identification',#4830,0,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Identification
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Identification, base type: STRING
	public boolean testIdentification(EIfcorganization type) throws SdaiException {
		return test_string(a0);
	}
	public String getIdentification(EIfcorganization type) throws SdaiException {
		return get_string(a0);
	}
	public void setIdentification(EIfcorganization type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetIdentification(EIfcorganization type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeIdentification(EIfcorganization type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4833=EXPLICIT_ATTRIBUTE('Name',#4830,1,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcorganization type) throws SdaiException {
		return test_string(a1);
	}
	public String getName(EIfcorganization type) throws SdaiException {
		return get_string(a1);
	}
	public void setName(EIfcorganization type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetName(EIfcorganization type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcorganization type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4834=EXPLICIT_ATTRIBUTE('Description',#4830,2,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcorganization type) throws SdaiException {
		return test_string(a2);
	}
	public String getDescription(EIfcorganization type) throws SdaiException {
		return get_string(a2);
	}
	public void setDescription(EIfcorganization type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetDescription(EIfcorganization type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcorganization type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4835=EXPLICIT_ATTRIBUTE('Roles',#4830,3,#6986,$,.T.);
	//<01> generating methods for consolidated attribute:  Roles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Roles, base type: LIST OF ENTITY
	public static int usedinRoles(EIfcorganization type, EIfcactorrole instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a3$, domain, result);
	}
	public boolean testRoles(EIfcorganization type) throws SdaiException {
		return test_aggregate(a3);
	}
	public AIfcactorrole getRoles(EIfcorganization type) throws SdaiException {
		return (AIfcactorrole)get_aggregate(a3);
	}
	public AIfcactorrole createRoles(EIfcorganization type) throws SdaiException {
		a3 = (AIfcactorrole)create_aggregate_class(a3, a3$,  AIfcactorrole.class, 0);
		return a3;
	}
	public void unsetRoles(EIfcorganization type) throws SdaiException {
		unset_aggregate(a3);
		a3 = null;
	}
	public static jsdai.dictionary.EAttribute attributeRoles(EIfcorganization type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4836=EXPLICIT_ATTRIBUTE('Addresses',#4830,4,#6987,$,.T.);
	//<01> generating methods for consolidated attribute:  Addresses
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Addresses, base type: LIST OF ENTITY
	public static int usedinAddresses(EIfcorganization type, EIfcaddress instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testAddresses(EIfcorganization type) throws SdaiException {
		return test_aggregate(a4);
	}
	public AIfcaddress getAddresses(EIfcorganization type) throws SdaiException {
		return (AIfcaddress)get_aggregate(a4);
	}
	public AIfcaddress createAddresses(EIfcorganization type) throws SdaiException {
		a4 = (AIfcaddress)create_aggregate_class(a4, a4$,  AIfcaddress.class, 0);
		return a4;
	}
	public void unsetAddresses(EIfcorganization type) throws SdaiException {
		unset_aggregate(a4);
		a4 = null;
	}
	public static jsdai.dictionary.EAttribute attributeAddresses(EIfcorganization type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4837=INVERSE_ATTRIBUTE('IsRelatedBy',#4830,0,#4840,$,#4843,#8710,$,.F.);
	//<01> generating methods for consolidated attribute:  IsRelatedBy
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - IsRelatedBy : SET[0:-2147483648] OF IfcOrganizationRelationship FOR RelatedOrganizations
	public AIfcorganizationrelationship getIsrelatedby(EIfcorganization type, ASdaiModel domain) throws SdaiException {
		AIfcorganizationrelationship result = (AIfcorganizationrelationship)get_inverse_aggregate(i0$);
		CIfcorganizationrelationship.usedinRelatedorganizations(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeIsrelatedby(EIfcorganization type) throws SdaiException {
		return i0$;
	}

	//going through all the attributes: #4838=INVERSE_ATTRIBUTE('Relates',#4830,1,#4840,$,#4842,#8712,$,.F.);
	//<01> generating methods for consolidated attribute:  Relates
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - Relates : SET[0:-2147483648] OF IfcOrganizationRelationship FOR RelatingOrganization
	public AIfcorganizationrelationship getRelates(EIfcorganization type, ASdaiModel domain) throws SdaiException {
		AIfcorganizationrelationship result = (AIfcorganizationrelationship)get_inverse_aggregate(i1$);
		CIfcorganizationrelationship.usedinRelatingorganization(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeRelates(EIfcorganization type) throws SdaiException {
		return i1$;
	}

	//going through all the attributes: #4839=INVERSE_ATTRIBUTE('Engages',#4830,2,#4905,$,#4908,#8714,$,.F.);
	//<01> generating methods for consolidated attribute:  Engages
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - Engages : SET[0:-2147483648] OF IfcPersonAndOrganization FOR TheOrganization
	public AIfcpersonandorganization getEngages(EIfcorganization type, ASdaiModel domain) throws SdaiException {
		AIfcpersonandorganization result = (AIfcpersonandorganization)get_inverse_aggregate(i2$);
		CIfcpersonandorganization.usedinTheorganization(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeEngages(EIfcorganization type) throws SdaiException {
		return i2$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			if (a3 instanceof CAggregate)
				a3.unsetAll();
			a3 = null;
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = (AIfcactorrole)av.entityValues[0].getInstanceAggregate(3, a3$, this);
		a4 = (AIfcaddress)av.entityValues[0].getInstanceAggregate(4, a4$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			if (a3 instanceof CAggregate)
				a3.unsetAll();
			a3 = null;
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = (AIfcactorrole)av.entityValues[0].getInstanceAggregate(3, a3$, this);
		a4 = (AIfcaddress)av.entityValues[0].getInstanceAggregate(4, a4$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcOrganization
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setInstanceAggregate(3, a3);
		av.entityValues[0].setInstanceAggregate(4, a4);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcOrganization
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setInstanceAggregate(3, a3);
		av.entityValues[0].setInstanceAggregate(4, a4);
	}
}
