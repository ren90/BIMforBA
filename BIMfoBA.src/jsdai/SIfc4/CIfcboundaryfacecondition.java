/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcBoundaryFaceCondition

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcboundaryfacecondition extends CIfcboundarycondition implements EIfcboundaryfacecondition {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcboundaryfacecondition.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	protected Object a1; // TranslationalStiffnessByAreaX - current entity - SELECT IfcModulusOfSubgradeReactionSelect
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a1$$; // current SELECT path indicator
	protected Object a2; // TranslationalStiffnessByAreaY - current entity - SELECT IfcModulusOfSubgradeReactionSelect
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2$$; // current SELECT path indicator
	protected Object a3; // TranslationalStiffnessByAreaZ - current entity - SELECT IfcModulusOfSubgradeReactionSelect
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a3$$; // current SELECT path indicator
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// TranslationalStiffnessByAreaX - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a1;
	protected int a1$$;
	// TranslationalStiffnessByAreaY - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected Object a2;
	protected int a2$$;
	// TranslationalStiffnessByAreaZ - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Object a3;
	protected int a3$$;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3456=EXPLICIT_ATTRIBUTE('Name',#3454,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3469=EXPLICIT_ATTRIBUTE('TranslationalStiffnessByAreaX',#3467,0,#3169,$,.T.);
	//<01> generating methods for consolidated attribute:  TranslationalStiffnessByAreaX
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: TranslationalStiffnessByAreaX
	public int testTranslationalstiffnessbyareax(EIfcboundaryfacecondition type) throws SdaiException {
		return test_select(a1, a1$$);
	}

	public boolean getTranslationalstiffnessbyareax(EIfcboundaryfacecondition type, EIfcboolean node1) throws SdaiException { // case 2
		return get_boolean_select(a1, a1$$, 2);
	}
	public double getTranslationalstiffnessbyareax(EIfcboundaryfacecondition type, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		return get_double_select(a1, a1$$, 3);
	}

	public void setTranslationalstiffnessbyareax(EIfcboundaryfacecondition type, boolean value, EIfcboolean node1) throws SdaiException { // case 2
		a1 = set_boolean_select(value);
		a1$$ = 2;
	}
	public void setTranslationalstiffnessbyareax(EIfcboundaryfacecondition type, double value, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		a1 = set_double_select(value);
		a1$$ = 3;
	}

	public void unsetTranslationalstiffnessbyareax(EIfcboundaryfacecondition type) throws SdaiException {
		a1 = unset_select(a1);
		a1$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeTranslationalstiffnessbyareax(EIfcboundaryfacecondition type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3470=EXPLICIT_ATTRIBUTE('TranslationalStiffnessByAreaY',#3467,1,#3169,$,.T.);
	//<01> generating methods for consolidated attribute:  TranslationalStiffnessByAreaY
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: TranslationalStiffnessByAreaY
	public int testTranslationalstiffnessbyareay(EIfcboundaryfacecondition type) throws SdaiException {
		return test_select(a2, a2$$);
	}

	public boolean getTranslationalstiffnessbyareay(EIfcboundaryfacecondition type, EIfcboolean node1) throws SdaiException { // case 2
		return get_boolean_select(a2, a2$$, 2);
	}
	public double getTranslationalstiffnessbyareay(EIfcboundaryfacecondition type, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		return get_double_select(a2, a2$$, 3);
	}

	public void setTranslationalstiffnessbyareay(EIfcboundaryfacecondition type, boolean value, EIfcboolean node1) throws SdaiException { // case 2
		a2 = set_boolean_select(value);
		a2$$ = 2;
	}
	public void setTranslationalstiffnessbyareay(EIfcboundaryfacecondition type, double value, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		a2 = set_double_select(value);
		a2$$ = 3;
	}

	public void unsetTranslationalstiffnessbyareay(EIfcboundaryfacecondition type) throws SdaiException {
		a2 = unset_select(a2);
		a2$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeTranslationalstiffnessbyareay(EIfcboundaryfacecondition type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3471=EXPLICIT_ATTRIBUTE('TranslationalStiffnessByAreaZ',#3467,2,#3169,$,.T.);
	//<01> generating methods for consolidated attribute:  TranslationalStiffnessByAreaZ
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: TranslationalStiffnessByAreaZ
	public int testTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type) throws SdaiException {
		return test_select(a3, a3$$);
	}

	public boolean getTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type, EIfcboolean node1) throws SdaiException { // case 2
		return get_boolean_select(a3, a3$$, 2);
	}
	public double getTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		return get_double_select(a3, a3$$, 3);
	}

	public void setTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type, boolean value, EIfcboolean node1) throws SdaiException { // case 2
		a3 = set_boolean_select(value);
		a3$$ = 2;
	}
	public void setTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type, double value, EIfcmodulusofsubgradereactionmeasure node1) throws SdaiException { // case 3
		a3 = set_double_select(value);
		a3$$ = 3;
	}

	public void unsetTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type) throws SdaiException {
		a3 = unset_select(a3);
		a3$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeTranslationalstiffnessbyareaz(EIfcboundaryfacecondition type) throws SdaiException {
		return a3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_select(a1);
			a1$$ = 0;
			a2 = unset_select(a2);
			a2$$ = 0;
			a3 = unset_select(a3);
			a3$$ = 0;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getMixed(0,a1$, this);
		a1$$ = av.entityValues[1].getSelectNumber();
		a2 = av.entityValues[1].getMixed(1,a2$, this);
		a2$$ = av.entityValues[1].getSelectNumber();
		a3 = av.entityValues[1].getMixed(2,a3$, this);
		a3$$ = av.entityValues[1].getSelectNumber();
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_select(a1);
			a1$$ = 0;
			a2 = unset_select(a2);
			a2$$ = 0;
			a3 = unset_select(a3);
			a3$$ = 0;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[1].getMixed(0,a1$, this);
		a1$$ = av.entityValues[1].getSelectNumber();
		a2 = av.entityValues[1].getMixed(1,a2$, this);
		a2$$ = av.entityValues[1].getSelectNumber();
		a3 = av.entityValues[1].getMixed(2,a3$, this);
		a3$$ = av.entityValues[1].getSelectNumber();
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcBoundaryCondition
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcBoundaryFaceCondition
		av.entityValues[1].setMixed(0, a1, a1$, a1$$);
		av.entityValues[1].setMixed(1, a2, a2$, a2$$);
		av.entityValues[1].setMixed(2, a3, a3$, a3$$);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcBoundaryCondition
		av.entityValues[0].setString(0, a0);
		// partial entity: IfcBoundaryFaceCondition
		av.entityValues[1].setMixed(0, a1, a1$, a1$$);
		av.entityValues[1].setMixed(1, a2, a2$, a2$$);
		av.entityValues[1].setMixed(2, a3, a3$, a3$$);
	}
}
