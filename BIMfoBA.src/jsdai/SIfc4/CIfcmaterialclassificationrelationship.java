/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialClassificationRelationship

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmaterialclassificationrelationship extends CEntity implements EIfcmaterialclassificationrelationship {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmaterialclassificationrelationship.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected AIfcclassificationselect a0; // MaterialClassifications - current entity - SET OF SELECT
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a1; // ClassifiedMaterial - current entity - ENTITY IfcMaterial
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// MaterialClassifications - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected AIfcclassificationselect a0;
	// ClassifiedMaterial - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a1;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a0, old, newer);
		if (a1 == old) {
			a1 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a0, old, newer);
		if (a1 == old) {
			a1 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4641=EXPLICIT_ATTRIBUTE('MaterialClassifications',#4639,0,#6957,$,.F.);
	//<01> generating methods for consolidated attribute:  MaterialClassifications
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: MaterialClassifications, base type: SET OF SELECT
	public static int usedinMaterialclassifications(EIfcmaterialclassificationrelationship type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testMaterialclassifications(EIfcmaterialclassificationrelationship type) throws SdaiException {
		return test_aggregate(a0);
	}
	public AIfcclassificationselect getMaterialclassifications(EIfcmaterialclassificationrelationship type) throws SdaiException {
		if (a0 == null)
			throw new SdaiException(SdaiException.VA_NSET);
		return a0;
	}
	public AIfcclassificationselect createMaterialclassifications(EIfcmaterialclassificationrelationship type) throws SdaiException {
		a0 = (AIfcclassificationselect)create_aggregate_class(a0, a0$, AIfcclassificationselect.class, 0);
		return a0;
	}
	public void unsetMaterialclassifications(EIfcmaterialclassificationrelationship type) throws SdaiException {
		unset_aggregate(a0);
		a0 = null;
	}
	public static jsdai.dictionary.EAttribute attributeMaterialclassifications(EIfcmaterialclassificationrelationship type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4642=EXPLICIT_ATTRIBUTE('ClassifiedMaterial',#4639,1,#4631,$,.F.);
	//<01> generating methods for consolidated attribute:  ClassifiedMaterial
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ClassifiedMaterial, base type: entity IfcMaterial
	public static int usedinClassifiedmaterial(EIfcmaterialclassificationrelationship type, EIfcmaterial instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	public boolean testClassifiedmaterial(EIfcmaterialclassificationrelationship type) throws SdaiException {
		return test_instance(a1);
	}
	public EIfcmaterial getClassifiedmaterial(EIfcmaterialclassificationrelationship type) throws SdaiException {
		return (EIfcmaterial)get_instance(a1);
	}
	public void setClassifiedmaterial(EIfcmaterialclassificationrelationship type, EIfcmaterial value) throws SdaiException {
		a1 = set_instance(a1, value);
	}
	public void unsetClassifiedmaterial(EIfcmaterialclassificationrelationship type) throws SdaiException {
		a1 = unset_instance(a1);
	}
	public static jsdai.dictionary.EAttribute attributeClassifiedmaterial(EIfcmaterialclassificationrelationship type) throws SdaiException {
		return a1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			a1 = unset_instance(a1);
			return;
		}
		a0 = (AIfcclassificationselect)av.entityValues[0].getInstanceAggregate(0, a0$, this);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			a1 = unset_instance(a1);
			return;
		}
		a0 = (AIfcclassificationselect)av.entityValues[0].getInstanceAggregate(0, a0$, this);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialClassificationRelationship
		av.entityValues[0].setInstanceAggregate(0, a0);
		av.entityValues[0].setInstance(1, a1);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialClassificationRelationship
		av.entityValues[0].setInstanceAggregate(0, a0);
		av.entityValues[0].setInstance(1, a1);
	}
}
