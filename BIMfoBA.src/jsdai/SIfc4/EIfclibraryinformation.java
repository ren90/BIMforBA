/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcLibraryInformation

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfclibraryinformation extends EIfcexternalinformation {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Name, base type: STRING
	public boolean testName(EIfclibraryinformation type) throws SdaiException;
	public String getName(EIfclibraryinformation type) throws SdaiException;
	public void setName(EIfclibraryinformation type, String value) throws SdaiException;
	public void unsetName(EIfclibraryinformation type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Version, base type: STRING
	public boolean testVersion(EIfclibraryinformation type) throws SdaiException;
	public String getVersion(EIfclibraryinformation type) throws SdaiException;
	public void setVersion(EIfclibraryinformation type, String value) throws SdaiException;
	public void unsetVersion(EIfclibraryinformation type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: Publisher
	boolean testPublisher(EIfclibraryinformation type) throws SdaiException;

	EEntity getPublisher(EIfclibraryinformation type) throws SdaiException; // case 1

	void setPublisher(EIfclibraryinformation type, EEntity value) throws SdaiException; // case 1

	void unsetPublisher(EIfclibraryinformation type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:VersionDate, base type: STRING
	public boolean testVersiondate(EIfclibraryinformation type) throws SdaiException;
	public String getVersiondate(EIfclibraryinformation type) throws SdaiException;
	public void setVersiondate(EIfclibraryinformation type, String value) throws SdaiException;
	public void unsetVersiondate(EIfclibraryinformation type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Location, base type: STRING
	public boolean testLocation(EIfclibraryinformation type) throws SdaiException;
	public String getLocation(EIfclibraryinformation type) throws SdaiException;
	public void setLocation(EIfclibraryinformation type, String value) throws SdaiException;
	public void unsetLocation(EIfclibraryinformation type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Description, base type: STRING
	public boolean testDescription(EIfclibraryinformation type) throws SdaiException;
	public String getDescription(EIfclibraryinformation type) throws SdaiException;
	public void setDescription(EIfclibraryinformation type, String value) throws SdaiException;
	public void unsetDescription(EIfclibraryinformation type) throws SdaiException;

	// Inverse attribute - LibraryInfoForObjects : SET[0:-2147483648] OF IfcRelAssociatesLibrary FOR RelatingLibrary
	public AIfcrelassociateslibrary getLibraryinfoforobjects(EIfclibraryinformation type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - HasLibraryReferences : SET[0:-2147483648] OF IfcLibraryReference FOR ReferencedLibrary
	public AIfclibraryreference getHaslibraryreferences(EIfclibraryinformation type, ASdaiModel domain) throws SdaiException;
}
