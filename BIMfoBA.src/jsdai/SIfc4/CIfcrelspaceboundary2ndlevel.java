/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRelSpaceBoundary2ndLevel

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrelspaceboundary2ndlevel extends CIfcrelspaceboundary1stlevel implements EIfcrelspaceboundary2ndlevel {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrelspaceboundary2ndlevel.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// RelatingSpace: protected Object a4;   RelatingSpace - java inheritance - SELECT IfcSpaceBoundarySelect
	// RelatedBuildingElement: protected Object a5;   RelatedBuildingElement - java inheritance - ENTITY IfcElement
	// ConnectionGeometry: protected Object a6;   ConnectionGeometry - java inheritance - ENTITY IfcConnectionGeometry
	// PhysicalOrVirtualBoundary: protected int a7;   PhysicalOrVirtualBoundary - java inheritance - ENUMERATION IfcPhysicalOrVirtualEnum
	// InternalOrExternalBoundary: protected int a8;   InternalOrExternalBoundary - java inheritance - ENUMERATION IfcInternalOrExternalEnum
	// ParentBoundary: protected Object a9;   ParentBoundary - java inheritance - ENTITY IfcRelSpaceBoundary1stLevel
	// InnerBoundaries: protected Object  - inverse - java inheritance -  ENTITY IfcRelSpaceBoundary1stLevel
	protected Object a10; // CorrespondingBoundary - current entity - ENTITY IfcRelSpaceBoundary2ndLevel
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	// Corresponds: protected Object  - inverse - current -  ENTITY IfcRelSpaceBoundary2ndLevel
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// RelatingSpace - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected Object a4;
	// RelatedBuildingElement - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected Object a5;
	// ConnectionGeometry - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// protected Object a6;
	// PhysicalOrVirtualBoundary - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	// protected int a7;
	// InternalOrExternalBoundary - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	// protected int a8;
	// ParentBoundary - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	// protected Object a9;
	// InnerBoundaries - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// CorrespondingBoundary - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	protected Object a10;
	// Corresponds - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a10 == old) {
			a10 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a10 == old) {
			a10 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5514=EXPLICIT_ATTRIBUTE('RelatingSpace',#5512,0,#3201,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatingSpace
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// -1- methods for SELECT attribute: RelatingSpace
	public static int usedinRelatingspace(EIfcrelspaceboundary type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	//going through all the attributes: #5515=EXPLICIT_ATTRIBUTE('RelatedBuildingElement',#5512,1,#4136,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatedBuildingElement
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): RelatedBuildingElement, base type: entity IfcElement
	public static int usedinRelatedbuildingelement(EIfcrelspaceboundary type, EIfcelement instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a5$, domain, result);
	}
	//going through all the attributes: #5516=EXPLICIT_ATTRIBUTE('ConnectionGeometry',#5512,2,#3726,$,.T.);
	//<01> generating methods for consolidated attribute:  ConnectionGeometry
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): ConnectionGeometry, base type: entity IfcConnectionGeometry
	public static int usedinConnectiongeometry(EIfcrelspaceboundary type, EIfcconnectiongeometry instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a6$, domain, result);
	}
	//going through all the attributes: #5517=EXPLICIT_ATTRIBUTE('PhysicalOrVirtualBoundary',#5512,3,#2949,$,.F.);
	//<01> generating methods for consolidated attribute:  PhysicalOrVirtualBoundary
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5518=EXPLICIT_ATTRIBUTE('InternalOrExternalBoundary',#5512,4,#2899,$,.F.);
	//<01> generating methods for consolidated attribute:  InternalOrExternalBoundary
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5521=EXPLICIT_ATTRIBUTE('ParentBoundary',#5519,0,#5519,$,.T.);
	//<01> generating methods for consolidated attribute:  ParentBoundary
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): ParentBoundary, base type: entity IfcRelSpaceBoundary1stLevel
	public static int usedinParentboundary(EIfcrelspaceboundary1stlevel type, EIfcrelspaceboundary1stlevel instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a9$, domain, result);
	}
	//going through all the attributes: #5522=INVERSE_ATTRIBUTE('InnerBoundaries',#5519,0,#5519,$,#5521,#9196,$,.F.);
	//<01> generating methods for consolidated attribute:  InnerBoundaries
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5525=EXPLICIT_ATTRIBUTE('CorrespondingBoundary',#5523,0,#5523,$,.T.);
	//<01> generating methods for consolidated attribute:  CorrespondingBoundary
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : CorrespondingBoundary, base type: entity IfcRelSpaceBoundary2ndLevel
	public static int usedinCorrespondingboundary(EIfcrelspaceboundary2ndlevel type, EIfcrelspaceboundary2ndlevel instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a10$, domain, result);
	}
	public boolean testCorrespondingboundary(EIfcrelspaceboundary2ndlevel type) throws SdaiException {
		return test_instance(a10);
	}
	public EIfcrelspaceboundary2ndlevel getCorrespondingboundary(EIfcrelspaceboundary2ndlevel type) throws SdaiException {
		return (EIfcrelspaceboundary2ndlevel)get_instance(a10);
	}
	public void setCorrespondingboundary(EIfcrelspaceboundary2ndlevel type, EIfcrelspaceboundary2ndlevel value) throws SdaiException {
		a10 = set_instance(a10, value);
	}
	public void unsetCorrespondingboundary(EIfcrelspaceboundary2ndlevel type) throws SdaiException {
		a10 = unset_instance(a10);
	}
	public static jsdai.dictionary.EAttribute attributeCorrespondingboundary(EIfcrelspaceboundary2ndlevel type) throws SdaiException {
		return a10$;
	}

	//going through all the attributes: #5526=INVERSE_ATTRIBUTE('Corresponds',#5523,0,#5523,$,#5525,#9198,#9199,.F.);
	//<01> generating methods for consolidated attribute:  Corresponds
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	public AIfcrelspaceboundary2ndlevel getCorresponds(EIfcrelspaceboundary2ndlevel type, ASdaiModel domain) throws SdaiException {
		AIfcrelspaceboundary2ndlevel result = (AIfcrelspaceboundary2ndlevel)get_inverse_aggregate(i1$);
		CIfcrelspaceboundary2ndlevel.usedinCorrespondingboundary(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeCorresponds(EIfcrelspaceboundary2ndlevel type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			a5 = unset_instance(a5);
			a6 = unset_instance(a6);
			a7 = 0;
			a8 = 0;
			a9 = unset_instance(a9);
			a10 = unset_instance(a10);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getInstance(1, this, a5$);
		a6 = av.entityValues[2].getInstance(2, this, a6$);
		a7 = av.entityValues[2].getEnumeration(3, a7$);
		a8 = av.entityValues[2].getEnumeration(4, a8$);
		a9 = av.entityValues[3].getInstance(0, this, a9$);
		a10 = av.entityValues[4].getInstance(0, this, a10$);
		a0 = av.entityValues[5].getString(0);
		a1 = av.entityValues[5].getInstance(1, this, a1$);
		a2 = av.entityValues[5].getString(2);
		a3 = av.entityValues[5].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			a5 = unset_instance(a5);
			a6 = unset_instance(a6);
			a7 = 0;
			a8 = 0;
			a9 = unset_instance(a9);
			a10 = unset_instance(a10);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getInstance(1, this, a5$);
		a6 = av.entityValues[2].getInstance(2, this, a6$);
		a7 = av.entityValues[2].getEnumeration(3, a7$);
		a8 = av.entityValues[2].getEnumeration(4, a8$);
		a9 = av.entityValues[3].getInstance(0, this, a9$);
		a10 = av.entityValues[4].getInstance(0, this, a10$);
		a0 = av.entityValues[5].getString(0);
		a1 = av.entityValues[5].getInstance(1, this, a1$);
		a2 = av.entityValues[5].getString(2);
		a3 = av.entityValues[5].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelSpaceBoundary
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstance(1, a5);
		av.entityValues[2].setInstance(2, a6);
		av.entityValues[2].setEnumeration(3, a7, a7$);
		av.entityValues[2].setEnumeration(4, a8, a8$);
		// partial entity: IfcRelSpaceBoundary1stLevel
		av.entityValues[3].setInstance(0, a9);
		// partial entity: IfcRelSpaceBoundary2ndLevel
		av.entityValues[4].setInstance(0, a10);
		// partial entity: IfcRoot
		av.entityValues[5].setString(0, a0);
		av.entityValues[5].setInstance(1, a1);
		av.entityValues[5].setString(2, a2);
		av.entityValues[5].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelSpaceBoundary
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstance(1, a5);
		av.entityValues[2].setInstance(2, a6);
		av.entityValues[2].setEnumeration(3, a7, a7$);
		av.entityValues[2].setEnumeration(4, a8, a8$);
		// partial entity: IfcRelSpaceBoundary1stLevel
		av.entityValues[3].setInstance(0, a9);
		// partial entity: IfcRelSpaceBoundary2ndLevel
		av.entityValues[4].setInstance(0, a10);
		// partial entity: IfcRoot
		av.entityValues[5].setString(0, a0);
		av.entityValues[5].setInstance(1, a1);
		av.entityValues[5].setString(2, a2);
		av.entityValues[5].setString(3, a3);
	}
}
