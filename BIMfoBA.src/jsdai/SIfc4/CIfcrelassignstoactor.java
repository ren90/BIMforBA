/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRelAssignsToActor

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrelassignstoactor extends CIfcrelassigns implements EIfcrelassignstoactor {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrelassignstoactor.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// RelatedObjects: protected AIfcobjectdefinition a4;   RelatedObjects - java inheritance - SET OF ENTITY
	// RelatedObjectsType: protected int a5;   RelatedObjectsType - java inheritance - ENUMERATION IfcObjectTypeEnum
	protected Object a6; // RelatingActor - current entity - ENTITY IfcActor
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected Object a7; // ActingRole - current entity - ENTITY IfcActorRole
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// RelatedObjects - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected AIfcobjectdefinition a4;
	// RelatedObjectsType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected int a5;
	// RelatingActor - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected Object a6;
	// ActingRole - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected Object a7;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a6 == old) {
			a6 = newer;
		}
		if (a7 == old) {
			a7 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a6 == old) {
			a6 = newer;
		}
		if (a7 == old) {
			a7 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5350=EXPLICIT_ATTRIBUTE('RelatedObjects',#5348,0,#7075,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatedObjects
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: RelatedObjects, base type: SET OF ENTITY
	public static int usedinRelatedobjects(EIfcrelassigns type, EIfcobjectdefinition instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	//going through all the attributes: #5351=EXPLICIT_ATTRIBUTE('RelatedObjectsType',#5348,1,#2933,$,.T.);
	//<01> generating methods for consolidated attribute:  RelatedObjectsType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5354=EXPLICIT_ATTRIBUTE('RelatingActor',#5352,0,#3234,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatingActor
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : RelatingActor, base type: entity IfcActor
	public static int usedinRelatingactor(EIfcrelassignstoactor type, EIfcactor instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a6$, domain, result);
	}
	public boolean testRelatingactor(EIfcrelassignstoactor type) throws SdaiException {
		return test_instance(a6);
	}
	public EIfcactor getRelatingactor(EIfcrelassignstoactor type) throws SdaiException {
		return (EIfcactor)get_instance(a6);
	}
	public void setRelatingactor(EIfcrelassignstoactor type, EIfcactor value) throws SdaiException {
		a6 = set_instance(a6, value);
	}
	public void unsetRelatingactor(EIfcrelassignstoactor type) throws SdaiException {
		a6 = unset_instance(a6);
	}
	public static jsdai.dictionary.EAttribute attributeRelatingactor(EIfcrelassignstoactor type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #5355=EXPLICIT_ATTRIBUTE('ActingRole',#5352,1,#3238,$,.T.);
	//<01> generating methods for consolidated attribute:  ActingRole
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ActingRole, base type: entity IfcActorRole
	public static int usedinActingrole(EIfcrelassignstoactor type, EIfcactorrole instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testActingrole(EIfcrelassignstoactor type) throws SdaiException {
		return test_instance(a7);
	}
	public EIfcactorrole getActingrole(EIfcrelassignstoactor type) throws SdaiException {
		return (EIfcactorrole)get_instance(a7);
	}
	public void setActingrole(EIfcrelassignstoactor type, EIfcactorrole value) throws SdaiException {
		a7 = set_instance(a7, value);
	}
	public void unsetActingrole(EIfcrelassignstoactor type) throws SdaiException {
		a7 = unset_instance(a7);
	}
	public static jsdai.dictionary.EAttribute attributeActingrole(EIfcrelassignstoactor type) throws SdaiException {
		return a7$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			a5 = 0;
			a6 = unset_instance(a6);
			a7 = unset_instance(a7);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = (AIfcobjectdefinition)av.entityValues[0].getInstanceAggregate(0, a4$, this);
		a5 = av.entityValues[0].getEnumeration(1, a5$);
		a6 = av.entityValues[1].getInstance(0, this, a6$);
		a7 = av.entityValues[1].getInstance(1, this, a7$);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			a5 = 0;
			a6 = unset_instance(a6);
			a7 = unset_instance(a7);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = (AIfcobjectdefinition)av.entityValues[0].getInstanceAggregate(0, a4$, this);
		a5 = av.entityValues[0].getEnumeration(1, a5$);
		a6 = av.entityValues[1].getInstance(0, this, a6$);
		a7 = av.entityValues[1].getInstance(1, this, a7$);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelAssigns
		av.entityValues[0].setInstanceAggregate(0, a4);
		av.entityValues[0].setEnumeration(1, a5, a5$);
		// partial entity: IfcRelAssignsToActor
		av.entityValues[1].setInstance(0, a6);
		av.entityValues[1].setInstance(1, a7);
		// partial entity: IfcRelationship
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelAssigns
		av.entityValues[0].setInstanceAggregate(0, a4);
		av.entityValues[0].setEnumeration(1, a5, a5$);
		// partial entity: IfcRelAssignsToActor
		av.entityValues[1].setInstance(0, a6);
		av.entityValues[1].setInstance(1, a7);
		// partial entity: IfcRelationship
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcrelassignstoactorNoselfreference(SdaiContext _context) throws SdaiException {
	




									
									Value _internal_aggregate_source206 = Value.alloc(jsdai.SIfc4.CIfcrelassignstoactor.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcrelassigns.class).getAttribute(jsdai.SIfc4.CIfcrelassigns.attributeRelatedobjects(null), _context);
									Value _result204 = Value.alloc(_internal_aggregate_source206).create();
									if (_internal_aggregate_source206.getActualJavaType() != Value.INDETERMINATE) {
										for (int _i205 = 1; _i205 <= _internal_aggregate_source206.getMemberCount(); _i205++) {
											Value _implicit_48_Temp = _internal_aggregate_source206.getByIndex(_i205);
											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).instanceEqual(_context, Value.alloc(jsdai.SIfc4.CIfcactor.definition).set(_context, get(a6$)), _implicit_48_Temp).getLogical() == 2) {
												_result204.addMember(_context, _implicit_48_Temp);
											} else
											if (_internal_aggregate_source206.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
												_implicit_48_Temp.unset();
												_result204.addMember(_context, _implicit_48_Temp);
											}
										}
									} else {
										_result204.unset();
									}
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOfExt0(_context, _result204), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical());
	}
}
