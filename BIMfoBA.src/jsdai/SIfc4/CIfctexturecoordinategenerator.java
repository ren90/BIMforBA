/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcTextureCoordinateGenerator

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfctexturecoordinategenerator extends CIfctexturecoordinate implements EIfctexturecoordinategenerator {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfctexturecoordinategenerator.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Maps: protected AIfcsurfacetexture a0;   Maps - java inheritance - LIST OF ENTITY
	protected String a1; // Mode - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected A_double a2; // Parameter - current entity - LIST OF REAL
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Maps - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected AIfcsurfacetexture a0;
	// Mode - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Parameter - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected A_double a2;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #6197=EXPLICIT_ATTRIBUTE('Maps',#6195,0,#7179,$,.F.);
	//<01> generating methods for consolidated attribute:  Maps
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: Maps, base type: LIST OF ENTITY
	public static int usedinMaps(EIfctexturecoordinate type, EIfcsurfacetexture instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	//going through all the attributes: #6200=EXPLICIT_ATTRIBUTE('Mode',#6198,0,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Mode
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Mode, base type: STRING
	public boolean testMode(EIfctexturecoordinategenerator type) throws SdaiException {
		return test_string(a1);
	}
	public String getMode(EIfctexturecoordinategenerator type) throws SdaiException {
		return get_string(a1);
	}
	public void setMode(EIfctexturecoordinategenerator type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetMode(EIfctexturecoordinategenerator type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeMode(EIfctexturecoordinategenerator type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #6201=EXPLICIT_ATTRIBUTE('Parameter',#6198,1,#7180,$,.T.);
	//<01> generating methods for consolidated attribute:  Parameter
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Parameter, base type: LIST OF REAL
	public boolean testParameter(EIfctexturecoordinategenerator type) throws SdaiException {
		return test_aggregate(a2);
	}
	public A_double getParameter(EIfctexturecoordinategenerator type) throws SdaiException {
		return (A_double)get_aggregate(a2);
	}
	public A_double createParameter(EIfctexturecoordinategenerator type) throws SdaiException {
		a2 = create_aggregate_double(a2, a2$, 0);
		return a2;
	}
	public void unsetParameter(EIfctexturecoordinategenerator type) throws SdaiException {
		unset_aggregate(a2);
		a2 = null;
	}
	public static jsdai.dictionary.EAttribute attributeParameter(EIfctexturecoordinategenerator type) throws SdaiException {
		return a2$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			a1 = null;
			return;
		}
		a0 = (AIfcsurfacetexture)av.entityValues[1].getInstanceAggregate(0, a0$, this);
		a1 = av.entityValues[2].getString(0);
		a2 = av.entityValues[2].getDoubleAggregate(1, a2$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			a1 = null;
			return;
		}
		a0 = (AIfcsurfacetexture)av.entityValues[1].getInstanceAggregate(0, a0$, this);
		a1 = av.entityValues[2].getString(0);
		a2 = av.entityValues[2].getDoubleAggregate(1, a2$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextureCoordinate
		av.entityValues[1].setInstanceAggregate(0, a0);
		// partial entity: IfcTextureCoordinateGenerator
		av.entityValues[2].setString(0, a1);
		av.entityValues[2].setDoubleAggregate(1, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextureCoordinate
		av.entityValues[1].setInstanceAggregate(0, a0);
		// partial entity: IfcTextureCoordinateGenerator
		av.entityValues[2].setString(0, a1);
		av.entityValues[2].setDoubleAggregate(1, a2);
	}
}
