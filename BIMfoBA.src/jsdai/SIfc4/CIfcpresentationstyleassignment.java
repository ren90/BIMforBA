/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcPresentationStyleAssignment

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcpresentationstyleassignment extends CEntity implements EIfcpresentationstyleassignment {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcpresentationstyleassignment.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected AIfcpresentationstyleselect a0; // Styles - current entity - SET OF SELECT
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Styles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected AIfcpresentationstyleselect a0;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a0, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a0, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5040=EXPLICIT_ATTRIBUTE('Styles',#5038,0,#7019,$,.F.);
	//<01> generating methods for consolidated attribute:  Styles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Styles, base type: SET OF SELECT
	public static int usedinStyles(EIfcpresentationstyleassignment type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testStyles(EIfcpresentationstyleassignment type) throws SdaiException {
		return test_aggregate(a0);
	}
	public AIfcpresentationstyleselect getStyles(EIfcpresentationstyleassignment type) throws SdaiException {
		if (a0 == null)
			throw new SdaiException(SdaiException.VA_NSET);
		return a0;
	}
	public AIfcpresentationstyleselect createStyles(EIfcpresentationstyleassignment type) throws SdaiException {
		a0 = (AIfcpresentationstyleselect)create_aggregate_class(a0, a0$, AIfcpresentationstyleselect.class, 0);
		return a0;
	}
	public void unsetStyles(EIfcpresentationstyleassignment type) throws SdaiException {
		unset_aggregate(a0);
		a0 = null;
	}
	public static jsdai.dictionary.EAttribute attributeStyles(EIfcpresentationstyleassignment type) throws SdaiException {
		return a0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			return;
		}
		a0 = (AIfcpresentationstyleselect)av.entityValues[0].getMixedAggregate(0, a0$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			return;
		}
		a0 = (AIfcpresentationstyleselect)av.entityValues[0].getMixedAggregate(0, a0$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationStyleAssignment
		av.entityValues[0].setMixedAggregate(0, a0, a0$);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationStyleAssignment
		av.entityValues[0].setMixedAggregate(0, a0, a0$);
	}
}
