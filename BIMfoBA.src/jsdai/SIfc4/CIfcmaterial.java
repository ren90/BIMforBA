/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterial

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmaterial extends CIfcmaterialdefinition implements EIfcmaterial {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmaterial.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociatesMaterial
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcMaterialProperties
	protected String a0; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // Category - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// HasRepresentation: protected Object  - inverse - current -  ENTITY IfcMaterialDefinitionRepresentation
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
	// IsRelatedWith: protected Object  - inverse - current -  ENTITY IfcMaterialRelationship
	protected static final jsdai.dictionary.CInverse_attribute i4$ = CEntity.initInverseAttribute(definition, 4);
	// RelatesTo: protected Object  - inverse - current -  ENTITY IfcMaterialRelationship
	protected static final jsdai.dictionary.CInverse_attribute i5$ = CEntity.initInverseAttribute(definition, 5);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Category - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// HasRepresentation - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
	// IsRelatedWith - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i4$ = CEntity.initInverseAttribute(definition, 4);
	// RelatesTo - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i5$ = CEntity.initInverseAttribute(definition, 5);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4658=INVERSE_ATTRIBUTE('AssociatedTo',#4656,0,#5394,$,#5396,#8598,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4659=INVERSE_ATTRIBUTE('HasExternalReferences',#4656,1,#4231,$,#4234,#8600,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4660=INVERSE_ATTRIBUTE('HasProperties',#4656,2,#4721,$,#4723,#8602,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4633=EXPLICIT_ATTRIBUTE('Name',#4631,0,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcmaterial type) throws SdaiException {
		return test_string(a0);
	}
	public String getName(EIfcmaterial type) throws SdaiException {
		return get_string(a0);
	}
	public void setName(EIfcmaterial type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetName(EIfcmaterial type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcmaterial type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4634=EXPLICIT_ATTRIBUTE('Description',#4631,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcmaterial type) throws SdaiException {
		return test_string(a1);
	}
	public String getDescription(EIfcmaterial type) throws SdaiException {
		return get_string(a1);
	}
	public void setDescription(EIfcmaterial type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetDescription(EIfcmaterial type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcmaterial type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4635=EXPLICIT_ATTRIBUTE('Category',#4631,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Category
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Category, base type: STRING
	public boolean testCategory(EIfcmaterial type) throws SdaiException {
		return test_string(a2);
	}
	public String getCategory(EIfcmaterial type) throws SdaiException {
		return get_string(a2);
	}
	public void setCategory(EIfcmaterial type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetCategory(EIfcmaterial type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeCategory(EIfcmaterial type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4636=INVERSE_ATTRIBUTE('HasRepresentation',#4631,0,#4661,$,#4663,#8586,#8587,.F.);
	//<01> generating methods for consolidated attribute:  HasRepresentation
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	public AIfcmaterialdefinitionrepresentation getHasrepresentation(EIfcmaterial type, ASdaiModel domain) throws SdaiException {
		AIfcmaterialdefinitionrepresentation result = (AIfcmaterialdefinitionrepresentation)get_inverse_aggregate(i3$);
		CIfcmaterialdefinitionrepresentation.usedinRepresentedmaterial(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasrepresentation(EIfcmaterial type) throws SdaiException {
		return i3$;
	}

	//going through all the attributes: #4637=INVERSE_ATTRIBUTE('IsRelatedWith',#4631,1,#4724,$,#4727,#8589,$,.F.);
	//<01> generating methods for consolidated attribute:  IsRelatedWith
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - IsRelatedWith : SET[0:-2147483648] OF IfcMaterialRelationship FOR RelatedMaterials
	public AIfcmaterialrelationship getIsrelatedwith(EIfcmaterial type, ASdaiModel domain) throws SdaiException {
		AIfcmaterialrelationship result = (AIfcmaterialrelationship)get_inverse_aggregate(i4$);
		CIfcmaterialrelationship.usedinRelatedmaterials(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeIsrelatedwith(EIfcmaterial type) throws SdaiException {
		return i4$;
	}

	//going through all the attributes: #4638=INVERSE_ATTRIBUTE('RelatesTo',#4631,2,#4724,$,#4726,#8591,#8592,.F.);
	//<01> generating methods for consolidated attribute:  RelatesTo
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	public AIfcmaterialrelationship getRelatesto(EIfcmaterial type, ASdaiModel domain) throws SdaiException {
		AIfcmaterialrelationship result = (AIfcmaterialrelationship)get_inverse_aggregate(i5$);
		CIfcmaterialrelationship.usedinRelatingmaterial(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeRelatesto(EIfcmaterial type) throws SdaiException {
		return i5$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterial
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcMaterialDefinition
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterial
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		// partial entity: IfcMaterialDefinition
	}
}
