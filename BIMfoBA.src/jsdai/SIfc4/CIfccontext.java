/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcContext

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfccontext extends CIfcobjectdefinition implements EIfccontext {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfccontext.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// HasAssignments: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssigns
	// Nests: protected Object  - inverse - java inheritance -  ENTITY IfcRelNests
	// IsNestedBy: protected Object  - inverse - java inheritance -  ENTITY IfcRelNests
	// HasContext: protected Object  - inverse - java inheritance -  ENTITY IfcRelDeclares
	// IsDecomposedBy: protected Object  - inverse - java inheritance -  ENTITY IfcRelAggregates
	// Decomposes: protected Object  - inverse - java inheritance -  ENTITY IfcRelAggregates
	// HasAssociations: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociates
	protected String a4; // ObjectType - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // LongName - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a6; // Phase - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected AIfcrepresentationcontext a7; // RepresentationContexts - current entity - SET OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected Object a8; // UnitsInContext - current entity - ENTITY IfcUnitAssignment
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	// IsDefinedBy: protected Object  - inverse - current -  ENTITY IfcRelDefinesByProperties
	protected static final jsdai.dictionary.CInverse_attribute i7$ = CEntity.initInverseAttribute(definition, 7);
	// Declares: protected Object  - inverse - current -  ENTITY IfcRelDeclares
	protected static final jsdai.dictionary.CInverse_attribute i8$ = CEntity.initInverseAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// HasAssignments - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Nests - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// IsNestedBy - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// HasContext - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
	// IsDecomposedBy - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i4$ = CEntity.initInverseAttribute(definition, 4);
	// Decomposes - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i5$ = CEntity.initInverseAttribute(definition, 5);
	// HasAssociations - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i6$ = CEntity.initInverseAttribute(definition, 6);
	// ObjectType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// LongName - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// Phase - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a6;
	// RepresentationContexts - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected AIfcrepresentationcontext a7;
	// UnitsInContext - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected Object a8;
	// IsDefinedBy - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i7$ = CEntity.initInverseAttribute(definition, 7);
	// Declares - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i8$ = CEntity.initInverseAttribute(definition, 8);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
		if (a8 == old) {
			a8 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
		if (a8 == old) {
			a8 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4791=INVERSE_ATTRIBUTE('HasAssignments',#4789,0,#5348,$,#5350,#8672,$,.F.);
	//<01> generating methods for consolidated attribute:  HasAssignments
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4792=INVERSE_ATTRIBUTE('Nests',#4789,1,#5489,$,#5492,#8674,#8675,.F.);
	//<01> generating methods for consolidated attribute:  Nests
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4793=INVERSE_ATTRIBUTE('IsNestedBy',#4789,2,#5489,$,#5491,#8677,$,.F.);
	//<01> generating methods for consolidated attribute:  IsNestedBy
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4794=INVERSE_ATTRIBUTE('HasContext',#4789,3,#5450,$,#5453,#8679,#8680,.F.);
	//<01> generating methods for consolidated attribute:  HasContext
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4795=INVERSE_ATTRIBUTE('IsDecomposedBy',#4789,4,#5344,$,#5346,#8682,$,.F.);
	//<01> generating methods for consolidated attribute:  IsDecomposedBy
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4796=INVERSE_ATTRIBUTE('Decomposes',#4789,5,#5344,$,#5347,#8684,#8685,.F.);
	//<01> generating methods for consolidated attribute:  Decomposes
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4797=INVERSE_ATTRIBUTE('HasAssociations',#4789,6,#5375,$,#5377,#8687,$,.F.);
	//<01> generating methods for consolidated attribute:  HasAssociations
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3785=EXPLICIT_ATTRIBUTE('ObjectType',#3783,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ObjectType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ObjectType, base type: STRING
	public boolean testObjecttype(EIfccontext type) throws SdaiException {
		return test_string(a4);
	}
	public String getObjecttype(EIfccontext type) throws SdaiException {
		return get_string(a4);
	}
	public void setObjecttype(EIfccontext type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetObjecttype(EIfccontext type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeObjecttype(EIfccontext type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #3786=EXPLICIT_ATTRIBUTE('LongName',#3783,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  LongName
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LongName, base type: STRING
	public boolean testLongname(EIfccontext type) throws SdaiException {
		return test_string(a5);
	}
	public String getLongname(EIfccontext type) throws SdaiException {
		return get_string(a5);
	}
	public void setLongname(EIfccontext type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetLongname(EIfccontext type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLongname(EIfccontext type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #3787=EXPLICIT_ATTRIBUTE('Phase',#3783,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Phase
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Phase, base type: STRING
	public boolean testPhase(EIfccontext type) throws SdaiException {
		return test_string(a6);
	}
	public String getPhase(EIfccontext type) throws SdaiException {
		return get_string(a6);
	}
	public void setPhase(EIfccontext type, String value) throws SdaiException {
		a6 = set_string(value);
	}
	public void unsetPhase(EIfccontext type) throws SdaiException {
		a6 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributePhase(EIfccontext type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #3788=EXPLICIT_ATTRIBUTE('RepresentationContexts',#3783,3,#6876,$,.T.);
	//<01> generating methods for consolidated attribute:  RepresentationContexts
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: RepresentationContexts, base type: SET OF ENTITY
	public static int usedinRepresentationcontexts(EIfccontext type, EIfcrepresentationcontext instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testRepresentationcontexts(EIfccontext type) throws SdaiException {
		return test_aggregate(a7);
	}
	public AIfcrepresentationcontext getRepresentationcontexts(EIfccontext type) throws SdaiException {
		return (AIfcrepresentationcontext)get_aggregate(a7);
	}
	public AIfcrepresentationcontext createRepresentationcontexts(EIfccontext type) throws SdaiException {
		a7 = (AIfcrepresentationcontext)create_aggregate_class(a7, a7$,  AIfcrepresentationcontext.class, 0);
		return a7;
	}
	public void unsetRepresentationcontexts(EIfccontext type) throws SdaiException {
		unset_aggregate(a7);
		a7 = null;
	}
	public static jsdai.dictionary.EAttribute attributeRepresentationcontexts(EIfccontext type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #3789=EXPLICIT_ATTRIBUTE('UnitsInContext',#3783,4,#6301,$,.T.);
	//<01> generating methods for consolidated attribute:  UnitsInContext
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : UnitsInContext, base type: entity IfcUnitAssignment
	public static int usedinUnitsincontext(EIfccontext type, EIfcunitassignment instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a8$, domain, result);
	}
	public boolean testUnitsincontext(EIfccontext type) throws SdaiException {
		return test_instance(a8);
	}
	public EIfcunitassignment getUnitsincontext(EIfccontext type) throws SdaiException {
		return (EIfcunitassignment)get_instance(a8);
	}
	public void setUnitsincontext(EIfccontext type, EIfcunitassignment value) throws SdaiException {
		a8 = set_instance(a8, value);
	}
	public void unsetUnitsincontext(EIfccontext type) throws SdaiException {
		a8 = unset_instance(a8);
	}
	public static jsdai.dictionary.EAttribute attributeUnitsincontext(EIfccontext type) throws SdaiException {
		return a8$;
	}

	//going through all the attributes: #3790=INVERSE_ATTRIBUTE('IsDefinedBy',#3783,0,#5462,$,#5464,#8002,$,.F.);
	//<01> generating methods for consolidated attribute:  IsDefinedBy
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - IsDefinedBy : SET[0:-2147483648] OF IfcRelDefinesByProperties FOR RelatedObjects
	public AIfcreldefinesbyproperties getIsdefinedby(EIfccontext type, ASdaiModel domain) throws SdaiException {
		AIfcreldefinesbyproperties result = (AIfcreldefinesbyproperties)get_inverse_aggregate(i7$);
		CIfcreldefinesbyproperties.usedinRelatedobjects(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeIsdefinedby(EIfccontext type) throws SdaiException {
		return i7$;
	}

	//going through all the attributes: #3791=INVERSE_ATTRIBUTE('Declares',#3783,1,#5450,$,#5452,#8004,$,.F.);
	//<01> generating methods for consolidated attribute:  Declares
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - Declares : SET[0:-2147483648] OF IfcRelDeclares FOR RelatingContext
	public AIfcreldeclares getDeclares(EIfccontext type, ASdaiModel domain) throws SdaiException {
		AIfcreldeclares result = (AIfcreldeclares)get_inverse_aggregate(i8$);
		CIfcreldeclares.usedinRelatingcontext(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeDeclares(EIfccontext type) throws SdaiException {
		return i8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = null;
			a5 = null;
			a6 = null;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			a8 = unset_instance(a8);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[0].getString(0);
		a5 = av.entityValues[0].getString(1);
		a6 = av.entityValues[0].getString(2);
		a7 = (AIfcrepresentationcontext)av.entityValues[0].getInstanceAggregate(3, a7$, this);
		a8 = av.entityValues[0].getInstance(4, this, a8$);
		a0 = av.entityValues[2].getString(0);
		a1 = av.entityValues[2].getInstance(1, this, a1$);
		a2 = av.entityValues[2].getString(2);
		a3 = av.entityValues[2].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = null;
			a5 = null;
			a6 = null;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			a8 = unset_instance(a8);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[0].getString(0);
		a5 = av.entityValues[0].getString(1);
		a6 = av.entityValues[0].getString(2);
		a7 = (AIfcrepresentationcontext)av.entityValues[0].getInstanceAggregate(3, a7$, this);
		a8 = av.entityValues[0].getInstance(4, this, a8$);
		a0 = av.entityValues[2].getString(0);
		a1 = av.entityValues[2].getInstance(1, this, a1$);
		a2 = av.entityValues[2].getString(2);
		a3 = av.entityValues[2].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcContext
		av.entityValues[0].setString(0, a4);
		av.entityValues[0].setString(1, a5);
		av.entityValues[0].setString(2, a6);
		av.entityValues[0].setInstanceAggregate(3, a7);
		av.entityValues[0].setInstance(4, a8);
		// partial entity: IfcObjectDefinition
		// partial entity: IfcRoot
		av.entityValues[2].setString(0, a0);
		av.entityValues[2].setInstance(1, a1);
		av.entityValues[2].setString(2, a2);
		av.entityValues[2].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcContext
		av.entityValues[0].setString(0, a4);
		av.entityValues[0].setString(1, a5);
		av.entityValues[0].setString(2, a6);
		av.entityValues[0].setInstanceAggregate(3, a7);
		av.entityValues[0].setInstance(4, a8);
		// partial entity: IfcObjectDefinition
		// partial entity: IfcRoot
		av.entityValues[2].setString(0, a0);
		av.entityValues[2].setInstance(1, a1);
		av.entityValues[2].setString(2, a2);
		av.entityValues[2].setString(3, a3);
	}
}
