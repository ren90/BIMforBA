/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcCartesianPoint

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfccartesianpoint extends CIfcpoint implements EIfccartesianpoint {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfccartesianpoint.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	protected A_double a0; // Coordinates - current entity - LIST OF REAL
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// Dim: protected int  - derived - current -  INTEGER
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Coordinates - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected A_double a0;
	// Dim - derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3564=EXPLICIT_ATTRIBUTE('Coordinates',#3562,0,#6845,$,.F.);
	//<01> generating methods for consolidated attribute:  Coordinates
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Coordinates, base type: LIST OF REAL
	public boolean testCoordinates(EIfccartesianpoint type) throws SdaiException {
		return test_aggregate(a0);
	}
	public A_double getCoordinates(EIfccartesianpoint type) throws SdaiException {
		return (A_double)get_aggregate(a0);
	}
	public A_double createCoordinates(EIfccartesianpoint type) throws SdaiException {
		a0 = create_aggregate_double(a0, a0$, 0);
		return a0;
	}
	public void unsetCoordinates(EIfccartesianpoint type) throws SdaiException {
		unset_aggregate(a0);
		a0 = null;
	}
	public static jsdai.dictionary.EAttribute attributeCoordinates(EIfccartesianpoint type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3565=DERIVED_ATTRIBUTE('Dim',#3562,0,#2485,$);
	//<01> generating methods for consolidated attribute:  Dim
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> NOT explicit-to-derived - generateDerivedCurrentEntityMethodsX()
	// methods for derived attribute: Dim, base type: INTEGER
	public boolean testDim(EIfccartesianpoint type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getDim(EIfccartesianpoint type, SdaiContext _context) throws SdaiException {



//###-01 jc.generated_java: Value.alloc(ExpressTypes.INTEGER_TYPE).hiIndex(Value.alloc(jsdai.SIfc4.SIfc4._st_list_1_3_ifclengthmeasure).set(_context, get(a0$)))
				return (Value.alloc(ExpressTypes.INTEGER_TYPE).hiIndex(Value.alloc(jsdai.SIfc4.SIfc4._st_list_1_3_ifclengthmeasure).set(_context, get(a0$))));
	}
	public int getDim(EIfccartesianpoint type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return getDim((EIfccartesianpoint)null, _context).getInteger();
	}
	public static jsdai.dictionary.EAttribute attributeDim(EIfccartesianpoint type) throws SdaiException {
		return d0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			return;
		}
		a0 = av.entityValues[0].getDoubleAggregate(0, a0$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			return;
		}
		a0 = av.entityValues[0].getDoubleAggregate(0, a0$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCartesianPoint
		av.entityValues[0].setDoubleAggregate(0, a0);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcPoint
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCartesianPoint
		av.entityValues[0].setDoubleAggregate(0, a0);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcPoint
		// partial entity: IfcRepresentationItem
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfccartesianpointCp2dor3d(SdaiContext _context) throws SdaiException {
	



		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).hiIndex(Value.alloc(jsdai.SIfc4.SIfc4._st_list_1_3_ifclengthmeasure).set(_context, get(a0$))), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).getLogical());
	}
}
