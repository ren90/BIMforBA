/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialLayer

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmateriallayer extends CIfcmaterialdefinition implements EIfcmateriallayer {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmateriallayer.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociatesMaterial
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcMaterialProperties
	protected Object a0; // Material - current entity - ENTITY IfcMaterial
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected double a1; // LayerThickness - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a2; // IsVentilated - current entity - LOGICAL
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a3; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // Category - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // Priority - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// ToMaterialLayerSet: protected Object  - inverse - current -  ENTITY IfcMaterialLayerSet
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// Material - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	// LayerThickness - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a1;
	// IsVentilated - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// Category - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// Priority - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;
	// ToMaterialLayerSet - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4658=INVERSE_ATTRIBUTE('AssociatedTo',#4656,0,#5394,$,#5396,#8598,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4659=INVERSE_ATTRIBUTE('HasExternalReferences',#4656,1,#4231,$,#4234,#8600,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4660=INVERSE_ATTRIBUTE('HasProperties',#4656,2,#4721,$,#4723,#8602,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4666=EXPLICIT_ATTRIBUTE('Material',#4664,0,#4631,$,.T.);
	//<01> generating methods for consolidated attribute:  Material
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Material, base type: entity IfcMaterial
	public static int usedinMaterial(EIfcmateriallayer type, EIfcmaterial instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testMaterial(EIfcmateriallayer type) throws SdaiException {
		return test_instance(a0);
	}
	public EIfcmaterial getMaterial(EIfcmateriallayer type) throws SdaiException {
		return (EIfcmaterial)get_instance(a0);
	}
	public void setMaterial(EIfcmateriallayer type, EIfcmaterial value) throws SdaiException {
		a0 = set_instance(a0, value);
	}
	public void unsetMaterial(EIfcmateriallayer type) throws SdaiException {
		a0 = unset_instance(a0);
	}
	public static jsdai.dictionary.EAttribute attributeMaterial(EIfcmateriallayer type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4667=EXPLICIT_ATTRIBUTE('LayerThickness',#4664,1,#2591,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerThickness
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LayerThickness, base type: REAL
	public boolean testLayerthickness(EIfcmateriallayer type) throws SdaiException {
		return test_double(a1);
	}
	public double getLayerthickness(EIfcmateriallayer type) throws SdaiException {
		return get_double(a1);
	}
	public void setLayerthickness(EIfcmateriallayer type, double value) throws SdaiException {
		a1 = set_double(value);
	}
	public void unsetLayerthickness(EIfcmateriallayer type) throws SdaiException {
		a1 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeLayerthickness(EIfcmateriallayer type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4668=EXPLICIT_ATTRIBUTE('IsVentilated',#4664,2,#2553,$,.T.);
	//<01> generating methods for consolidated attribute:  IsVentilated
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: IsVentilated, base type: LOGICAL
	public boolean testIsventilated(EIfcmateriallayer type) throws SdaiException {
		return test_logical(a2);
	}
	public int getIsventilated(EIfcmateriallayer type) throws SdaiException {
		return get_logical(a2);
	}
	public void setIsventilated(EIfcmateriallayer type, int value) throws SdaiException {
		a2 = set_logical(value);
	}
	public void unsetIsventilated(EIfcmateriallayer type) throws SdaiException {
		a2 = unset_logical();
	}
	public static jsdai.dictionary.EAttribute attributeIsventilated(EIfcmateriallayer type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4669=EXPLICIT_ATTRIBUTE('Name',#4664,3,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcmateriallayer type) throws SdaiException {
		return test_string(a3);
	}
	public String getName(EIfcmateriallayer type) throws SdaiException {
		return get_string(a3);
	}
	public void setName(EIfcmateriallayer type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetName(EIfcmateriallayer type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcmateriallayer type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4670=EXPLICIT_ATTRIBUTE('Description',#4664,4,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcmateriallayer type) throws SdaiException {
		return test_string(a4);
	}
	public String getDescription(EIfcmateriallayer type) throws SdaiException {
		return get_string(a4);
	}
	public void setDescription(EIfcmateriallayer type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetDescription(EIfcmateriallayer type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcmateriallayer type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4671=EXPLICIT_ATTRIBUTE('Category',#4664,5,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Category
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Category, base type: STRING
	public boolean testCategory(EIfcmateriallayer type) throws SdaiException {
		return test_string(a5);
	}
	public String getCategory(EIfcmateriallayer type) throws SdaiException {
		return get_string(a5);
	}
	public void setCategory(EIfcmateriallayer type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetCategory(EIfcmateriallayer type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeCategory(EIfcmateriallayer type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4672=EXPLICIT_ATTRIBUTE('Priority',#4664,6,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  Priority
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Priority, base type: REAL
	public boolean testPriority(EIfcmateriallayer type) throws SdaiException {
		return test_double(a6);
	}
	public double getPriority(EIfcmateriallayer type) throws SdaiException {
		return get_double(a6);
	}
	public void setPriority(EIfcmateriallayer type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetPriority(EIfcmateriallayer type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributePriority(EIfcmateriallayer type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4673=INVERSE_ATTRIBUTE('ToMaterialLayerSet',#4664,0,#4674,$,#4676,$,$,.F.);
	//<01> generating methods for consolidated attribute:  ToMaterialLayerSet
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - ToMaterialLayerSet : IfcMaterialLayerSet FOR MaterialLayers
	public AIfcmateriallayerset getTomateriallayerset(EIfcmateriallayer type, ASdaiModel domain) throws SdaiException {
		AIfcmateriallayerset result = new AIfcmateriallayerset();
		CIfcmateriallayerset.usedinMateriallayers(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeTomateriallayerset(EIfcmateriallayer type) throws SdaiException {
		return i3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = 0;
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = Double.NaN;
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
		a1 = av.entityValues[1].getDouble(1);
		a2 = av.entityValues[1].getLogical(2);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getDouble(6);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = 0;
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = Double.NaN;
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
		a1 = av.entityValues[1].getDouble(1);
		a2 = av.entityValues[1].getLogical(2);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getDouble(6);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
		// partial entity: IfcMaterialLayer
		av.entityValues[1].setInstance(0, a0);
		av.entityValues[1].setDouble(1, a1);
		av.entityValues[1].setLogical(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setDouble(6, a6);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
		// partial entity: IfcMaterialLayer
		av.entityValues[1].setInstance(0, a0);
		av.entityValues[1].setDouble(1, a1);
		av.entityValues[1].setLogical(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setDouble(6, a6);
	}
}
