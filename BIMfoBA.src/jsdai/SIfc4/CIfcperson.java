/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcPerson

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcperson extends CEntity implements EIfcperson {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcperson.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Identification - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // FamilyName - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // GivenName - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected A_string a3; // MiddleNames - current entity - LIST OF STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected A_string a4; // PrefixTitles - current entity - LIST OF STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected A_string a5; // SuffixTitles - current entity - LIST OF STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected AIfcactorrole a6; // Roles - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected AIfcaddress a7; // Addresses - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	// EngagedIn: protected Object  - inverse - current -  ENTITY IfcPersonAndOrganization
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Identification - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// FamilyName - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// GivenName - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// MiddleNames - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected A_string a3;
	// PrefixTitles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected A_string a4;
	// SuffixTitles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected A_string a5;
	// Roles - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected AIfcactorrole a6;
	// Addresses - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected AIfcaddress a7;
	// EngagedIn - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a6, old, newer);
		changeReferencesAggregate(a7, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a6, old, newer);
		changeReferencesAggregate(a7, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4896=EXPLICIT_ATTRIBUTE('Identification',#4894,0,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Identification
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Identification, base type: STRING
	public boolean testIdentification(EIfcperson type) throws SdaiException {
		return test_string(a0);
	}
	public String getIdentification(EIfcperson type) throws SdaiException {
		return get_string(a0);
	}
	public void setIdentification(EIfcperson type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetIdentification(EIfcperson type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeIdentification(EIfcperson type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4897=EXPLICIT_ATTRIBUTE('FamilyName',#4894,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  FamilyName
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: FamilyName, base type: STRING
	public boolean testFamilyname(EIfcperson type) throws SdaiException {
		return test_string(a1);
	}
	public String getFamilyname(EIfcperson type) throws SdaiException {
		return get_string(a1);
	}
	public void setFamilyname(EIfcperson type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetFamilyname(EIfcperson type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeFamilyname(EIfcperson type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4898=EXPLICIT_ATTRIBUTE('GivenName',#4894,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  GivenName
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: GivenName, base type: STRING
	public boolean testGivenname(EIfcperson type) throws SdaiException {
		return test_string(a2);
	}
	public String getGivenname(EIfcperson type) throws SdaiException {
		return get_string(a2);
	}
	public void setGivenname(EIfcperson type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetGivenname(EIfcperson type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeGivenname(EIfcperson type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4899=EXPLICIT_ATTRIBUTE('MiddleNames',#4894,3,#6993,$,.T.);
	//<01> generating methods for consolidated attribute:  MiddleNames
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: MiddleNames, base type: LIST OF STRING
	public boolean testMiddlenames(EIfcperson type) throws SdaiException {
		return test_aggregate(a3);
	}
	public A_string getMiddlenames(EIfcperson type) throws SdaiException {
		return (A_string)get_aggregate(a3);
	}
	public A_string createMiddlenames(EIfcperson type) throws SdaiException {
		a3 = create_aggregate_string(a3, a3$, 0);
		return a3;
	}
	public void unsetMiddlenames(EIfcperson type) throws SdaiException {
		unset_aggregate(a3);
		a3 = null;
	}
	public static jsdai.dictionary.EAttribute attributeMiddlenames(EIfcperson type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4900=EXPLICIT_ATTRIBUTE('PrefixTitles',#4894,4,#6994,$,.T.);
	//<01> generating methods for consolidated attribute:  PrefixTitles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: PrefixTitles, base type: LIST OF STRING
	public boolean testPrefixtitles(EIfcperson type) throws SdaiException {
		return test_aggregate(a4);
	}
	public A_string getPrefixtitles(EIfcperson type) throws SdaiException {
		return (A_string)get_aggregate(a4);
	}
	public A_string createPrefixtitles(EIfcperson type) throws SdaiException {
		a4 = create_aggregate_string(a4, a4$, 0);
		return a4;
	}
	public void unsetPrefixtitles(EIfcperson type) throws SdaiException {
		unset_aggregate(a4);
		a4 = null;
	}
	public static jsdai.dictionary.EAttribute attributePrefixtitles(EIfcperson type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4901=EXPLICIT_ATTRIBUTE('SuffixTitles',#4894,5,#6995,$,.T.);
	//<01> generating methods for consolidated attribute:  SuffixTitles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: SuffixTitles, base type: LIST OF STRING
	public boolean testSuffixtitles(EIfcperson type) throws SdaiException {
		return test_aggregate(a5);
	}
	public A_string getSuffixtitles(EIfcperson type) throws SdaiException {
		return (A_string)get_aggregate(a5);
	}
	public A_string createSuffixtitles(EIfcperson type) throws SdaiException {
		a5 = create_aggregate_string(a5, a5$, 0);
		return a5;
	}
	public void unsetSuffixtitles(EIfcperson type) throws SdaiException {
		unset_aggregate(a5);
		a5 = null;
	}
	public static jsdai.dictionary.EAttribute attributeSuffixtitles(EIfcperson type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4902=EXPLICIT_ATTRIBUTE('Roles',#4894,6,#6996,$,.T.);
	//<01> generating methods for consolidated attribute:  Roles
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Roles, base type: LIST OF ENTITY
	public static int usedinRoles(EIfcperson type, EIfcactorrole instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a6$, domain, result);
	}
	public boolean testRoles(EIfcperson type) throws SdaiException {
		return test_aggregate(a6);
	}
	public AIfcactorrole getRoles(EIfcperson type) throws SdaiException {
		return (AIfcactorrole)get_aggregate(a6);
	}
	public AIfcactorrole createRoles(EIfcperson type) throws SdaiException {
		a6 = (AIfcactorrole)create_aggregate_class(a6, a6$,  AIfcactorrole.class, 0);
		return a6;
	}
	public void unsetRoles(EIfcperson type) throws SdaiException {
		unset_aggregate(a6);
		a6 = null;
	}
	public static jsdai.dictionary.EAttribute attributeRoles(EIfcperson type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4903=EXPLICIT_ATTRIBUTE('Addresses',#4894,7,#6997,$,.T.);
	//<01> generating methods for consolidated attribute:  Addresses
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: Addresses, base type: LIST OF ENTITY
	public static int usedinAddresses(EIfcperson type, EIfcaddress instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testAddresses(EIfcperson type) throws SdaiException {
		return test_aggregate(a7);
	}
	public AIfcaddress getAddresses(EIfcperson type) throws SdaiException {
		return (AIfcaddress)get_aggregate(a7);
	}
	public AIfcaddress createAddresses(EIfcperson type) throws SdaiException {
		a7 = (AIfcaddress)create_aggregate_class(a7, a7$,  AIfcaddress.class, 0);
		return a7;
	}
	public void unsetAddresses(EIfcperson type) throws SdaiException {
		unset_aggregate(a7);
		a7 = null;
	}
	public static jsdai.dictionary.EAttribute attributeAddresses(EIfcperson type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4904=INVERSE_ATTRIBUTE('EngagedIn',#4894,0,#4905,$,#4907,#8741,$,.F.);
	//<01> generating methods for consolidated attribute:  EngagedIn
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - EngagedIn : SET[0:-2147483648] OF IfcPersonAndOrganization FOR ThePerson
	public AIfcpersonandorganization getEngagedin(EIfcperson type, ASdaiModel domain) throws SdaiException {
		AIfcpersonandorganization result = (AIfcpersonandorganization)get_inverse_aggregate(i0$);
		CIfcpersonandorganization.usedinTheperson(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeEngagedin(EIfcperson type) throws SdaiException {
		return i0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			if (a3 instanceof CAggregate)
				a3.unsetAll();
			a3 = null;
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			if (a5 instanceof CAggregate)
				a5.unsetAll();
			a5 = null;
			if (a6 instanceof CAggregate)
				a6.unsetAll();
			a6 = null;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getStringAggregate(3, a3$, this);
		a4 = av.entityValues[0].getStringAggregate(4, a4$, this);
		a5 = av.entityValues[0].getStringAggregate(5, a5$, this);
		a6 = (AIfcactorrole)av.entityValues[0].getInstanceAggregate(6, a6$, this);
		a7 = (AIfcaddress)av.entityValues[0].getInstanceAggregate(7, a7$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = null;
			if (a3 instanceof CAggregate)
				a3.unsetAll();
			a3 = null;
			if (a4 instanceof CAggregate)
				a4.unsetAll();
			a4 = null;
			if (a5 instanceof CAggregate)
				a5.unsetAll();
			a5 = null;
			if (a6 instanceof CAggregate)
				a6.unsetAll();
			a6 = null;
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
		a3 = av.entityValues[0].getStringAggregate(3, a3$, this);
		a4 = av.entityValues[0].getStringAggregate(4, a4$, this);
		a5 = av.entityValues[0].getStringAggregate(5, a5$, this);
		a6 = (AIfcactorrole)av.entityValues[0].getInstanceAggregate(6, a6$, this);
		a7 = (AIfcaddress)av.entityValues[0].getInstanceAggregate(7, a7$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPerson
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setStringAggregate(3, a3);
		av.entityValues[0].setStringAggregate(4, a4);
		av.entityValues[0].setStringAggregate(5, a5);
		av.entityValues[0].setInstanceAggregate(6, a6);
		av.entityValues[0].setInstanceAggregate(7, a7);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPerson
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
		av.entityValues[0].setStringAggregate(3, a3);
		av.entityValues[0].setStringAggregate(4, a4);
		av.entityValues[0].setStringAggregate(5, a5);
		av.entityValues[0].setInstanceAggregate(6, a6);
		av.entityValues[0].setInstanceAggregate(7, a7);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcpersonIdentifiableperson(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcIdentifier).set(_context, get(a0$))), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(a1$)))), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(a2$))))).getLogical());
	}
	public int rIfcpersonValidsetofnames(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_list_1_ifclabel).set(_context, get(a3$)))), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(a1$)))), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(a2$))))).getLogical());
	}
}
