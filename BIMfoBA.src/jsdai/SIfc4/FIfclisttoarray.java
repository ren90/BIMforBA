/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcListToArray

package jsdai.SIfc4;
import jsdai.lang.*;


public class FIfclisttoarray {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Lis;
	Value _nonvar__e_Low;
	Value _nonvar__e_U;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_N;
	Value _e_Res;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Lis, Value _e_Low, Value _e_U) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Lis = Value.alloc(ExpressTypes.LIST_GENERIC_TYPE).set(_e_Lis);
		_nonvar__e_Low = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_Low);
		_nonvar__e_U = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_U);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_N = Value.alloc(ExpressTypes.INTEGER_TYPE);
		_e_Res = Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb11_2pdb12_generic);
		// end of initialization of local variables





																									_e_N.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_Lis));



																									if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, _e_N, Value.alloc().addOrUnionOrConcatenate(_context, Value.alloc().substractOrDifference(_context, _nonvar__e_U, _nonvar__e_Low), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical() == 2) {																									
		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_0_2unset_generic).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_0_2unset_generic);
																									} else {																									
																										Value _elements427 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																										for (int _index427_0 = 0; _index427_0 < _e_N.getInteger(); _index427_0++)
																											_elements427.addMember(_context, _nonvar__e_Lis.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), null));
																										_e_Res.set(_context, _elements427);																										
																										Value _end428 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(_e_N);
																										Value _step428 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																										for (Value _implicit_102_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_102_i, _end428).getLogical() == 2;_implicit_102_i.inc(_step428)) {																										
																											_e_Res.indexing(Value.alloc().substractOrDifference(_context, Value.alloc().addOrUnionOrConcatenate(_context, _nonvar__e_Low, _implicit_102_i), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), null).set(_context, _nonvar__e_Lis.indexing(_implicit_102_i, null));
																										} // for - REPEAT																																																			
		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_0_2unset_generic).set(_context, _e_Res).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_0_2unset_generic);																									
																									}


		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
