/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcGeometricRepresentationSubContext

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcgeometricrepresentationsubcontext extends CIfcgeometricrepresentationcontext implements EIfcgeometricrepresentationsubcontext {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcgeometricrepresentationsubcontext.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// ContextIdentifier: protected String a0;   ContextIdentifier - java inheritance - STRING
	// ContextType: protected String a1;   ContextType - java inheritance - STRING
	// RepresentationsInContext: protected Object  - inverse - java inheritance -  ENTITY IfcRepresentation
	// CoordinateSpaceDimension: protected int a2 -  explicit redeclared as derived - java inheritance -  INTEGER
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// Precision: protected double a3 -  explicit redeclared as derived - java inheritance -  REAL
	protected static final jsdai.dictionary.CDerived_attribute d1$ = CEntity.initDerivedAttribute(definition, 1);
	// WorldCoordinateSystem: protected Object a4 -  explicit redeclared as derived - java inheritance -  SELECT IfcAxis2Placement
	protected static final jsdai.dictionary.CDerived_attribute d2$ = CEntity.initDerivedAttribute(definition, 2);
	// TrueNorth: protected Object a5 -  explicit redeclared as derived - java inheritance -  ENTITY IfcDirection
	protected static final jsdai.dictionary.CDerived_attribute d3$ = CEntity.initDerivedAttribute(definition, 3);
	// HasSubContexts: protected Object  - inverse - java inheritance -  ENTITY IfcGeometricRepresentationSubContext
	protected Object a6; // ParentContext - current entity - ENTITY IfcGeometricRepresentationContext
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a7; // TargetScale - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected int a8; // TargetView - current entity - ENUMERATION IfcGeometricProjectionEnum
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected String a9; // UserDefinedTargetView - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	// WorldCoordinateSystem: protected Object  - derived redeclaring - current -  SELECT IfcAxis2Placement
	// CoordinateSpaceDimension: protected int  - derived redeclaring - current -  INTEGER
	// TrueNorth: protected Object  - derived redeclaring - current -  ENTITY IfcDirection
	// Precision: protected double  - derived redeclaring - current -  REAL
*/

	/*----------------------------- Attributes (new version) -----------*/

	// ContextIdentifier - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// ContextType - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// RepresentationsInContext - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// CoordinateSpaceDimension - explicit redeclared as derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d1$ = CEntity.initDerivedAttribute(definition, 1);
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// Precision - explicit redeclared as derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d3$ = CEntity.initDerivedAttribute(definition, 3);
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// WorldCoordinateSystem - explicit redeclared as derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	// TrueNorth - explicit redeclared as derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d2$ = CEntity.initDerivedAttribute(definition, 2);
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected Object a5;
	// HasSubContexts - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// ParentContext - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected Object a6;
	// TargetScale - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a7;
	// TargetView - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected int a8;
	// UserDefinedTargetView - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	protected String a9;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a6 == old) {
			a6 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a6 == old) {
			a6 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5547=EXPLICIT_ATTRIBUTE('ContextIdentifier',#5545,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ContextIdentifier
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5548=EXPLICIT_ATTRIBUTE('ContextType',#5545,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ContextType
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5549=INVERSE_ATTRIBUTE('RepresentationsInContext',#5545,0,#5536,$,#5538,#9217,$,.F.);
	//<01> generating methods for consolidated attribute:  RepresentationsInContext
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4406=EXPLICIT_ATTRIBUTE('CoordinateSpaceDimension',#4404,0,#2485,$,.F.);
	//<01> generating methods for consolidated attribute:  CoordinateSpaceDimension
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> explicit-to-derived
	//<01-0-1-1-2> NOT RENAMED: CoordinateSpaceDimension - CoordinateSpaceDimension - generateExplicit2DerivedCurrentEntityMethodsX(true)
	// generateExplicit2DerivedNonJavaMethodsX: 1
		//#X# 01 - is_original: true
	 //<><> redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //<><> owning_entity_name_x: EIfcgeometricrepresentationcontext
	// generateJavaExplicit2DerivedAttributeDefinedTypeMethods: 4B
	 //is_original: true
	 //redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //redeclared_owning_entity_name, if is_original: EIfcgeometricrepresentationcontext
	 //current_name: CoordinateSpaceDimension
	 //current_name, if is_original: CoordinateSpaceDimension
	 //initial attr: #4420=DERIVED_ATTRIBUTE('CoordinateSpaceDimension',#4413,1,#2485,#4406);
	 //last_redeclared_by.attr  (last_attr): #4420=DERIVED_ATTRIBUTE('CoordinateSpaceDimension',#4413,1,#2485,#4406);
//#X# 00 - attr: #4420=DERIVED_ATTRIBUTE('CoordinateSpaceDimension',#4413,1,#2485,#4406);, redeclared_attr: #4406=EXPLICIT_ATTRIBUTE('CoordinateSpaceDimension',#4404,0,#2485,$,.F.);
	// generateJavaExplicit2DerivedAttributeSimpleTypeMethods: 2
	// -4- methods for explicit redeclared as derived attribute: CoordinateSpaceDimension, base type: INTEGER
	public boolean testCoordinatespacedimension(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getCoordinatespacedimension(EIfcgeometricrepresentationcontext type, SdaiContext _context) throws SdaiException {





//###-01 jc.generated_java: Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeCoordinatespacedimension(null), _context)
				return (Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeCoordinatespacedimension(null), _context));
	}
	public int getCoordinatespacedimension(EIfcgeometricrepresentationcontext type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return getCoordinatespacedimension((EIfcgeometricrepresentationcontext)null, _context).getInteger();
	}
	public void setCoordinatespacedimension(EIfcgeometricrepresentationcontext type, int value) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public void unsetCoordinatespacedimension(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public static jsdai.dictionary.EAttribute attributeCoordinatespacedimension(EIfcgeometricrepresentationcontext type) throws SdaiException {
		return d1$;
	}

	//going through all the attributes: #4407=EXPLICIT_ATTRIBUTE('Precision',#4404,1,#3,$,.T.);
	//<01> generating methods for consolidated attribute:  Precision
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> explicit-to-derived
	//<01-0-1-1-2> NOT RENAMED: Precision - Precision - generateExplicit2DerivedCurrentEntityMethodsX(true)
	// generateExplicit2DerivedNonJavaMethodsX: 1
		//#X# 01 - is_original: true
	 //<><> redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //<><> owning_entity_name_x: EIfcgeometricrepresentationcontext
	// generateJavaExplicit2DerivedAttributeSimpleTypeMethods: 4
	 //is_original: true
	 //redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //redeclared_owning_entity_name, if is_original: EIfcgeometricrepresentationcontext
	 //current_name: Precision
	 //current_name, if is_original: Precision
	 //initial attr: #4422=DERIVED_ATTRIBUTE('Precision',#4413,3,#3,#4407);
	 //last_redeclared_by.attr  (last_attr): #4422=DERIVED_ATTRIBUTE('Precision',#4413,3,#3,#4407);
	// -6- methods for explicit redeclared as derived attribute: Precision, base type: REAL
	public boolean testPrecision(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getPrecision(EIfcgeometricrepresentationcontext type, SdaiContext _context) throws SdaiException {





//###-01 jc.generated_java: Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributePrecision(null), _context), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0E-5))
				return (Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributePrecision(null), _context), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0E-5)));
	}
	public double getPrecision(EIfcgeometricrepresentationcontext type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
		return getPrecision((EIfcgeometricrepresentationcontext)null, _context).getDouble();
	}
	public void setPrecision(EIfcgeometricrepresentationcontext type, double value) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public void unsetPrecision(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public static jsdai.dictionary.EAttribute attributePrecision(EIfcgeometricrepresentationcontext type) throws SdaiException {
		return d3$;
	}

	//going through all the attributes: #4408=EXPLICIT_ATTRIBUTE('WorldCoordinateSystem',#4404,2,#3115,$,.F.);
	//<01> generating methods for consolidated attribute:  WorldCoordinateSystem
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> explicit-to-derived
	//<01-0-1-1-2> NOT RENAMED: WorldCoordinateSystem - WorldCoordinateSystem - generateExplicit2DerivedCurrentEntityMethodsX(true)
	// generateExplicit2DerivedNonJavaMethodsX: 1
		//#X# 01 - is_original: true
	 //<><> redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //<><> owning_entity_name_x: EIfcgeometricrepresentationcontext
	// generateJavaExplicit2DerivedAttributeDefinedTypeMethods: 4B
	 //is_original: true
	 //redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //redeclared_owning_entity_name, if is_original: EIfcgeometricrepresentationcontext
	 //current_name: WorldCoordinateSystem
	 //current_name, if is_original: WorldCoordinateSystem
	 //initial attr: #4419=DERIVED_ATTRIBUTE('WorldCoordinateSystem',#4413,0,#3115,#4408);
	 //last_redeclared_by.attr  (last_attr): #4419=DERIVED_ATTRIBUTE('WorldCoordinateSystem',#4413,0,#3115,#4408);
//#X# 00 - attr: #4419=DERIVED_ATTRIBUTE('WorldCoordinateSystem',#4413,0,#3115,#4408);, redeclared_attr: #4408=EXPLICIT_ATTRIBUTE('WorldCoordinateSystem',#4404,2,#3115,$,.F.);
	// -1- methods for explicit redeclared as derived SELECT attribute: WorldCoordinateSystem
	// current_name1: WorldCoordinateSystem
	// current_name2: WorldCoordinateSystem
	public boolean testWorldcoordinatesystem(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}

	public EEntity getWorldcoordinatesystem(EIfcgeometricrepresentationcontext type) throws SdaiException { // case 1
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
		return (EEntity) getWorldcoordinatesystem(((EIfcgeometricrepresentationcontext)null), _context).getInstance();
	}
	public Value getWorldcoordinatesystem(EIfcgeometricrepresentationcontext type, SdaiContext _context) throws SdaiException {





//###-01 jc.generated_java: Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeWorldcoordinatesystem(null), _context)
				return (Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeWorldcoordinatesystem(null), _context));
	}

	public void setWorldcoordinatesystem(EIfcgeometricrepresentationcontext type, EEntity value) throws SdaiException { // case 1
			throw new SdaiException(SdaiException.AT_NVLD);
	}

	public void unsetWorldcoordinatesystem(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);

	}
	public static jsdai.dictionary.EAttribute attributeWorldcoordinatesystem(EIfcgeometricrepresentationcontext type) throws SdaiException {
		return d0$;
	}

	//going through all the attributes: #4409=EXPLICIT_ATTRIBUTE('TrueNorth',#4404,3,#3948,$,.T.);
	//<01> generating methods for consolidated attribute:  TrueNorth
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> explicit-to-derived
	//<01-0-1-1-2> NOT RENAMED: TrueNorth - TrueNorth - generateExplicit2DerivedCurrentEntityMethodsX(true)
	// generateExplicit2DerivedNonJavaMethodsX: 1
		//#X# 01 - is_original: true
	 //<><> redeclared_owning_entity_name: EIfcgeometricrepresentationcontext
	 //<><> owning_entity_name_x: EIfcgeometricrepresentationcontext
	// -15C- explicit redeclared as derived attribute: TrueNorth, base type: entity IfcDirection
	// current_name1: TrueNorth
	// current_name2: TrueNorth
	public static int usedinTruenorth(EIfcgeometricrepresentationcontext type, EIfcdirection instance, ASdaiModel domain, AEntity result) throws SdaiException {
			// FN_NAVL - 24 - USEDIN
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public boolean testTruenorth(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getTruenorth(EIfcgeometricrepresentationcontext type, SdaiContext _context) throws SdaiException {
//HOHO invoking expression generation, attr: #4421=DERIVED_ATTRIBUTE('TrueNorth',#4413,2,#3948,#4409);, sd: #2446=SCHEMA_DEFINITION('IFC4',$);, _ed: #4413=ENTITY_DEFINITION('IfcGeometricRepresentationSubContext',$,(#4404),.F.,.T.,.T.,.F.,.F.);, model: SdaiModel: IFC4_DICTIONARY_DATA






//###-01 jc.generated_java: Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeTruenorth(null), _context), (new jsdai.SIfc4.FIfcconvertdirectioninto2d()).run(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationsubcontext.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcgeometricrepresentationcontext.class).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeWorldcoordinatesystem(null), _context).getAttribute("P", _context).indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), null)))
				return (Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeTruenorth(null), _context), (new jsdai.SIfc4.FIfcconvertdirectioninto2d()).run(_context, Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationsubcontext.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcgeometricrepresentationcontext.class).getAttribute(jsdai.SIfc4.CIfcgeometricrepresentationcontext.attributeWorldcoordinatesystem(null), _context).getAttribute("P", _context).indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), null))));
	}
	public EIfcdirection getTruenorth(EIfcgeometricrepresentationcontext type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return (EIfcdirection) getTruenorth(null, _context).getInstance();
	}
	public void setTruenorth(EIfcgeometricrepresentationcontext type, EIfcdirection value) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public void unsetTruenorth(EIfcgeometricrepresentationcontext type) throws SdaiException {
			throw new SdaiException(SdaiException.AT_NVLD);
	}
	public static jsdai.dictionary.EAttribute attributeTruenorth(EIfcgeometricrepresentationcontext type) throws SdaiException {
		return d2$;
	}

	//going through all the attributes: #4410=INVERSE_ATTRIBUTE('HasSubContexts',#4404,0,#4413,$,#4415,#8458,$,.F.);
	//<01> generating methods for consolidated attribute:  HasSubContexts
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4415=EXPLICIT_ATTRIBUTE('ParentContext',#4413,0,#4404,$,.F.);
	//<01> generating methods for consolidated attribute:  ParentContext
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ParentContext, base type: entity IfcGeometricRepresentationContext
	public static int usedinParentcontext(EIfcgeometricrepresentationsubcontext type, EIfcgeometricrepresentationcontext instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a6$, domain, result);
	}
	public boolean testParentcontext(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return test_instance(a6);
	}
	public EIfcgeometricrepresentationcontext getParentcontext(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return (EIfcgeometricrepresentationcontext)get_instance(a6);
	}
	public void setParentcontext(EIfcgeometricrepresentationsubcontext type, EIfcgeometricrepresentationcontext value) throws SdaiException {
		a6 = set_instance(a6, value);
	}
	public void unsetParentcontext(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		a6 = unset_instance(a6);
	}
	public static jsdai.dictionary.EAttribute attributeParentcontext(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4416=EXPLICIT_ATTRIBUTE('TargetScale',#4413,1,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  TargetScale
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TargetScale, base type: REAL
	public boolean testTargetscale(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return test_double(a7);
	}
	public double getTargetscale(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return get_double(a7);
	}
	public void setTargetscale(EIfcgeometricrepresentationsubcontext type, double value) throws SdaiException {
		a7 = set_double(value);
	}
	public void unsetTargetscale(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		a7 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeTargetscale(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4417=EXPLICIT_ATTRIBUTE('TargetView',#4413,2,#2887,$,.F.);
	//<01> generating methods for consolidated attribute:  TargetView
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:TargetView, base type: ENUMERATION
	public boolean testTargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return test_enumeration(a8);
	}
	public int getTargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return get_enumeration(a8);
	}
	public void setTargetview(EIfcgeometricrepresentationsubcontext type, int value) throws SdaiException {
		a8 = set_enumeration(value, a8$);
	}
	public void unsetTargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		a8 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeTargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return a8$;
	}

	//going through all the attributes: #4418=EXPLICIT_ATTRIBUTE('UserDefinedTargetView',#4413,3,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedTargetView
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: UserDefinedTargetView, base type: STRING
	public boolean testUserdefinedtargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return test_string(a9);
	}
	public String getUserdefinedtargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return get_string(a9);
	}
	public void setUserdefinedtargetview(EIfcgeometricrepresentationsubcontext type, String value) throws SdaiException {
		a9 = set_string(value);
	}
	public void unsetUserdefinedtargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		a9 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeUserdefinedtargetview(EIfcgeometricrepresentationsubcontext type) throws SdaiException {
		return a9$;
	}

	//going through all the attributes: #4419=DERIVED_ATTRIBUTE('WorldCoordinateSystem',#4413,0,#3115,#4408);
	//<02> NOT generating methods for NOT consolidated attribute:  WorldCoordinateSystem
	//going through all the attributes: #4420=DERIVED_ATTRIBUTE('CoordinateSpaceDimension',#4413,1,#2485,#4406);
	//<02> NOT generating methods for NOT consolidated attribute:  CoordinateSpaceDimension
	//going through all the attributes: #4421=DERIVED_ATTRIBUTE('TrueNorth',#4413,2,#3948,#4409);
	//<02> NOT generating methods for NOT consolidated attribute:  TrueNorth
	//going through all the attributes: #4422=DERIVED_ATTRIBUTE('Precision',#4413,3,#3,#4407);
	//<02> NOT generating methods for NOT consolidated attribute:  Precision

	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a6 = unset_instance(a6);
			a7 = Double.NaN;
			a8 = 0;
			a9 = null;
			a0 = null;
			a1 = null;
			return;
		}
		a6 = av.entityValues[1].getInstance(0, this, a6$);
		a7 = av.entityValues[1].getDouble(1);
		a8 = av.entityValues[1].getEnumeration(2, a8$);
		a9 = av.entityValues[1].getString(3);
		a0 = av.entityValues[2].getString(0);
		a1 = av.entityValues[2].getString(1);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a6 = unset_instance(a6);
			a7 = Double.NaN;
			a8 = 0;
			a9 = null;
			a0 = null;
			a1 = null;
			return;
		}
		av.entityValues[0].values[0].checkRedefine(this, a2$);
		av.entityValues[0].values[1].checkRedefine(this, a3$);
		av.entityValues[0].values[2].checkRedefine(this, a4$);
		av.entityValues[0].values[3].checkRedefine(this, a5$);
		a6 = av.entityValues[1].getInstance(0, this, a6$);
		a7 = av.entityValues[1].getDouble(1);
		a8 = av.entityValues[1].getEnumeration(2, a8$);
		a9 = av.entityValues[1].getString(3);
		a0 = av.entityValues[2].getString(0);
		a1 = av.entityValues[2].getString(1);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationContext
		av.entityValues[0].values[0].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[1].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[2].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[3].tag = EntityValue.REDEFINE;
		// partial entity: IfcGeometricRepresentationSubContext
		av.entityValues[1].setInstance(0, a6);
		av.entityValues[1].setDouble(1, a7);
		av.entityValues[1].setEnumeration(2, a8, a8$);
		av.entityValues[1].setString(3, a9);
		// partial entity: IfcRepresentationContext
		av.entityValues[2].setString(0, a0);
		av.entityValues[2].setString(1, a1);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationContext
		av.entityValues[0].values[0].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[1].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[2].tag = EntityValue.REDEFINE;
		av.entityValues[0].values[3].tag = EntityValue.REDEFINE;
		// partial entity: IfcGeometricRepresentationSubContext
		av.entityValues[1].setInstance(0, a6);
		av.entityValues[1].setDouble(1, a7);
		av.entityValues[1].setEnumeration(2, a8, a8$);
		av.entityValues[1].setString(3, a9);
		// partial entity: IfcRepresentationContext
		av.entityValues[2].setString(0, a0);
		av.entityValues[2].setString(1, a1);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcgeometricrepresentationsubcontextWr32(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcGeometricProjectionEnum).set(_context, get(a8$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcGeometricProjectionEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcGeometricProjectionEnum).set(_context, get(a8$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcGeometricProjectionEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(a9$)))))).getLogical());
	}
	public int rIfcgeometricrepresentationsubcontextWr31(SdaiContext _context) throws SdaiException {
	



		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCGEOMETRICREPRESENTATIONSUBCONTEXT", "IFC4"), Value.alloc(jsdai.SIfc4.CIfcgeometricrepresentationcontext.definition).set(_context, get(a6$)).typeOfV(_context)))).getLogical());
	}
}
