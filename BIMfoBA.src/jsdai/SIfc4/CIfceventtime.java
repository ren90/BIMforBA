/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcEventTime

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfceventtime extends CIfcschedulingtime implements EIfceventtime {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfceventtime.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// DataOrigin: protected int a1;   DataOrigin - java inheritance - ENUMERATION IfcDataOriginEnum
	// UserDefinedDataOrigin: protected String a2;   UserDefinedDataOrigin - java inheritance - STRING
	protected String a3; // ActualDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // EarlyDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // LateDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a6; // ScheduleDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// DataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected int a1;
	// UserDefinedDataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// ActualDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// EarlyDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// LateDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// ScheduleDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a6;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5638=EXPLICIT_ATTRIBUTE('Name',#5636,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5639=EXPLICIT_ATTRIBUTE('DataOrigin',#5636,1,#2803,$,.T.);
	//<01> generating methods for consolidated attribute:  DataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5640=EXPLICIT_ATTRIBUTE('UserDefinedDataOrigin',#5636,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedDataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4209=EXPLICIT_ATTRIBUTE('ActualDate',#4207,0,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualDate, base type: STRING
	public boolean testActualdate(EIfceventtime type) throws SdaiException {
		return test_string(a3);
	}
	public String getActualdate(EIfceventtime type) throws SdaiException {
		return get_string(a3);
	}
	public void setActualdate(EIfceventtime type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetActualdate(EIfceventtime type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualdate(EIfceventtime type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4210=EXPLICIT_ATTRIBUTE('EarlyDate',#4207,1,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  EarlyDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EarlyDate, base type: STRING
	public boolean testEarlydate(EIfceventtime type) throws SdaiException {
		return test_string(a4);
	}
	public String getEarlydate(EIfceventtime type) throws SdaiException {
		return get_string(a4);
	}
	public void setEarlydate(EIfceventtime type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetEarlydate(EIfceventtime type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeEarlydate(EIfceventtime type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4211=EXPLICIT_ATTRIBUTE('LateDate',#4207,2,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  LateDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LateDate, base type: STRING
	public boolean testLatedate(EIfceventtime type) throws SdaiException {
		return test_string(a5);
	}
	public String getLatedate(EIfceventtime type) throws SdaiException {
		return get_string(a5);
	}
	public void setLatedate(EIfceventtime type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetLatedate(EIfceventtime type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLatedate(EIfceventtime type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4212=EXPLICIT_ATTRIBUTE('ScheduleDate',#4207,3,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleDate, base type: STRING
	public boolean testScheduledate(EIfceventtime type) throws SdaiException {
		return test_string(a6);
	}
	public String getScheduledate(EIfceventtime type) throws SdaiException {
		return get_string(a6);
	}
	public void setScheduledate(EIfceventtime type, String value) throws SdaiException {
		a6 = set_string(value);
	}
	public void unsetScheduledate(EIfceventtime type) throws SdaiException {
		a6 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeScheduledate(EIfceventtime type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = null;
			a0 = null;
			a1 = 0;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getString(1);
		a5 = av.entityValues[0].getString(2);
		a6 = av.entityValues[0].getString(3);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getEnumeration(1, a1$);
		a2 = av.entityValues[1].getString(2);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = null;
			a0 = null;
			a1 = 0;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getString(1);
		a5 = av.entityValues[0].getString(2);
		a6 = av.entityValues[0].getString(3);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getEnumeration(1, a1$);
		a2 = av.entityValues[1].getString(2);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcEventTime
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setString(1, a4);
		av.entityValues[0].setString(2, a5);
		av.entityValues[0].setString(3, a6);
		// partial entity: IfcSchedulingTime
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setEnumeration(1, a1, a1$);
		av.entityValues[1].setString(2, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcEventTime
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setString(1, a4);
		av.entityValues[0].setString(2, a5);
		av.entityValues[0].setString(3, a6);
		// partial entity: IfcSchedulingTime
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setEnumeration(1, a1, a1$);
		av.entityValues[1].setString(2, a2);
	}
}
