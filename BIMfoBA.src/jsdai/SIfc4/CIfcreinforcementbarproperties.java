/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcReinforcementBarProperties

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcreinforcementbarproperties extends CIfcpredefinedproperties implements EIfcreinforcementbarproperties {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcreinforcementbarproperties.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	protected double a0; // TotalCrossSectionArea - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // SteelGrade - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a2; // BarSurface - current entity - ENUMERATION IfcReinforcingBarSurfaceEnum
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a3; // EffectiveDepth - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // NominalBarDiameter - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a5; // BarCount - current entity - NUMBER
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// TotalCrossSectionArea - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected double a0;
	// SteelGrade - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// BarSurface - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// EffectiveDepth - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// NominalBarDiameter - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// BarCount - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a5;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5104=INVERSE_ATTRIBUTE('HasExternalReferences',#5102,0,#4231,$,#4234,#8918,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5289=EXPLICIT_ATTRIBUTE('TotalCrossSectionArea',#5287,0,#2457,$,.F.);
	//<01> generating methods for consolidated attribute:  TotalCrossSectionArea
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TotalCrossSectionArea, base type: REAL
	public boolean testTotalcrosssectionarea(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_double(a0);
	}
	public double getTotalcrosssectionarea(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_double(a0);
	}
	public void setTotalcrosssectionarea(EIfcreinforcementbarproperties type, double value) throws SdaiException {
		a0 = set_double(value);
	}
	public void unsetTotalcrosssectionarea(EIfcreinforcementbarproperties type) throws SdaiException {
		a0 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeTotalcrosssectionarea(EIfcreinforcementbarproperties type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #5290=EXPLICIT_ATTRIBUTE('SteelGrade',#5287,1,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  SteelGrade
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: SteelGrade, base type: STRING
	public boolean testSteelgrade(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_string(a1);
	}
	public String getSteelgrade(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_string(a1);
	}
	public void setSteelgrade(EIfcreinforcementbarproperties type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetSteelgrade(EIfcreinforcementbarproperties type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSteelgrade(EIfcreinforcementbarproperties type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5291=EXPLICIT_ATTRIBUTE('BarSurface',#5287,2,#2991,$,.T.);
	//<01> generating methods for consolidated attribute:  BarSurface
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:BarSurface, base type: ENUMERATION
	public boolean testBarsurface(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_enumeration(a2);
	}
	public int getBarsurface(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_enumeration(a2);
	}
	public void setBarsurface(EIfcreinforcementbarproperties type, int value) throws SdaiException {
		a2 = set_enumeration(value, a2$);
	}
	public void unsetBarsurface(EIfcreinforcementbarproperties type) throws SdaiException {
		a2 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeBarsurface(EIfcreinforcementbarproperties type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #5292=EXPLICIT_ATTRIBUTE('EffectiveDepth',#5287,3,#2543,$,.T.);
	//<01> generating methods for consolidated attribute:  EffectiveDepth
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: EffectiveDepth, base type: REAL
	public boolean testEffectivedepth(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_double(a3);
	}
	public double getEffectivedepth(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_double(a3);
	}
	public void setEffectivedepth(EIfcreinforcementbarproperties type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetEffectivedepth(EIfcreinforcementbarproperties type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeEffectivedepth(EIfcreinforcementbarproperties type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #5293=EXPLICIT_ATTRIBUTE('NominalBarDiameter',#5287,4,#2605,$,.T.);
	//<01> generating methods for consolidated attribute:  NominalBarDiameter
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: NominalBarDiameter, base type: REAL
	public boolean testNominalbardiameter(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_double(a4);
	}
	public double getNominalbardiameter(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_double(a4);
	}
	public void setNominalbardiameter(EIfcreinforcementbarproperties type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetNominalbardiameter(EIfcreinforcementbarproperties type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeNominalbardiameter(EIfcreinforcementbarproperties type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5294=EXPLICIT_ATTRIBUTE('BarCount',#5287,5,#2471,$,.T.);
	//<01> generating methods for consolidated attribute:  BarCount
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: BarCount, base type: NUMBER
	public boolean testBarcount(EIfcreinforcementbarproperties type) throws SdaiException {
		return test_double(a5);
	}
	public double getBarcount(EIfcreinforcementbarproperties type) throws SdaiException {
		return get_double(a5);
	}
	public void setBarcount(EIfcreinforcementbarproperties type, double value) throws SdaiException {
		a5 = set_double(value);
	}
	public void unsetBarcount(EIfcreinforcementbarproperties type) throws SdaiException {
		a5 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeBarcount(EIfcreinforcementbarproperties type) throws SdaiException {
		return a5$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Double.NaN;
			a1 = null;
			a2 = 0;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			return;
		}
		a0 = av.entityValues[2].getDouble(0);
		a1 = av.entityValues[2].getString(1);
		a2 = av.entityValues[2].getEnumeration(2, a2$);
		a3 = av.entityValues[2].getDouble(3);
		a4 = av.entityValues[2].getDouble(4);
		a5 = av.entityValues[2].getDouble(5);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Double.NaN;
			a1 = null;
			a2 = 0;
			a3 = Double.NaN;
			a4 = Double.NaN;
			a5 = Double.NaN;
			return;
		}
		a0 = av.entityValues[2].getDouble(0);
		a1 = av.entityValues[2].getString(1);
		a2 = av.entityValues[2].getEnumeration(2, a2$);
		a3 = av.entityValues[2].getDouble(3);
		a4 = av.entityValues[2].getDouble(4);
		a5 = av.entityValues[2].getDouble(5);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPreDefinedProperties
		// partial entity: IfcPropertyAbstraction
		// partial entity: IfcReinforcementBarProperties
		av.entityValues[2].setDouble(0, a0);
		av.entityValues[2].setString(1, a1);
		av.entityValues[2].setEnumeration(2, a2, a2$);
		av.entityValues[2].setDouble(3, a3);
		av.entityValues[2].setDouble(4, a4);
		av.entityValues[2].setDouble(5, a5);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPreDefinedProperties
		// partial entity: IfcPropertyAbstraction
		// partial entity: IfcReinforcementBarProperties
		av.entityValues[2].setDouble(0, a0);
		av.entityValues[2].setString(1, a1);
		av.entityValues[2].setEnumeration(2, a2, a2$);
		av.entityValues[2].setDouble(3, a3);
		av.entityValues[2].setDouble(4, a4);
		av.entityValues[2].setDouble(5, a5);
	}
}
