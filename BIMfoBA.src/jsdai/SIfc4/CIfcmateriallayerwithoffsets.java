/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialLayerWithOffsets

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmateriallayerwithoffsets extends CIfcmateriallayer implements EIfcmateriallayerwithoffsets {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmateriallayerwithoffsets.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociatesMaterial
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// HasProperties: protected Object  - inverse - java inheritance -  ENTITY IfcMaterialProperties
	// Material: protected Object a0;   Material - java inheritance - ENTITY IfcMaterial
	// LayerThickness: protected double a1;   LayerThickness - java inheritance - REAL
	// IsVentilated: protected int a2;   IsVentilated - java inheritance - LOGICAL
	// Name: protected String a3;   Name - java inheritance - STRING
	// Description: protected String a4;   Description - java inheritance - STRING
	// Category: protected String a5;   Category - java inheritance - STRING
	// Priority: protected double a6;   Priority - java inheritance - REAL
	// ToMaterialLayerSet: protected Object  - inverse - java inheritance -  ENTITY IfcMaterialLayerSet
	protected int a7; // OffsetDirection - current entity - ENUMERATION IfcLayerSetDirectionEnum
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected A_double a8; // OffsetValues - current entity - ARRAY OF REAL
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// HasProperties - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// Material - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected Object a0;
	// LayerThickness - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected double a1;
	// IsVentilated - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected int a2;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected String a4;
	// Category - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected String a5;
	// Priority - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// protected double a6;
	// ToMaterialLayerSet - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
	// OffsetDirection - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected int a7;
	// OffsetValues - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected A_double a8;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4658=INVERSE_ATTRIBUTE('AssociatedTo',#4656,0,#5394,$,#5396,#8598,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4659=INVERSE_ATTRIBUTE('HasExternalReferences',#4656,1,#4231,$,#4234,#8600,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4660=INVERSE_ATTRIBUTE('HasProperties',#4656,2,#4721,$,#4723,#8602,$,.F.);
	//<01> generating methods for consolidated attribute:  HasProperties
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4666=EXPLICIT_ATTRIBUTE('Material',#4664,0,#4631,$,.T.);
	//<01> generating methods for consolidated attribute:  Material
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Material, base type: entity IfcMaterial
	public static int usedinMaterial(EIfcmateriallayer type, EIfcmaterial instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	//going through all the attributes: #4667=EXPLICIT_ATTRIBUTE('LayerThickness',#4664,1,#2591,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerThickness
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4668=EXPLICIT_ATTRIBUTE('IsVentilated',#4664,2,#2553,$,.T.);
	//<01> generating methods for consolidated attribute:  IsVentilated
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4669=EXPLICIT_ATTRIBUTE('Name',#4664,3,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4670=EXPLICIT_ATTRIBUTE('Description',#4664,4,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4671=EXPLICIT_ATTRIBUTE('Category',#4664,5,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Category
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4672=EXPLICIT_ATTRIBUTE('Priority',#4664,6,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  Priority
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4673=INVERSE_ATTRIBUTE('ToMaterialLayerSet',#4664,0,#4674,$,#4676,$,$,.F.);
	//<01> generating methods for consolidated attribute:  ToMaterialLayerSet
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4689=EXPLICIT_ATTRIBUTE('OffsetDirection',#4687,0,#2911,$,.F.);
	//<01> generating methods for consolidated attribute:  OffsetDirection
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:OffsetDirection, base type: ENUMERATION
	public boolean testOffsetdirection(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return test_enumeration(a7);
	}
	public int getOffsetdirection(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return get_enumeration(a7);
	}
	public void setOffsetdirection(EIfcmateriallayerwithoffsets type, int value) throws SdaiException {
		a7 = set_enumeration(value, a7$);
	}
	public void unsetOffsetdirection(EIfcmateriallayerwithoffsets type) throws SdaiException {
		a7 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeOffsetdirection(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4690=EXPLICIT_ATTRIBUTE('OffsetValues',#4687,1,#6964,$,.F.);
	//<01> generating methods for consolidated attribute:  OffsetValues
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: OffsetValues, base type: ARRAY OF REAL
	public boolean testOffsetvalues(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return test_aggregate(a8);
	}
	public A_double getOffsetvalues(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return (A_double)get_aggregate(a8);
	}
	public A_double createOffsetvalues(EIfcmateriallayerwithoffsets type) throws SdaiException {
		a8 = create_aggregate_double(a8, a8$, 0);
		return a8;
	}
	public void unsetOffsetvalues(EIfcmateriallayerwithoffsets type) throws SdaiException {
		unset_aggregate(a8);
		a8 = null;
	}
	public static jsdai.dictionary.EAttribute attributeOffsetvalues(EIfcmateriallayerwithoffsets type) throws SdaiException {
		return a8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = 0;
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = Double.NaN;
			a7 = 0;
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
		a1 = av.entityValues[1].getDouble(1);
		a2 = av.entityValues[1].getLogical(2);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getDouble(6);
		a7 = av.entityValues[2].getEnumeration(0, a7$);
		a8 = av.entityValues[2].getDoubleAggregate(1, a8$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = Double.NaN;
			a2 = 0;
			a3 = null;
			a4 = null;
			a5 = null;
			a6 = Double.NaN;
			a7 = 0;
			return;
		}
		a0 = av.entityValues[1].getInstance(0, this, a0$);
		a1 = av.entityValues[1].getDouble(1);
		a2 = av.entityValues[1].getLogical(2);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getDouble(6);
		a7 = av.entityValues[2].getEnumeration(0, a7$);
		a8 = av.entityValues[2].getDoubleAggregate(1, a8$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
		// partial entity: IfcMaterialLayer
		av.entityValues[1].setInstance(0, a0);
		av.entityValues[1].setDouble(1, a1);
		av.entityValues[1].setLogical(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setDouble(6, a6);
		// partial entity: IfcMaterialLayerWithOffsets
		av.entityValues[2].setEnumeration(0, a7, a7$);
		av.entityValues[2].setDoubleAggregate(1, a8);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialDefinition
		// partial entity: IfcMaterialLayer
		av.entityValues[1].setInstance(0, a0);
		av.entityValues[1].setDouble(1, a1);
		av.entityValues[1].setLogical(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setDouble(6, a6);
		// partial entity: IfcMaterialLayerWithOffsets
		av.entityValues[2].setEnumeration(0, a7, a7$);
		av.entityValues[2].setDoubleAggregate(1, a8);
	}
}
