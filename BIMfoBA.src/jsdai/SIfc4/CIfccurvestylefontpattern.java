/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcCurveStyleFontPattern

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfccurvestylefontpattern extends CIfcpresentationitem implements EIfccurvestylefontpattern {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfccurvestylefontpattern.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected double a0; // VisibleSegmentLength - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected double a1; // InvisibleSegmentLength - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// VisibleSegmentLength - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected double a0;
	// InvisibleSegmentLength - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected double a1;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3913=EXPLICIT_ATTRIBUTE('VisibleSegmentLength',#3911,0,#2543,$,.F.);
	//<01> generating methods for consolidated attribute:  VisibleSegmentLength
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: VisibleSegmentLength, base type: REAL
	public boolean testVisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return test_double(a0);
	}
	public double getVisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return get_double(a0);
	}
	public void setVisiblesegmentlength(EIfccurvestylefontpattern type, double value) throws SdaiException {
		a0 = set_double(value);
	}
	public void unsetVisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		a0 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeVisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3914=EXPLICIT_ATTRIBUTE('InvisibleSegmentLength',#3911,1,#2605,$,.F.);
	//<01> generating methods for consolidated attribute:  InvisibleSegmentLength
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: InvisibleSegmentLength, base type: REAL
	public boolean testInvisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return test_double(a1);
	}
	public double getInvisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return get_double(a1);
	}
	public void setInvisiblesegmentlength(EIfccurvestylefontpattern type, double value) throws SdaiException {
		a1 = set_double(value);
	}
	public void unsetInvisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		a1 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeInvisiblesegmentlength(EIfccurvestylefontpattern type) throws SdaiException {
		return a1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Double.NaN;
			a1 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getDouble(0);
		a1 = av.entityValues[0].getDouble(1);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Double.NaN;
			a1 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getDouble(0);
		a1 = av.entityValues[0].getDouble(1);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCurveStyleFontPattern
		av.entityValues[0].setDouble(0, a0);
		av.entityValues[0].setDouble(1, a1);
		// partial entity: IfcPresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCurveStyleFontPattern
		av.entityValues[0].setDouble(0, a0);
		av.entityValues[0].setDouble(1, a1);
		// partial entity: IfcPresentationItem
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfccurvestylefontpatternVisiblelengthgreaterequalzero(SdaiContext _context) throws SdaiException {
	



		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLengthMeasure).set(_context, get(a0$)), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
}
