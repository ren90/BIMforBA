/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcCartesianTransformationOperator2DnonUniform

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfccartesiantransformationoperator2dnonuniform extends CIfccartesiantransformationoperator2d implements EIfccartesiantransformationoperator2dnonuniform {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfccartesiantransformationoperator2dnonuniform.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	// Axis1: protected Object a0;   Axis1 - java inheritance - ENTITY IfcDirection
	// Axis2: protected Object a1;   Axis2 - java inheritance - ENTITY IfcDirection
	// LocalOrigin: protected Object a2;   LocalOrigin - java inheritance - ENTITY IfcCartesianPoint
	// Scale: protected double a3;   Scale - java inheritance - REAL
	// Scl: protected double  - derived - java inheritance -  REAL
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// Dim: protected int  - derived - java inheritance -  INTEGER
	protected static final jsdai.dictionary.CDerived_attribute d1$ = CEntity.initDerivedAttribute(definition, 1);
	// U: protected AIfcdirection  - derived - java inheritance -  LIST OF ENTITY
	protected static final jsdai.dictionary.CDerived_attribute d2$ = CEntity.initDerivedAttribute(definition, 2);
	protected double a4; // Scale2 - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// Scl2: protected double  - derived - current -  REAL
	protected static final jsdai.dictionary.CDerived_attribute d3$ = CEntity.initDerivedAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Axis1 - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected Object a0;
	// Axis2 - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// LocalOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// Scale - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected double a3;
	// Scl - derived - java inheritance
	// protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// Dim - derived - java inheritance
	// protected static final jsdai.dictionary.CDerived_attribute d1$ = CEntity.initDerivedAttribute(definition, 1);
	// U - derived - java inheritance
	// protected static final jsdai.dictionary.CDerived_attribute d2$ = CEntity.initDerivedAttribute(definition, 2);
	// Scale2 - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// Scl2 - derived - current entity
	protected static final jsdai.dictionary.CDerived_attribute d3$ = CEntity.initDerivedAttribute(definition, 3);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3573=EXPLICIT_ATTRIBUTE('Axis1',#3571,0,#3948,$,.T.);
	//<01> generating methods for consolidated attribute:  Axis1
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Axis1, base type: entity IfcDirection
	public static int usedinAxis1(EIfccartesiantransformationoperator type, EIfcdirection instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	//going through all the attributes: #3574=EXPLICIT_ATTRIBUTE('Axis2',#3571,1,#3948,$,.T.);
	//<01> generating methods for consolidated attribute:  Axis2
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): Axis2, base type: entity IfcDirection
	public static int usedinAxis2(EIfccartesiantransformationoperator type, EIfcdirection instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #3575=EXPLICIT_ATTRIBUTE('LocalOrigin',#3571,2,#3562,$,.F.);
	//<01> generating methods for consolidated attribute:  LocalOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): LocalOrigin, base type: entity IfcCartesianPoint
	public static int usedinLocalorigin(EIfccartesiantransformationoperator type, EIfccartesianpoint instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #3576=EXPLICIT_ATTRIBUTE('Scale',#3571,3,#3,$,.T.);
	//<01> generating methods for consolidated attribute:  Scale
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3577=DERIVED_ATTRIBUTE('Scl',#3571,0,#3,$);
	//<01> generating methods for consolidated attribute:  Scl
	//<01-1> supertype, java inheritance
	//<01-1-1> derived
	//<01-1-1-2> NOT explicit-to-derived - generateDerivedSupertypeJavaInheritedMethodsX
	// methods for derived attribute: Scl, base type: REAL
	public boolean testScl(EIfccartesiantransformationoperator type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getScl(EIfccartesiantransformationoperator type, SdaiContext _context) throws SdaiException {



//###-01 jc.generated_java: Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, get(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeScale(null))), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0))
				return (Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, get(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeScale(null))), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0)));
	}
	public double getScl(EIfccartesiantransformationoperator type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
		return getScl((EIfccartesiantransformationoperator)null, _context).getDouble();
	}
	public static jsdai.dictionary.EAttribute attributeScl(EIfccartesiantransformationoperator type) throws SdaiException {
		return d0$;
	}

	//going through all the attributes: #3578=DERIVED_ATTRIBUTE('Dim',#3571,1,#2485,$);
	//<01> generating methods for consolidated attribute:  Dim
	//<01-1> supertype, java inheritance
	//<01-1-1> derived
	//<01-1-1-2> NOT explicit-to-derived - generateDerivedSupertypeJavaInheritedMethodsX
	// methods for derived attribute: Dim, base type: INTEGER
	public boolean testDim(EIfccartesiantransformationoperator type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getDim(EIfccartesiantransformationoperator type, SdaiContext _context) throws SdaiException {




//###-01 jc.generated_java: Value.alloc(jsdai.SIfc4.CIfccartesianpoint.definition).set(_context, get(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeLocalorigin(null))).getAttribute(jsdai.SIfc4.CIfccartesianpoint.attributeDim(null), _context)
				return (Value.alloc(jsdai.SIfc4.CIfccartesianpoint.definition).set(_context, get(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeLocalorigin(null))).getAttribute(jsdai.SIfc4.CIfccartesianpoint.attributeDim(null), _context));
	}
	public int getDim(EIfccartesiantransformationoperator type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return getDim((EIfccartesiantransformationoperator)null, _context).getInteger();
	}
	public static jsdai.dictionary.EAttribute attributeDim(EIfccartesiantransformationoperator type) throws SdaiException {
		return d1$;
	}

	//going through all the attributes: #3581=DERIVED_ATTRIBUTE('U',#3579,0,#6848,$);
	//<01> generating methods for consolidated attribute:  U
	//<01-1> supertype, java inheritance
	//<01-1-1> derived
	//<01-1-1-2> NOT explicit-to-derived - generateDerivedSupertypeJavaInheritedMethodsX
	// derived attribute: U, base type: entity IfcDirection
	public boolean testU(EIfccartesiantransformationoperator2d type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public AIfcdirection getU(EIfccartesiantransformationoperator2d type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return (AIfcdirection) getU((EIfccartesiantransformationoperator2d)null, _context).getInstanceAggregate(this);
	}
	public Value getU(EIfccartesiantransformationoperator2d type, SdaiContext _context) throws SdaiException {




//###-01 jc.generated_java: (new jsdai.SIfc4.FIfcbaseaxis()).run(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeAxis1(null), _context), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeAxis2(null), _context), Value.alloc(ExpressTypes.GENERIC_TYPE).unset())
				return ((new jsdai.SIfc4.FIfcbaseaxis()).run(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeAxis1(null), _context), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeAxis2(null), _context), Value.alloc(ExpressTypes.GENERIC_TYPE).unset()));
	}
	public static jsdai.dictionary.EAttribute attributeU(EIfccartesiantransformationoperator2d type) throws SdaiException {
		return d2$;
	}

	//going through all the attributes: #3584=EXPLICIT_ATTRIBUTE('Scale2',#3582,0,#3,$,.T.);
	//<01> generating methods for consolidated attribute:  Scale2
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Scale2, base type: REAL
	public boolean testScale2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		return test_double(a4);
	}
	public double getScale2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		return get_double(a4);
	}
	public void setScale2(EIfccartesiantransformationoperator2dnonuniform type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetScale2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeScale2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #3585=DERIVED_ATTRIBUTE('Scl2',#3582,0,#3,$);
	//<01> generating methods for consolidated attribute:  Scl2
	//<01-0> current entity
	//<01-0-1> derived attribute
	//<01-0-1-1> NOT explicit-to-derived - generateDerivedCurrentEntityMethodsX()
	// methods for derived attribute: Scl2, base type: REAL
	public boolean testScl2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getScl2(EIfccartesiantransformationoperator2dnonuniform type, SdaiContext _context) throws SdaiException {




//###-01 jc.generated_java: Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, get(a4$)), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeScl(null), _context))
				return (Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, get(a4$)), Value.alloc(jsdai.SIfc4.CIfccartesiantransformationoperator2dnonuniform.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfccartesiantransformationoperator.class).getAttribute(jsdai.SIfc4.CIfccartesiantransformationoperator.attributeScl(null), _context)));
	}
	public double getScl2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
		return getScl2((EIfccartesiantransformationoperator2dnonuniform)null, _context).getDouble();
	}
	public static jsdai.dictionary.EAttribute attributeScl2(EIfccartesiantransformationoperator2dnonuniform type) throws SdaiException {
		return d3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			a4 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[2].getDouble(0);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			a4 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[2].getDouble(0);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCartesianTransformationOperator
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstance(1, a1);
		av.entityValues[0].setInstance(2, a2);
		av.entityValues[0].setDouble(3, a3);
		// partial entity: IfcCartesianTransformationOperator2D
		// partial entity: IfcCartesianTransformationOperator2DnonUniform
		av.entityValues[2].setDouble(0, a4);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCartesianTransformationOperator
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstance(1, a1);
		av.entityValues[0].setInstance(2, a2);
		av.entityValues[0].setDouble(3, a3);
		// partial entity: IfcCartesianTransformationOperator2D
		// partial entity: IfcCartesianTransformationOperator2DnonUniform
		av.entityValues[2].setDouble(0, a4);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRepresentationItem
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfccartesiantransformationoperator2dnonuniformScale2greaterzero(SdaiContext _context) throws SdaiException {
	



		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, get(d3$)), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
}
