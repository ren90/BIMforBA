/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcCorrectObjectAssignment

package jsdai.SIfc4;
import jsdai.lang.*;


public class FIfccorrectobjectassignment {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Constraint;
	Value _nonvar__e_Objects;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_Count;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Constraint, Value _e_Objects) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Constraint = Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).set(_e_Constraint);
		_nonvar__e_Objects = Value.alloc(jsdai.SIfc4.SIfc4._st_generalset_1_ifcobjectdefinition).set(_e_Objects);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_Count = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0));
		// end of initialization of local variables





															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(_nonvar__e_Constraint)).getLogical() == 2) {															
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
															}


															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "NOTDEFINED")).getLogical() == 2) {																
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "PRODUCT")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source379 = _nonvar__e_Objects;
																		Value _result377 = Value.alloc(_internal_aggregate_source379).create();
																		if (_internal_aggregate_source379.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i378 = 1; _i378 <= _internal_aggregate_source379.getMemberCount(); _i378++) {
																				Value _implicit_86_temp = _internal_aggregate_source379.getByIndex(_i378);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCPRODUCT", "IFC4"), _implicit_86_temp.typeOfV(_context))).getLogical() == 2) {
																					_result377.addMember(_context, _implicit_86_temp);
																				} else
																				if (_internal_aggregate_source379.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_86_temp.unset();
																					_result377.addMember(_context, _implicit_86_temp);
																				}
																			}
																		} else {
																			_result377.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result377));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "PROCESS")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source383 = _nonvar__e_Objects;
																		Value _result381 = Value.alloc(_internal_aggregate_source383).create();
																		if (_internal_aggregate_source383.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i382 = 1; _i382 <= _internal_aggregate_source383.getMemberCount(); _i382++) {
																				Value _implicit_87_temp = _internal_aggregate_source383.getByIndex(_i382);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCPROCESS", "IFC4"), _implicit_87_temp.typeOfV(_context))).getLogical() == 2) {
																					_result381.addMember(_context, _implicit_87_temp);
																				} else
																				if (_internal_aggregate_source383.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_87_temp.unset();
																					_result381.addMember(_context, _implicit_87_temp);
																				}
																			}
																		} else {
																			_result381.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result381));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "CONTROL")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source387 = _nonvar__e_Objects;
																		Value _result385 = Value.alloc(_internal_aggregate_source387).create();
																		if (_internal_aggregate_source387.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i386 = 1; _i386 <= _internal_aggregate_source387.getMemberCount(); _i386++) {
																				Value _implicit_88_temp = _internal_aggregate_source387.getByIndex(_i386);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCCONTROL", "IFC4"), _implicit_88_temp.typeOfV(_context))).getLogical() == 2) {
																					_result385.addMember(_context, _implicit_88_temp);
																				} else
																				if (_internal_aggregate_source387.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_88_temp.unset();
																					_result385.addMember(_context, _implicit_88_temp);
																				}
																			}
																		} else {
																			_result385.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result385));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "RESOURCE")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source391 = _nonvar__e_Objects;
																		Value _result389 = Value.alloc(_internal_aggregate_source391).create();
																		if (_internal_aggregate_source391.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i390 = 1; _i390 <= _internal_aggregate_source391.getMemberCount(); _i390++) {
																				Value _implicit_89_temp = _internal_aggregate_source391.getByIndex(_i390);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCRESOURCE", "IFC4"), _implicit_89_temp.typeOfV(_context))).getLogical() == 2) {
																					_result389.addMember(_context, _implicit_89_temp);
																				} else
																				if (_internal_aggregate_source391.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_89_temp.unset();
																					_result389.addMember(_context, _implicit_89_temp);
																				}
																			}
																		} else {
																			_result389.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result389));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "ACTOR")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source395 = _nonvar__e_Objects;
																		Value _result393 = Value.alloc(_internal_aggregate_source395).create();
																		if (_internal_aggregate_source395.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i394 = 1; _i394 <= _internal_aggregate_source395.getMemberCount(); _i394++) {
																				Value _implicit_90_temp = _internal_aggregate_source395.getByIndex(_i394);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCACTOR", "IFC4"), _implicit_90_temp.typeOfV(_context))).getLogical() == 2) {
																					_result393.addMember(_context, _implicit_90_temp);
																				} else
																				if (_internal_aggregate_source395.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_90_temp.unset();
																					_result393.addMember(_context, _implicit_90_temp);
																				}
																			}
																		} else {
																			_result393.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result393));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "GROUP")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source399 = _nonvar__e_Objects;
																		Value _result397 = Value.alloc(_internal_aggregate_source399).create();
																		if (_internal_aggregate_source399.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i398 = 1; _i398 <= _internal_aggregate_source399.getMemberCount(); _i398++) {
																				Value _implicit_91_temp = _internal_aggregate_source399.getByIndex(_i398);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCGROUP", "IFC4"), _implicit_91_temp.typeOfV(_context))).getLogical() == 2) {
																					_result397.addMember(_context, _implicit_91_temp);
																				} else
																				if (_internal_aggregate_source399.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_91_temp.unset();
																					_result397.addMember(_context, _implicit_91_temp);
																				}
																			}
																		} else {
																			_result397.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result397));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else
															if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Constraint,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcObjectTypeEnum).setEnum(_context, "PROJECT")).getLogical() == 2) {																
																	{ // BEGIN
																		
																		Value _internal_aggregate_source403 = _nonvar__e_Objects;
																		Value _result401 = Value.alloc(_internal_aggregate_source403).create();
																		if (_internal_aggregate_source403.getActualJavaType() != Value.INDETERMINATE) {
																			for (int _i402 = 1; _i402 <= _internal_aggregate_source403.getMemberCount(); _i402++) {
																				Value _implicit_92_temp = _internal_aggregate_source403.getByIndex(_i402);
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "*.IFCPROJECT", "IFC4"), _implicit_92_temp.typeOfV(_context))).getLogical() == 2) {
																					_result401.addMember(_context, _implicit_92_temp);
																				} else
																				if (_internal_aggregate_source403.getDeclaredType() instanceof jsdai.dictionary.EArray_type) {
																					_implicit_92_temp.unset();
																					_result401.addMember(_context, _implicit_92_temp);
																				}
																			}
																		} else {
																			_result401.unset();
																		}
																		_e_Count.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_result401));
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _e_Count, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).check(_context, ExpressTypes.LOGICAL_TYPE);
																	} // END
															} else {																
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, ExpressTypes.LOGICAL_TYPE);
															}


		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
