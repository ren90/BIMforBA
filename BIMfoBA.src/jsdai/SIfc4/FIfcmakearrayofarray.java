/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcMakeArrayOfArray

package jsdai.SIfc4;
import jsdai.lang.*;


public class FIfcmakearrayofarray {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Lis;
	Value _nonvar__e_Low1;
	Value _nonvar__e_U1;
	Value _nonvar__e_Low2;
	Value _nonvar__e_U2;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_Res;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Lis, Value _e_Low1, Value _e_U1, Value _e_Low2, Value _e_U2) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Lis = Value.alloc(jsdai.SIfc4.SIfc4._st_generallist_1_generallist_1_generic).set(_e_Lis);
		_nonvar__e_Low1 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_Low1);
		_nonvar__e_U1 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_U1);
		_nonvar__e_Low2 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_Low2);
		_nonvar__e_U2 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_e_U2);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_Res = Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb19_2pdb20_generalarray_1pdb21_2pdb22_generic);
		// end of initialization of local variables





																											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc().addOrUnionOrConcatenate(_context, Value.alloc().substractOrDifference(_context, _nonvar__e_U1, _nonvar__e_Low1), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_Lis)).getLogical() == 2) {																											
		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic);
																											}



																											if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc().addOrUnionOrConcatenate(_context, Value.alloc().substractOrDifference(_context, _nonvar__e_U2, _nonvar__e_Low2), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_Lis.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), null))).getLogical() == 2) {																											
		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic);
																											}


																											Value _elements430 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																											for (int _index430_0 = 0; _index430_0 < Value.alloc().addOrUnionOrConcatenate(_context, Value.alloc().substractOrDifference(_context, _nonvar__e_U1, _nonvar__e_Low1), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).getInteger(); _index430_0++)
																												_elements430.addMember(_context, (new jsdai.SIfc4.FIfclisttoarray()).run(_context, _nonvar__e_Lis.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), null), _nonvar__e_Low2, _nonvar__e_U2));

																											_e_Res.set(_context, _elements430);


																											Value _end431 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(Value.alloc(ExpressTypes.INTEGER_TYPE).hiIndex(_nonvar__e_Lis));
																											Value _step431 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																											for (Value _implicit_104_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_104_i, _end431).getLogical() == 2;_implicit_104_i.inc(_step431)) {																											
																												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc().addOrUnionOrConcatenate(_context, Value.alloc().substractOrDifference(_context, _nonvar__e_U2, _nonvar__e_Low2), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_Lis.indexing(_implicit_104_i, null))).getLogical() == 2) {																												
		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic);
																												}																													
																												_e_Res.indexing(Value.alloc().substractOrDifference(_context, Value.alloc().addOrUnionOrConcatenate(_context, _nonvar__e_Low1, _implicit_104_i), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), null).set(_context, (new jsdai.SIfc4.FIfclisttoarray()).run(_context, _nonvar__e_Lis.indexing(_implicit_104_i, null), _nonvar__e_Low2, _nonvar__e_U2));
																											} // for - REPEAT




		if (true) return Value.alloc(jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic).set(_context, _e_Res).check(_context, jsdai.SIfc4.SIfc4._st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
