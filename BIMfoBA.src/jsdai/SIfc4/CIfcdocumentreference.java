/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcDocumentReference

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcdocumentreference extends CIfcexternalreference implements EIfcdocumentreference {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcdocumentreference.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Location: protected String a0;   Location - java inheritance - STRING
	// Identification: protected String a1;   Identification - java inheritance - STRING
	// Name: protected String a2;   Name - java inheritance - STRING
	// ExternalReferenceForResources: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	protected String a3; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Object a4; // ReferencedDocument - current entity - ENTITY IfcDocumentInformation
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// DocumentRefForObjects: protected Object  - inverse - current -  ENTITY IfcRelAssociatesDocument
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Location - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// Identification - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// ExternalReferenceForResources - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// ReferencedDocument - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	// DocumentRefForObjects - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4227=EXPLICIT_ATTRIBUTE('Location',#4225,0,#2687,$,.T.);
	//<01> generating methods for consolidated attribute:  Location
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4228=EXPLICIT_ATTRIBUTE('Identification',#4225,1,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Identification
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4229=EXPLICIT_ATTRIBUTE('Name',#4225,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4230=INVERSE_ATTRIBUTE('ExternalReferenceForResources',#4225,0,#4231,$,#4233,#8311,$,.F.);
	//<01> generating methods for consolidated attribute:  ExternalReferenceForResources
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4020=EXPLICIT_ATTRIBUTE('Description',#4018,0,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcdocumentreference type) throws SdaiException {
		return test_string(a3);
	}
	public String getDescription(EIfcdocumentreference type) throws SdaiException {
		return get_string(a3);
	}
	public void setDescription(EIfcdocumentreference type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetDescription(EIfcdocumentreference type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcdocumentreference type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4021=EXPLICIT_ATTRIBUTE('ReferencedDocument',#4018,1,#3990,$,.T.);
	//<01> generating methods for consolidated attribute:  ReferencedDocument
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ReferencedDocument, base type: entity IfcDocumentInformation
	public static int usedinReferenceddocument(EIfcdocumentreference type, EIfcdocumentinformation instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testReferenceddocument(EIfcdocumentreference type) throws SdaiException {
		return test_instance(a4);
	}
	public EIfcdocumentinformation getReferenceddocument(EIfcdocumentreference type) throws SdaiException {
		return (EIfcdocumentinformation)get_instance(a4);
	}
	public void setReferenceddocument(EIfcdocumentreference type, EIfcdocumentinformation value) throws SdaiException {
		a4 = set_instance(a4, value);
	}
	public void unsetReferenceddocument(EIfcdocumentreference type) throws SdaiException {
		a4 = unset_instance(a4);
	}
	public static jsdai.dictionary.EAttribute attributeReferenceddocument(EIfcdocumentreference type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4022=INVERSE_ATTRIBUTE('DocumentRefForObjects',#4018,0,#5388,$,#5390,#8143,$,.F.);
	//<01> generating methods for consolidated attribute:  DocumentRefForObjects
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - DocumentRefForObjects : SET[0:-2147483648] OF IfcRelAssociatesDocument FOR RelatingDocument
	public AIfcrelassociatesdocument getDocumentrefforobjects(EIfcdocumentreference type, ASdaiModel domain) throws SdaiException {
		AIfcrelassociatesdocument result = (AIfcrelassociatesdocument)get_inverse_aggregate(i1$);
		CIfcrelassociatesdocument.usedinRelatingdocument(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeDocumentrefforobjects(EIfcdocumentreference type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = unset_instance(a4);
			a0 = null;
			a1 = null;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getInstance(1, this, a4$);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getString(2);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = unset_instance(a4);
			a0 = null;
			a1 = null;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getInstance(1, this, a4$);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getString(2);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcDocumentReference
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setInstance(1, a4);
		// partial entity: IfcExternalReference
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setString(2, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcDocumentReference
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setInstance(1, a4);
		// partial entity: IfcExternalReference
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setString(2, a2);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcdocumentreferenceWr1(SdaiContext _context) throws SdaiException {
	




		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).XOR(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.SIfc4._st_IfcLabel).set(_context, get(jsdai.SIfc4.CIfcexternalreference.attributeName(null)))), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.CIfcdocumentinformation.definition).set(_context, get(a4$))))).getLogical());
	}
}
