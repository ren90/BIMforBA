/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcConnectionCurveGeometry

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcconnectioncurvegeometry extends CIfcconnectiongeometry implements EIfcconnectioncurvegeometry {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcconnectioncurvegeometry.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected Object a0; // CurveOnRelatingElement - current entity - SELECT IfcCurveOrEdgeCurve
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a1; // CurveOnRelatedElement - current entity - SELECT IfcCurveOrEdgeCurve
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// CurveOnRelatingElement - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	// CurveOnRelatedElement - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a1;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
		if (a1 == old) {
			a1 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
		if (a1 == old) {
			a1 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3724=EXPLICIT_ATTRIBUTE('CurveOnRelatingElement',#3722,0,#3137,$,.F.);
	//<01> generating methods for consolidated attribute:  CurveOnRelatingElement
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: CurveOnRelatingElement
	public static int usedinCurveonrelatingelement(EIfcconnectioncurvegeometry type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testCurveonrelatingelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		return test_instance(a0);
	}

	public EEntity getCurveonrelatingelement(EIfcconnectioncurvegeometry type) throws SdaiException { // case 1
		return get_instance_select(a0);
	}

	public void setCurveonrelatingelement(EIfcconnectioncurvegeometry type, EEntity value) throws SdaiException { // case 1
		a0 = set_instance(a0, value);
	}

	public void unsetCurveonrelatingelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		a0 = unset_instance(a0);
	}

	public static jsdai.dictionary.EAttribute attributeCurveonrelatingelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3725=EXPLICIT_ATTRIBUTE('CurveOnRelatedElement',#3722,1,#3137,$,.T.);
	//<01> generating methods for consolidated attribute:  CurveOnRelatedElement
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: CurveOnRelatedElement
	public static int usedinCurveonrelatedelement(EIfcconnectioncurvegeometry type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	public boolean testCurveonrelatedelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		return test_instance(a1);
	}

	public EEntity getCurveonrelatedelement(EIfcconnectioncurvegeometry type) throws SdaiException { // case 1
		return get_instance_select(a1);
	}

	public void setCurveonrelatedelement(EIfcconnectioncurvegeometry type, EEntity value) throws SdaiException { // case 1
		a1 = set_instance(a1, value);
	}

	public void unsetCurveonrelatedelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		a1 = unset_instance(a1);
	}

	public static jsdai.dictionary.EAttribute attributeCurveonrelatedelement(EIfcconnectioncurvegeometry type) throws SdaiException {
		return a1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = unset_instance(a1);
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = unset_instance(a1);
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getInstance(1, this, a1$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcConnectionCurveGeometry
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstance(1, a1);
		// partial entity: IfcConnectionGeometry
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcConnectionCurveGeometry
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstance(1, a1);
		// partial entity: IfcConnectionGeometry
	}
}
