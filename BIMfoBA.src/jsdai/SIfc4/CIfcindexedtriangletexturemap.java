/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcIndexedTriangleTextureMap

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcindexedtriangletexturemap extends CIfcindexedtexturemap implements EIfcindexedtriangletexturemap {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcindexedtriangletexturemap.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Maps: protected AIfcsurfacetexture a0;   Maps - java inheritance - LIST OF ENTITY
	// MappedTo: protected Object a1;   MappedTo - java inheritance - ENTITY IfcTessellatedFaceSet
	// TexCoords: protected Object a2;   TexCoords - java inheritance - ENTITY IfcTextureVertexList
	protected Aa_integer a3; // TexCoordIndex - current entity - LIST OF LIST OF INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Maps - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected AIfcsurfacetexture a0;
	// MappedTo - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// TexCoords - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// TexCoordIndex - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Aa_integer a3;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #6197=EXPLICIT_ATTRIBUTE('Maps',#6195,0,#7179,$,.F.);
	//<01> generating methods for consolidated attribute:  Maps
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: Maps, base type: LIST OF ENTITY
	public static int usedinMaps(EIfctexturecoordinate type, EIfcsurfacetexture instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	//going through all the attributes: #4487=EXPLICIT_ATTRIBUTE('MappedTo',#4485,0,#6151,$,.F.);
	//<01> generating methods for consolidated attribute:  MappedTo
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): MappedTo, base type: entity IfcTessellatedFaceSet
	public static int usedinMappedto(EIfcindexedtexturemap type, EIfctessellatedfaceset instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #4488=EXPLICIT_ATTRIBUTE('TexCoords',#4485,1,#6209,$,.F.);
	//<01> generating methods for consolidated attribute:  TexCoords
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): TexCoords, base type: entity IfcTextureVertexList
	public static int usedinTexcoords(EIfcindexedtexturemap type, EIfctexturevertexlist instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #4491=EXPLICIT_ATTRIBUTE('TexCoordIndex',#4489,0,#6943,$,.T.);
	//<01> generating methods for consolidated attribute:  TexCoordIndex
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: TexCoordIndex, base type: LIST OF LIST OF INTEGER
	public boolean testTexcoordindex(EIfcindexedtriangletexturemap type) throws SdaiException {
		return test_aggregate(a3);
	}
	public Aa_integer getTexcoordindex(EIfcindexedtriangletexturemap type) throws SdaiException {
		return (Aa_integer)get_aggregate(a3);
	}
	public Aa_integer createTexcoordindex(EIfcindexedtriangletexturemap type) throws SdaiException {
		a3 = create_aggregate2_integer(a3, a3$, 0);
		return a3;
	}
	public void unsetTexcoordindex(EIfcindexedtriangletexturemap type) throws SdaiException {
		unset_aggregate(a3);
		a3 = null;
	}
	public static jsdai.dictionary.EAttribute attributeTexcoordindex(EIfcindexedtriangletexturemap type) throws SdaiException {
		return a3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			return;
		}
		a1 = av.entityValues[0].getInstance(0, this, a1$);
		a2 = av.entityValues[0].getInstance(1, this, a2$);
		a3 = av.entityValues[1].getInteger2Aggregate(0, a3$, this);
		a0 = (AIfcsurfacetexture)av.entityValues[3].getInstanceAggregate(0, a0$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a1 = unset_instance(a1);
			a2 = unset_instance(a2);
			if (a0 instanceof CAggregate)
				a0.unsetAll();
			a0 = null;
			return;
		}
		a1 = av.entityValues[0].getInstance(0, this, a1$);
		a2 = av.entityValues[0].getInstance(1, this, a2$);
		a3 = av.entityValues[1].getInteger2Aggregate(0, a3$, this);
		a0 = (AIfcsurfacetexture)av.entityValues[3].getInstanceAggregate(0, a0$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcIndexedTextureMap
		av.entityValues[0].setInstance(0, a1);
		av.entityValues[0].setInstance(1, a2);
		// partial entity: IfcIndexedTriangleTextureMap
		av.entityValues[1].setInteger2Aggregate(0, a3);
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextureCoordinate
		av.entityValues[3].setInstanceAggregate(0, a0);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcIndexedTextureMap
		av.entityValues[0].setInstance(0, a1);
		av.entityValues[0].setInstance(1, a2);
		// partial entity: IfcIndexedTriangleTextureMap
		av.entityValues[1].setInteger2Aggregate(0, a3);
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextureCoordinate
		av.entityValues[3].setInstanceAggregate(0, a0);
	}
}
