/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRelCoversBldgElements

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrelcoversbldgelements extends CIfcrelconnects implements EIfcrelcoversbldgelements {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrelcoversbldgelements.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	protected Object a4; // RelatingBuildingElement - current entity - ENTITY IfcElement
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected AIfccovering a5; // RelatedCoverings - current entity - SET OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// RelatingBuildingElement - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	// RelatedCoverings - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected AIfccovering a5;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
		changeReferencesAggregate(a5, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
		changeReferencesAggregate(a5, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5444=EXPLICIT_ATTRIBUTE('RelatingBuildingElement',#5442,0,#4136,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatingBuildingElement
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : RelatingBuildingElement, base type: entity IfcElement
	public static int usedinRelatingbuildingelement(EIfcrelcoversbldgelements type, EIfcelement instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testRelatingbuildingelement(EIfcrelcoversbldgelements type) throws SdaiException {
		return test_instance(a4);
	}
	public EIfcelement getRelatingbuildingelement(EIfcrelcoversbldgelements type) throws SdaiException {
		return (EIfcelement)get_instance(a4);
	}
	public void setRelatingbuildingelement(EIfcrelcoversbldgelements type, EIfcelement value) throws SdaiException {
		a4 = set_instance(a4, value);
	}
	public void unsetRelatingbuildingelement(EIfcrelcoversbldgelements type) throws SdaiException {
		a4 = unset_instance(a4);
	}
	public static jsdai.dictionary.EAttribute attributeRelatingbuildingelement(EIfcrelcoversbldgelements type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5445=EXPLICIT_ATTRIBUTE('RelatedCoverings',#5442,1,#7092,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatedCoverings
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: RelatedCoverings, base type: SET OF ENTITY
	public static int usedinRelatedcoverings(EIfcrelcoversbldgelements type, EIfccovering instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a5$, domain, result);
	}
	public boolean testRelatedcoverings(EIfcrelcoversbldgelements type) throws SdaiException {
		return test_aggregate(a5);
	}
	public AIfccovering getRelatedcoverings(EIfcrelcoversbldgelements type) throws SdaiException {
		return (AIfccovering)get_aggregate(a5);
	}
	public AIfccovering createRelatedcoverings(EIfcrelcoversbldgelements type) throws SdaiException {
		a5 = (AIfccovering)create_aggregate_class(a5, a5$,  AIfccovering.class, 0);
		return a5;
	}
	public void unsetRelatedcoverings(EIfcrelcoversbldgelements type) throws SdaiException {
		unset_aggregate(a5);
		a5 = null;
	}
	public static jsdai.dictionary.EAttribute attributeRelatedcoverings(EIfcrelcoversbldgelements type) throws SdaiException {
		return a5$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			if (a5 instanceof CAggregate)
				a5.unsetAll();
			a5 = null;
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = (AIfccovering)av.entityValues[2].getInstanceAggregate(1, a5$, this);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			if (a5 instanceof CAggregate)
				a5.unsetAll();
			a5 = null;
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = (AIfccovering)av.entityValues[2].getInstanceAggregate(1, a5$, this);
		a0 = av.entityValues[3].getString(0);
		a1 = av.entityValues[3].getInstance(1, this, a1$);
		a2 = av.entityValues[3].getString(2);
		a3 = av.entityValues[3].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelCoversBldgElements
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstanceAggregate(1, a5);
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelCoversBldgElements
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstanceAggregate(1, a5);
		// partial entity: IfcRoot
		av.entityValues[3].setString(0, a0);
		av.entityValues[3].setInstance(1, a1);
		av.entityValues[3].setString(2, a2);
		av.entityValues[3].setString(3, a3);
	}
}
