/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialProperties

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmaterialproperties extends CIfcextendedproperties implements EIfcmaterialproperties {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmaterialproperties.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// HasExternalReferences: protected Object  - inverse - java inheritance -  ENTITY IfcExternalReferenceRelationship
	// Name: protected String a0;   Name - java inheritance - STRING
	// Description: protected String a1;   Description - java inheritance - STRING
	// Properties: protected AIfcproperty a2;   Properties - java inheritance - SET OF ENTITY
	protected Object a3; // Material - current entity - ENTITY IfcMaterialDefinition
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// HasExternalReferences - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected String a1;
	// Properties - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected AIfcproperty a2;
	// Material - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Object a3;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a3 == old) {
			a3 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a3 == old) {
			a3 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5104=INVERSE_ATTRIBUTE('HasExternalReferences',#5102,0,#4231,$,#4234,#8918,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4220=EXPLICIT_ATTRIBUTE('Name',#4218,0,#2523,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4221=EXPLICIT_ATTRIBUTE('Description',#4218,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4222=EXPLICIT_ATTRIBUTE('Properties',#4218,2,#6915,$,.F.);
	//<01> generating methods for consolidated attribute:  Properties
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// methods for attribute: Properties, base type: SET OF ENTITY
	public static int usedinProperties(EIfcextendedproperties type, EIfcproperty instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #4723=EXPLICIT_ATTRIBUTE('Material',#4721,0,#4656,$,.F.);
	//<01> generating methods for consolidated attribute:  Material
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Material, base type: entity IfcMaterialDefinition
	public static int usedinMaterial(EIfcmaterialproperties type, EIfcmaterialdefinition instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a3$, domain, result);
	}
	public boolean testMaterial(EIfcmaterialproperties type) throws SdaiException {
		return test_instance(a3);
	}
	public EIfcmaterialdefinition getMaterial(EIfcmaterialproperties type) throws SdaiException {
		return (EIfcmaterialdefinition)get_instance(a3);
	}
	public void setMaterial(EIfcmaterialproperties type, EIfcmaterialdefinition value) throws SdaiException {
		a3 = set_instance(a3, value);
	}
	public void unsetMaterial(EIfcmaterialproperties type) throws SdaiException {
		a3 = unset_instance(a3);
	}
	public static jsdai.dictionary.EAttribute attributeMaterial(EIfcmaterialproperties type) throws SdaiException {
		return a3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			a3 = unset_instance(a3);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = (AIfcproperty)av.entityValues[0].getInstanceAggregate(2, a2$, this);
		a3 = av.entityValues[1].getInstance(0, this, a3$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			if (a2 instanceof CAggregate)
				a2.unsetAll();
			a2 = null;
			a3 = unset_instance(a3);
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = (AIfcproperty)av.entityValues[0].getInstanceAggregate(2, a2$, this);
		a3 = av.entityValues[1].getInstance(0, this, a3$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExtendedProperties
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstanceAggregate(2, a2);
		// partial entity: IfcMaterialProperties
		av.entityValues[1].setInstance(0, a3);
		// partial entity: IfcPropertyAbstraction
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExtendedProperties
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setInstanceAggregate(2, a2);
		// partial entity: IfcMaterialProperties
		av.entityValues[1].setInstance(0, a3);
		// partial entity: IfcPropertyAbstraction
	}
}
