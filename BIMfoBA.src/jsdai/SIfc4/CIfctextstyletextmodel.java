/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcTextStyleTextModel

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfctextstyletextmodel extends CIfcpresentationitem implements EIfctextstyletextmodel {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfctextstyletextmodel.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected Object a0; // TextIndent - current entity - SELECT IfcSizeSelect
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0$$; // current SELECT path indicator
	protected String a1; // TextAlign - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // TextDecoration - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected Object a3; // LetterSpacing - current entity - SELECT IfcSizeSelect
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a3$$; // current SELECT path indicator
	protected Object a4; // WordSpacing - current entity - SELECT IfcSizeSelect
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a4$$; // current SELECT path indicator
	protected String a5; // TextTransform - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected Object a6; // LineHeight - current entity - SELECT IfcSizeSelect
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected int a6$$; // current SELECT path indicator
*/

	/*----------------------------- Attributes (new version) -----------*/

	// TextIndent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	protected int a0$$;
	// TextAlign - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// TextDecoration - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// LetterSpacing - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Object a3;
	protected int a3$$;
	// WordSpacing - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	protected int a4$$;
	// TextTransform - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// LineHeight - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected Object a6;
	protected int a6$$;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #6188=EXPLICIT_ATTRIBUTE('TextIndent',#6186,0,#3197,$,.T.);
	//<01> generating methods for consolidated attribute:  TextIndent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: TextIndent
	public int testTextindent(EIfctextstyletextmodel type) throws SdaiException {
		return test_select(a0, a0$$);
	}

	public String getTextindent(EIfctextstyletextmodel type, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		return get_string_select(a0, a0$$, 2);
	}
	public double getTextindent(EIfctextstyletextmodel type, EIfclengthmeasure node1) throws SdaiException { // case 3
		return get_double_select(a0, a0$$, 3);
	}
	public double getTextindent(EIfctextstyletextmodel type, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		return get_double_select(a0, a0$$, 4);
	}
	public double getTextindent(EIfctextstyletextmodel type, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		return get_double_select(a0, a0$$, 5);
	}
	public double getTextindent(EIfctextstyletextmodel type, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		return get_double_select(a0, a0$$, 6);
	}
	public double getTextindent(EIfctextstyletextmodel type, EIfcratiomeasure node1) throws SdaiException { // case 7
		return get_double_select(a0, a0$$, 7);
	}

	public void setTextindent(EIfctextstyletextmodel type, String value, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		a0 = set_string(value);
		a0$$ = 2;
	}
	public void setTextindent(EIfctextstyletextmodel type, double value, EIfclengthmeasure node1) throws SdaiException { // case 3
		a0 = set_double_select(value);
		a0$$ = 3;
	}
	public void setTextindent(EIfctextstyletextmodel type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		a0 = set_double_select(value);
		a0$$ = 4;
	}
	public void setTextindent(EIfctextstyletextmodel type, double value, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		a0 = set_double_select(value);
		a0$$ = 5;
	}
	public void setTextindent(EIfctextstyletextmodel type, double value, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		a0 = set_double_select(value);
		a0$$ = 6;
	}
	public void setTextindent(EIfctextstyletextmodel type, double value, EIfcratiomeasure node1) throws SdaiException { // case 7
		a0 = set_double_select(value);
		a0$$ = 7;
	}

	public void unsetTextindent(EIfctextstyletextmodel type) throws SdaiException {
		a0 = unset_select(a0);
		a0$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeTextindent(EIfctextstyletextmodel type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #6189=EXPLICIT_ATTRIBUTE('TextAlign',#6186,1,#2659,$,.T.);
	//<01> generating methods for consolidated attribute:  TextAlign
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TextAlign, base type: STRING
	public boolean testTextalign(EIfctextstyletextmodel type) throws SdaiException {
		return test_string(a1);
	}
	public String getTextalign(EIfctextstyletextmodel type) throws SdaiException {
		return get_string(a1);
	}
	public void setTextalign(EIfctextstyletextmodel type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetTextalign(EIfctextstyletextmodel type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeTextalign(EIfctextstyletextmodel type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #6190=EXPLICIT_ATTRIBUTE('TextDecoration',#6186,2,#2661,$,.T.);
	//<01> generating methods for consolidated attribute:  TextDecoration
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TextDecoration, base type: STRING
	public boolean testTextdecoration(EIfctextstyletextmodel type) throws SdaiException {
		return test_string(a2);
	}
	public String getTextdecoration(EIfctextstyletextmodel type) throws SdaiException {
		return get_string(a2);
	}
	public void setTextdecoration(EIfctextstyletextmodel type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetTextdecoration(EIfctextstyletextmodel type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeTextdecoration(EIfctextstyletextmodel type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #6191=EXPLICIT_ATTRIBUTE('LetterSpacing',#6186,3,#3197,$,.T.);
	//<01> generating methods for consolidated attribute:  LetterSpacing
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: LetterSpacing
	public int testLetterspacing(EIfctextstyletextmodel type) throws SdaiException {
		return test_select(a3, a3$$);
	}

	public String getLetterspacing(EIfctextstyletextmodel type, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		return get_string_select(a3, a3$$, 2);
	}
	public double getLetterspacing(EIfctextstyletextmodel type, EIfclengthmeasure node1) throws SdaiException { // case 3
		return get_double_select(a3, a3$$, 3);
	}
	public double getLetterspacing(EIfctextstyletextmodel type, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		return get_double_select(a3, a3$$, 4);
	}
	public double getLetterspacing(EIfctextstyletextmodel type, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		return get_double_select(a3, a3$$, 5);
	}
	public double getLetterspacing(EIfctextstyletextmodel type, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		return get_double_select(a3, a3$$, 6);
	}
	public double getLetterspacing(EIfctextstyletextmodel type, EIfcratiomeasure node1) throws SdaiException { // case 7
		return get_double_select(a3, a3$$, 7);
	}

	public void setLetterspacing(EIfctextstyletextmodel type, String value, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		a3 = set_string(value);
		a3$$ = 2;
	}
	public void setLetterspacing(EIfctextstyletextmodel type, double value, EIfclengthmeasure node1) throws SdaiException { // case 3
		a3 = set_double_select(value);
		a3$$ = 3;
	}
	public void setLetterspacing(EIfctextstyletextmodel type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		a3 = set_double_select(value);
		a3$$ = 4;
	}
	public void setLetterspacing(EIfctextstyletextmodel type, double value, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		a3 = set_double_select(value);
		a3$$ = 5;
	}
	public void setLetterspacing(EIfctextstyletextmodel type, double value, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		a3 = set_double_select(value);
		a3$$ = 6;
	}
	public void setLetterspacing(EIfctextstyletextmodel type, double value, EIfcratiomeasure node1) throws SdaiException { // case 7
		a3 = set_double_select(value);
		a3$$ = 7;
	}

	public void unsetLetterspacing(EIfctextstyletextmodel type) throws SdaiException {
		a3 = unset_select(a3);
		a3$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeLetterspacing(EIfctextstyletextmodel type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #6192=EXPLICIT_ATTRIBUTE('WordSpacing',#6186,4,#3197,$,.T.);
	//<01> generating methods for consolidated attribute:  WordSpacing
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: WordSpacing
	public int testWordspacing(EIfctextstyletextmodel type) throws SdaiException {
		return test_select(a4, a4$$);
	}

	public String getWordspacing(EIfctextstyletextmodel type, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		return get_string_select(a4, a4$$, 2);
	}
	public double getWordspacing(EIfctextstyletextmodel type, EIfclengthmeasure node1) throws SdaiException { // case 3
		return get_double_select(a4, a4$$, 3);
	}
	public double getWordspacing(EIfctextstyletextmodel type, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		return get_double_select(a4, a4$$, 4);
	}
	public double getWordspacing(EIfctextstyletextmodel type, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		return get_double_select(a4, a4$$, 5);
	}
	public double getWordspacing(EIfctextstyletextmodel type, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		return get_double_select(a4, a4$$, 6);
	}
	public double getWordspacing(EIfctextstyletextmodel type, EIfcratiomeasure node1) throws SdaiException { // case 7
		return get_double_select(a4, a4$$, 7);
	}

	public void setWordspacing(EIfctextstyletextmodel type, String value, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		a4 = set_string(value);
		a4$$ = 2;
	}
	public void setWordspacing(EIfctextstyletextmodel type, double value, EIfclengthmeasure node1) throws SdaiException { // case 3
		a4 = set_double_select(value);
		a4$$ = 3;
	}
	public void setWordspacing(EIfctextstyletextmodel type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		a4 = set_double_select(value);
		a4$$ = 4;
	}
	public void setWordspacing(EIfctextstyletextmodel type, double value, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		a4 = set_double_select(value);
		a4$$ = 5;
	}
	public void setWordspacing(EIfctextstyletextmodel type, double value, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		a4 = set_double_select(value);
		a4$$ = 6;
	}
	public void setWordspacing(EIfctextstyletextmodel type, double value, EIfcratiomeasure node1) throws SdaiException { // case 7
		a4 = set_double_select(value);
		a4$$ = 7;
	}

	public void unsetWordspacing(EIfctextstyletextmodel type) throws SdaiException {
		a4 = unset_select(a4);
		a4$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeWordspacing(EIfctextstyletextmodel type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #6193=EXPLICIT_ATTRIBUTE('TextTransform',#6186,5,#2665,$,.T.);
	//<01> generating methods for consolidated attribute:  TextTransform
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TextTransform, base type: STRING
	public boolean testTexttransform(EIfctextstyletextmodel type) throws SdaiException {
		return test_string(a5);
	}
	public String getTexttransform(EIfctextstyletextmodel type) throws SdaiException {
		return get_string(a5);
	}
	public void setTexttransform(EIfctextstyletextmodel type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetTexttransform(EIfctextstyletextmodel type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeTexttransform(EIfctextstyletextmodel type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #6194=EXPLICIT_ATTRIBUTE('LineHeight',#6186,6,#3197,$,.T.);
	//<01> generating methods for consolidated attribute:  LineHeight
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: LineHeight
	public int testLineheight(EIfctextstyletextmodel type) throws SdaiException {
		return test_select(a6, a6$$);
	}

	public String getLineheight(EIfctextstyletextmodel type, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		return get_string_select(a6, a6$$, 2);
	}
	public double getLineheight(EIfctextstyletextmodel type, EIfclengthmeasure node1) throws SdaiException { // case 3
		return get_double_select(a6, a6$$, 3);
	}
	public double getLineheight(EIfctextstyletextmodel type, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		return get_double_select(a6, a6$$, 4);
	}
	public double getLineheight(EIfctextstyletextmodel type, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		return get_double_select(a6, a6$$, 5);
	}
	public double getLineheight(EIfctextstyletextmodel type, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		return get_double_select(a6, a6$$, 6);
	}
	public double getLineheight(EIfctextstyletextmodel type, EIfcratiomeasure node1) throws SdaiException { // case 7
		return get_double_select(a6, a6$$, 7);
	}

	public void setLineheight(EIfctextstyletextmodel type, String value, EIfcdescriptivemeasure node1) throws SdaiException { // case 2
		a6 = set_string(value);
		a6$$ = 2;
	}
	public void setLineheight(EIfctextstyletextmodel type, double value, EIfclengthmeasure node1) throws SdaiException { // case 3
		a6 = set_double_select(value);
		a6$$ = 3;
	}
	public void setLineheight(EIfctextstyletextmodel type, double value, EIfcnormalisedratiomeasure node1) throws SdaiException { // case 4
		a6 = set_double_select(value);
		a6$$ = 4;
	}
	public void setLineheight(EIfctextstyletextmodel type, double value, EIfcpositivelengthmeasure node1) throws SdaiException { // case 5
		a6 = set_double_select(value);
		a6$$ = 5;
	}
	public void setLineheight(EIfctextstyletextmodel type, double value, EIfcpositiveratiomeasure node1) throws SdaiException { // case 6
		a6 = set_double_select(value);
		a6$$ = 6;
	}
	public void setLineheight(EIfctextstyletextmodel type, double value, EIfcratiomeasure node1) throws SdaiException { // case 7
		a6 = set_double_select(value);
		a6$$ = 7;
	}

	public void unsetLineheight(EIfctextstyletextmodel type) throws SdaiException {
		a6 = unset_select(a6);
		a6$$ = 0;
	}

	public static jsdai.dictionary.EAttribute attributeLineheight(EIfctextstyletextmodel type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_select(a0);
			a0$$ = 0;
			a1 = null;
			a2 = null;
			a3 = unset_select(a3);
			a3$$ = 0;
			a4 = unset_select(a4);
			a4$$ = 0;
			a5 = null;
			a6 = unset_select(a6);
			a6$$ = 0;
			return;
		}
		a0 = av.entityValues[1].getMixed(0,a0$, this);
		a0$$ = av.entityValues[1].getSelectNumber();
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getString(2);
		a3 = av.entityValues[1].getMixed(3,a3$, this);
		a3$$ = av.entityValues[1].getSelectNumber();
		a4 = av.entityValues[1].getMixed(4,a4$, this);
		a4$$ = av.entityValues[1].getSelectNumber();
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getMixed(6,a6$, this);
		a6$$ = av.entityValues[1].getSelectNumber();
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_select(a0);
			a0$$ = 0;
			a1 = null;
			a2 = null;
			a3 = unset_select(a3);
			a3$$ = 0;
			a4 = unset_select(a4);
			a4$$ = 0;
			a5 = null;
			a6 = unset_select(a6);
			a6$$ = 0;
			return;
		}
		a0 = av.entityValues[1].getMixed(0,a0$, this);
		a0$$ = av.entityValues[1].getSelectNumber();
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getString(2);
		a3 = av.entityValues[1].getMixed(3,a3$, this);
		a3$$ = av.entityValues[1].getSelectNumber();
		a4 = av.entityValues[1].getMixed(4,a4$, this);
		a4$$ = av.entityValues[1].getSelectNumber();
		a5 = av.entityValues[1].getString(5);
		a6 = av.entityValues[1].getMixed(6,a6$, this);
		a6$$ = av.entityValues[1].getSelectNumber();
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextStyleTextModel
		av.entityValues[1].setMixed(0, a0, a0$, a0$$);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setString(2, a2);
		av.entityValues[1].setMixed(3, a3, a3$, a3$$);
		av.entityValues[1].setMixed(4, a4, a4$, a4$$);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setMixed(6, a6, a6$, a6$$);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPresentationItem
		// partial entity: IfcTextStyleTextModel
		av.entityValues[1].setMixed(0, a0, a0$, a0$$);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setString(2, a2);
		av.entityValues[1].setMixed(3, a3, a3$, a3$$);
		av.entityValues[1].setMixed(4, a4, a4$, a4$$);
		av.entityValues[1].setString(5, a5);
		av.entityValues[1].setMixed(6, a6, a6$, a6$$);
	}
}
