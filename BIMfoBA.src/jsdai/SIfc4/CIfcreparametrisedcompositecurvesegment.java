/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcReparametrisedCompositeCurveSegment

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcreparametrisedcompositecurvesegment extends CIfccompositecurvesegment implements EIfcreparametrisedcompositecurvesegment {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcreparametrisedcompositecurvesegment.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	// Transition: protected int a0;   Transition - java inheritance - ENUMERATION IfcTransitionCode
	// SameSense: protected int a1;   SameSense - java inheritance - BOOLEAN
	// ParentCurve: protected Object a2;   ParentCurve - java inheritance - ENTITY IfcCurve
	// Dim: protected int  - derived - java inheritance -  INTEGER
	protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// UsingCurves: protected Object  - inverse - java inheritance -  ENTITY IfcCompositeCurve
	protected double a3; // ParamLength - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Transition - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected int a0;
	// SameSense - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected int a1;
	// ParentCurve - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected Object a2;
	// Dim - derived - java inheritance
	// protected static final jsdai.dictionary.CDerived_attribute d0$ = CEntity.initDerivedAttribute(definition, 0);
	// UsingCurves - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// ParamLength - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3695=EXPLICIT_ATTRIBUTE('Transition',#3693,0,#3069,$,.F.);
	//<01> generating methods for consolidated attribute:  Transition
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3696=EXPLICIT_ATTRIBUTE('SameSense',#3693,1,#6,$,.F.);
	//<01> generating methods for consolidated attribute:  SameSense
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3697=EXPLICIT_ATTRIBUTE('ParentCurve',#3693,2,#3883,$,.F.);
	//<01> generating methods for consolidated attribute:  ParentCurve
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): ParentCurve, base type: entity IfcCurve
	public static int usedinParentcurve(EIfccompositecurvesegment type, EIfccurve instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	//going through all the attributes: #3698=DERIVED_ATTRIBUTE('Dim',#3693,0,#2485,$);
	//<01> generating methods for consolidated attribute:  Dim
	//<01-1> supertype, java inheritance
	//<01-1-1> derived
	//<01-1-1-2> NOT explicit-to-derived - generateDerivedSupertypeJavaInheritedMethodsX
	// methods for derived attribute: Dim, base type: INTEGER
	public boolean testDim(EIfccompositecurvesegment type) throws SdaiException {
			throw new SdaiException(SdaiException.FN_NAVL);
	}
	public Value getDim(EIfccompositecurvesegment type, SdaiContext _context) throws SdaiException {




//###-01 jc.generated_java: Value.alloc(jsdai.SIfc4.CIfccurve.definition).set(_context, get(jsdai.SIfc4.CIfccompositecurvesegment.attributeParentcurve(null))).getAttribute(jsdai.SIfc4.CIfccurve.attributeDim(null), _context)
				return (Value.alloc(jsdai.SIfc4.CIfccurve.definition).set(_context, get(jsdai.SIfc4.CIfccompositecurvesegment.attributeParentcurve(null))).getAttribute(jsdai.SIfc4.CIfccurve.attributeDim(null), _context));
	}
	public int getDim(EIfccompositecurvesegment type) throws SdaiException {
		SdaiContext _context = this.findEntityInstanceSdaiModel().getRepository().getSession().getSdaiContext();
			return getDim((EIfccompositecurvesegment)null, _context).getInteger();
	}
	public static jsdai.dictionary.EAttribute attributeDim(EIfccompositecurvesegment type) throws SdaiException {
		return d0$;
	}

	//going through all the attributes: #3699=INVERSE_ATTRIBUTE('UsingCurves',#3693,0,#3684,$,#3686,#7943,$,.F.);
	//<01> generating methods for consolidated attribute:  UsingCurves
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5535=EXPLICIT_ATTRIBUTE('ParamLength',#5533,0,#2599,$,.F.);
	//<01> generating methods for consolidated attribute:  ParamLength
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ParamLength, base type: REAL
	public boolean testParamlength(EIfcreparametrisedcompositecurvesegment type) throws SdaiException {
		return test_double(a3);
	}
	public double getParamlength(EIfcreparametrisedcompositecurvesegment type) throws SdaiException {
		return get_double(a3);
	}
	public void setParamlength(EIfcreparametrisedcompositecurvesegment type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetParamlength(EIfcreparametrisedcompositecurvesegment type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeParamlength(EIfcreparametrisedcompositecurvesegment type) throws SdaiException {
		return a3$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = 0;
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getBoolean(1);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[2].getDouble(0);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = 0;
			a2 = unset_instance(a2);
			a3 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getBoolean(1);
		a2 = av.entityValues[0].getInstance(2, this, a2$);
		a3 = av.entityValues[2].getDouble(0);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCompositeCurveSegment
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setBoolean(1, a1);
		av.entityValues[0].setInstance(2, a2);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcReparametrisedCompositeCurveSegment
		av.entityValues[2].setDouble(0, a3);
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcCompositeCurveSegment
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setBoolean(1, a1);
		av.entityValues[0].setInstance(2, a2);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcReparametrisedCompositeCurveSegment
		av.entityValues[2].setDouble(0, a3);
		// partial entity: IfcRepresentationItem
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcreparametrisedcompositecurvesegmentPositivelengthparameter(SdaiContext _context) throws SdaiException {
	



		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcParameterValue).set(_context, get(a3$)), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
}
