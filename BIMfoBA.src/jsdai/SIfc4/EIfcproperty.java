/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcProperty

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcproperty extends EIfcpropertyabstraction {

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Name, base type: STRING
	public boolean testName(EIfcproperty type) throws SdaiException;
	public String getName(EIfcproperty type) throws SdaiException;
	public void setName(EIfcproperty type, String value) throws SdaiException;
	public void unsetName(EIfcproperty type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:Description, base type: STRING
	public boolean testDescription(EIfcproperty type) throws SdaiException;
	public String getDescription(EIfcproperty type) throws SdaiException;
	public void setDescription(EIfcproperty type, String value) throws SdaiException;
	public void unsetDescription(EIfcproperty type) throws SdaiException;

	// Inverse attribute - PartOfPset : SET[0:-2147483648] OF IfcPropertySet FOR HasProperties
	public AIfcpropertyset getPartofpset(EIfcproperty type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - PropertyForDependance : SET[0:-2147483648] OF IfcPropertyDependencyRelationship FOR DependingProperty
	public AIfcpropertydependencyrelationship getPropertyfordependance(EIfcproperty type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - PropertyDependsOn : SET[0:-2147483648] OF IfcPropertyDependencyRelationship FOR DependantProperty
	public AIfcpropertydependencyrelationship getPropertydependson(EIfcproperty type, ASdaiModel domain) throws SdaiException;
	// Inverse attribute - PartOfComplex : SET[0:-2147483648] OF IfcComplexProperty FOR HasProperties
	public AIfccomplexproperty getPartofcomplex(EIfcproperty type, ASdaiModel domain) throws SdaiException;
}
