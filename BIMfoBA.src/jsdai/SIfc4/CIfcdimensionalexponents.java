/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcDimensionalExponents

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcdimensionalexponents extends CEntity implements EIfcdimensionalexponents {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcdimensionalexponents.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected int a0; // LengthExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a1; // MassExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a2; // TimeExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a3; // ElectricCurrentExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a4; // ThermodynamicTemperatureExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a5; // AmountOfSubstanceExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a6; // LuminousIntensityExponent - current entity - INTEGER
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LengthExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0;
	// MassExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a1;
	// TimeExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// ElectricCurrentExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected int a3;
	// ThermodynamicTemperatureExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a4;
	// AmountOfSubstanceExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a5;
	// LuminousIntensityExponent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected int a6;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3941=EXPLICIT_ATTRIBUTE('LengthExponent',#3939,0,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  LengthExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LengthExponent, base type: INTEGER
	public boolean testLengthexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a0);
	}
	public int getLengthexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a0);
	}
	public void setLengthexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a0 = set_integer(value);
	}
	public void unsetLengthexponent(EIfcdimensionalexponents type) throws SdaiException {
		a0 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeLengthexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3942=EXPLICIT_ATTRIBUTE('MassExponent',#3939,1,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  MassExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: MassExponent, base type: INTEGER
	public boolean testMassexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a1);
	}
	public int getMassexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a1);
	}
	public void setMassexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a1 = set_integer(value);
	}
	public void unsetMassexponent(EIfcdimensionalexponents type) throws SdaiException {
		a1 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeMassexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3943=EXPLICIT_ATTRIBUTE('TimeExponent',#3939,2,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  TimeExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: TimeExponent, base type: INTEGER
	public boolean testTimeexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a2);
	}
	public int getTimeexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a2);
	}
	public void setTimeexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a2 = set_integer(value);
	}
	public void unsetTimeexponent(EIfcdimensionalexponents type) throws SdaiException {
		a2 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeTimeexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3944=EXPLICIT_ATTRIBUTE('ElectricCurrentExponent',#3939,3,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  ElectricCurrentExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ElectricCurrentExponent, base type: INTEGER
	public boolean testElectriccurrentexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a3);
	}
	public int getElectriccurrentexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a3);
	}
	public void setElectriccurrentexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a3 = set_integer(value);
	}
	public void unsetElectriccurrentexponent(EIfcdimensionalexponents type) throws SdaiException {
		a3 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeElectriccurrentexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #3945=EXPLICIT_ATTRIBUTE('ThermodynamicTemperatureExponent',#3939,4,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  ThermodynamicTemperatureExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ThermodynamicTemperatureExponent, base type: INTEGER
	public boolean testThermodynamictemperatureexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a4);
	}
	public int getThermodynamictemperatureexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a4);
	}
	public void setThermodynamictemperatureexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a4 = set_integer(value);
	}
	public void unsetThermodynamictemperatureexponent(EIfcdimensionalexponents type) throws SdaiException {
		a4 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeThermodynamictemperatureexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #3946=EXPLICIT_ATTRIBUTE('AmountOfSubstanceExponent',#3939,5,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  AmountOfSubstanceExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: AmountOfSubstanceExponent, base type: INTEGER
	public boolean testAmountofsubstanceexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a5);
	}
	public int getAmountofsubstanceexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a5);
	}
	public void setAmountofsubstanceexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a5 = set_integer(value);
	}
	public void unsetAmountofsubstanceexponent(EIfcdimensionalexponents type) throws SdaiException {
		a5 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeAmountofsubstanceexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #3947=EXPLICIT_ATTRIBUTE('LuminousIntensityExponent',#3939,6,#2,$,.F.);
	//<01> generating methods for consolidated attribute:  LuminousIntensityExponent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LuminousIntensityExponent, base type: INTEGER
	public boolean testLuminousintensityexponent(EIfcdimensionalexponents type) throws SdaiException {
		return test_integer(a6);
	}
	public int getLuminousintensityexponent(EIfcdimensionalexponents type) throws SdaiException {
		return get_integer(a6);
	}
	public void setLuminousintensityexponent(EIfcdimensionalexponents type, int value) throws SdaiException {
		a6 = set_integer(value);
	}
	public void unsetLuminousintensityexponent(EIfcdimensionalexponents type) throws SdaiException {
		a6 = unset_integer();
	}
	public static jsdai.dictionary.EAttribute attributeLuminousintensityexponent(EIfcdimensionalexponents type) throws SdaiException {
		return a6$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Integer.MIN_VALUE;
			a1 = Integer.MIN_VALUE;
			a2 = Integer.MIN_VALUE;
			a3 = Integer.MIN_VALUE;
			a4 = Integer.MIN_VALUE;
			a5 = Integer.MIN_VALUE;
			a6 = Integer.MIN_VALUE;
			return;
		}
		a0 = av.entityValues[0].getInteger(0);
		a1 = av.entityValues[0].getInteger(1);
		a2 = av.entityValues[0].getInteger(2);
		a3 = av.entityValues[0].getInteger(3);
		a4 = av.entityValues[0].getInteger(4);
		a5 = av.entityValues[0].getInteger(5);
		a6 = av.entityValues[0].getInteger(6);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = Integer.MIN_VALUE;
			a1 = Integer.MIN_VALUE;
			a2 = Integer.MIN_VALUE;
			a3 = Integer.MIN_VALUE;
			a4 = Integer.MIN_VALUE;
			a5 = Integer.MIN_VALUE;
			a6 = Integer.MIN_VALUE;
			return;
		}
		a0 = av.entityValues[0].getInteger(0);
		a1 = av.entityValues[0].getInteger(1);
		a2 = av.entityValues[0].getInteger(2);
		a3 = av.entityValues[0].getInteger(3);
		a4 = av.entityValues[0].getInteger(4);
		a5 = av.entityValues[0].getInteger(5);
		a6 = av.entityValues[0].getInteger(6);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcDimensionalExponents
		av.entityValues[0].setInteger(0, a0);
		av.entityValues[0].setInteger(1, a1);
		av.entityValues[0].setInteger(2, a2);
		av.entityValues[0].setInteger(3, a3);
		av.entityValues[0].setInteger(4, a4);
		av.entityValues[0].setInteger(5, a5);
		av.entityValues[0].setInteger(6, a6);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcDimensionalExponents
		av.entityValues[0].setInteger(0, a0);
		av.entityValues[0].setInteger(1, a1);
		av.entityValues[0].setInteger(2, a2);
		av.entityValues[0].setInteger(3, a3);
		av.entityValues[0].setInteger(4, a4);
		av.entityValues[0].setInteger(5, a5);
		av.entityValues[0].setInteger(6, a6);
	}
}
