/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcCurveWeightsPositive

package jsdai.SIfc4;
import jsdai.lang.*;




public class FIfccurveweightspositive {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_B;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_Result;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_B) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_B = Value.alloc(jsdai.SIfc4.CIfcrationalbsplinecurvewithknots.definition).set(_e_B);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_Result = Value.alloc(ExpressTypes.BOOLEAN_TYPE).set(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).setLB(_context, 2));
		// end of initialization of local variables




																			Value _end419 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(_nonvar__e_B.getAttribute(jsdai.SIfc4.CIfcbsplinecurve.attributeUpperindexoncontrolpoints(null), _context));
																			Value _step419 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																			for (Value _implicit_98_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_98_i, _end419).getLogical() == 2;_implicit_98_i.inc(_step419)) {																			
																				if (Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _nonvar__e_B.getAttribute(jsdai.SIfc4.CIfcrationalbsplinecurvewithknots.attributeWeights(null), _context).indexing(_implicit_98_i, null), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0)).getLogical() == 2) {																				
																					_e_Result.set(_context, Value.alloc(ExpressTypes.BOOLEAN_TYPE).setLB(_context, 1));																				
		if (true) return Value.alloc(ExpressTypes.BOOLEAN_TYPE).set(_context, _e_Result).check(_context, ExpressTypes.BOOLEAN_TYPE);																				
																				}
																			} // for - REPEAT




		if (true) return Value.alloc(ExpressTypes.BOOLEAN_TYPE).set(_context, _e_Result).check(_context, ExpressTypes.BOOLEAN_TYPE);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
