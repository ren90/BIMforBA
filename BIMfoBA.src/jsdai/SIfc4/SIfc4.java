/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Special class for schema definition

package jsdai.SIfc4;
import jsdai.lang.*;

import java.lang.reflect.*;

public class SIfc4 extends SSuper {

	public static final String time_stamp = "2014-03-04 T12:58:34";
	public static final SSuper ss;

	static {
		ss = SSuper.initSuper(new SIfc4());
		initDefinedDataTypes();
		initNonDefinedDataTypes();
	}
	protected CEntity makeInstanceX(Class c) throws java.lang.InstantiationException, java.lang.IllegalAccessException {
			return (CEntity)c.newInstance();
	}

	protected void setDataField(Class cl, String name, Object value) throws NoSuchFieldException, IllegalAccessException {
		Field fd = cl.getDeclaredField(name);
		fd.set(null, value);
	}

	protected Object getObject(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.get(obj);
	}
	protected int getInt(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.getInt(obj);
	}
	protected double getDouble(Object obj, Field field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		return field.getDouble(obj);
	}

	protected void setObject(Object obj, Field field, Object value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.set(obj, value);
	}
	protected void setInt(Object obj, Field field, int value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.setInt(obj, value);
	}
	protected void setDouble(Object obj, Field field, double value) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException {
		field.setDouble(obj, value);
	}
	public static jsdai.dictionary.EDefined_type _st_IfcAbsorbedDoseMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcAccelerationMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcAmountOfSubstanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcAngularVelocityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcAreaDensityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcAreaMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcBoolean;
	public static jsdai.dictionary.EDefined_type _st_IfcBoxAlignment;
	public static jsdai.dictionary.EDefined_type _st_IfcCardinalPointReference;
	public static jsdai.dictionary.EDefined_type _st_IfcComplexNumber;
	public static jsdai.dictionary.EDefined_type _st_IfcCompoundPlaneAngleMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcContextDependentMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcCountMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcCurvatureMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcDate;
	public static jsdai.dictionary.EDefined_type _st_IfcDateTime;
	public static jsdai.dictionary.EDefined_type _st_IfcDayInMonthNumber;
	public static jsdai.dictionary.EDefined_type _st_IfcDayInWeekNumber;
	public static jsdai.dictionary.EDefined_type _st_IfcDescriptiveMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcDimensionCount;
	public static jsdai.dictionary.EDefined_type _st_IfcDoseEquivalentMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcDuration;
	public static jsdai.dictionary.EDefined_type _st_IfcDynamicViscosityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricCapacitanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricChargeMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricConductanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricCurrentMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricResistanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricVoltageMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcEnergyMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcFontStyle;
	public static jsdai.dictionary.EDefined_type _st_IfcFontVariant;
	public static jsdai.dictionary.EDefined_type _st_IfcFontWeight;
	public static jsdai.dictionary.EDefined_type _st_IfcForceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcFrequencyMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcGloballyUniqueId;
	public static jsdai.dictionary.EDefined_type _st_IfcHeatFluxDensityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcHeatingValueMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcIdentifier;
	public static jsdai.dictionary.EDefined_type _st_IfcIlluminanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcInductanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcInteger;
	public static jsdai.dictionary.EDefined_type _st_IfcIntegerCountRateMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcIonConcentrationMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcIsothermalMoistureCapacityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcKinematicViscosityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLabel;
	public static jsdai.dictionary.EDefined_type _st_IfcLanguageId;
	public static jsdai.dictionary.EDefined_type _st_IfcLengthMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLinearForceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLinearMomentMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLinearStiffnessMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLinearVelocityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLogical;
	public static jsdai.dictionary.EDefined_type _st_IfcLuminousFluxMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLuminousIntensityDistributionMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcLuminousIntensityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMagneticFluxDensityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMagneticFluxMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMassDensityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMassFlowRateMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMassMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMassPerLengthMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfElasticityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfLinearSubgradeReactionMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfRotationalSubgradeReactionMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfSubgradeReactionMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMoistureDiffusivityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMolecularWeightMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMomentOfInertiaMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMonetaryMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcMonthInYearNumber;
	public static jsdai.dictionary.EDefined_type _st_IfcNonNegativeLengthMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcNormalisedRatioMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcNumericMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPHMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcParameterValue;
	public static jsdai.dictionary.EDefined_type _st_IfcPlanarForceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPlaneAngleMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPositiveLengthMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPositivePlaneAngleMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPositiveRatioMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPowerMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPresentableText;
	public static jsdai.dictionary.EDefined_type _st_IfcPressureMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcPropertySetDefinitionSet;
	public static jsdai.dictionary.EDefined_type _st_IfcRadioActivityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcRatioMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcReal;
	public static jsdai.dictionary.EDefined_type _st_IfcRotationalFrequencyMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcRotationalMassMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcRotationalStiffnessMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSectionModulusMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSectionalAreaIntegralMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcShearModulusMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSolidAngleMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSoundPowerLevelMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSoundPowerMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSoundPressureLevelMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSoundPressureMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSpecificHeatCapacityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcSpecularExponent;
	public static jsdai.dictionary.EDefined_type _st_IfcSpecularRoughness;
	public static jsdai.dictionary.EDefined_type _st_IfcTemperatureGradientMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcTemperatureRateOfChangeMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcText;
	public static jsdai.dictionary.EDefined_type _st_IfcTextAlignment;
	public static jsdai.dictionary.EDefined_type _st_IfcTextDecoration;
	public static jsdai.dictionary.EDefined_type _st_IfcTextFontName;
	public static jsdai.dictionary.EDefined_type _st_IfcTextTransformation;
	public static jsdai.dictionary.EDefined_type _st_IfcThermalAdmittanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcThermalConductivityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcThermalExpansionCoefficientMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcThermalResistanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcThermalTransmittanceMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcThermodynamicTemperatureMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcTime;
	public static jsdai.dictionary.EDefined_type _st_IfcTimeMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcTimeStamp;
	public static jsdai.dictionary.EDefined_type _st_IfcTorqueMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcURIReference;
	public static jsdai.dictionary.EDefined_type _st_IfcVaporPermeabilityMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcVolumeMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcVolumetricFlowRateMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcWarpingConstantMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcWarpingMomentMeasure;
	public static jsdai.dictionary.EDefined_type _st_IfcActionRequestTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcActionSourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcActionTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcActuatorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAddressTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAirTerminalBoxTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAirTerminalTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAirToAirHeatRecoveryTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAlarmTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAnalysisModelTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAnalysisTheoryTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcArithmeticOperatorEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAssemblyPlaceEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcAudioVisualApplianceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBSplineCurveForm;
	public static jsdai.dictionary.EDefined_type _st_IfcBSplineSurfaceForm;
	public static jsdai.dictionary.EDefined_type _st_IfcBeamTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBenchmarkEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBoilerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBooleanOperator;
	public static jsdai.dictionary.EDefined_type _st_IfcBuildingElementPartTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBuildingElementProxyTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBuildingSystemTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcBurnerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCableCarrierFittingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCableCarrierSegmentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCableFittingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCableSegmentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcChangeActionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcChillerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcChimneyTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCoilTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcColumnTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCommunicationsApplianceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcComplexPropertyTemplateTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCompressorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCondenserTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcConnectionTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcConstraintEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcConstructionEquipmentResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcConstructionMaterialResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcConstructionProductResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcControllerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCooledBeamTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCoolingTowerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCostItemTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCostScheduleTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCoveringTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCrewResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCurtainWallTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcCurveInterpolationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDamperTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDataOriginEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDerivedUnitEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDirectionSenseEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDiscreteAccessoryTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDistributionChamberElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDistributionPortTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDistributionSystemEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDocumentConfidentialityEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDocumentStatusEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorPanelOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorPanelPositionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorStyleConstructionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorStyleOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDoorTypeOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDuctFittingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDuctSegmentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcDuctSilencerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricApplianceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricDistributionBoardTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricFlowStorageDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricGeneratorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricMotorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElectricTimeControlTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElementAssemblyTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcElementCompositionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcEngineTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcEvaporativeCoolerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcEvaporatorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcEventTriggerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcEventTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcExternalSpatialElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFanTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFastenerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFilterTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFireSuppressionTerminalTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFlowDirectionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFlowInstrumentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFlowMeterTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFootingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcFurnitureTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcGeographicElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcGeometricProjectionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcGlobalOrLocalEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcGridTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcHeatExchangerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcHumidifierTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcInterceptorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcInternalOrExternalEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcInventoryTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcJunctionBoxTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcKnotType;
	public static jsdai.dictionary.EDefined_type _st_IfcLaborResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLampTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLayerSetDirectionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLightDistributionCurveEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLightEmissionSourceEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLightFixtureTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLoadGroupTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcLogicalOperatorEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcMechanicalFastenerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcMedicalDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcMemberTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcMotorConnectionTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcNullStyle;
	public static jsdai.dictionary.EDefined_type _st_IfcObjectTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcObjectiveEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcOccupantTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcOpeningElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcOutletTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPerformanceHistoryTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPermeableCoveringOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPermitTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPhysicalOrVirtualEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPileConstructionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPileTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPipeFittingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPipeSegmentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPlateTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProcedureTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProfileTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProjectOrderTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProjectedOrTrueLengthEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProjectionElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPropertySetTemplateTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProtectiveDeviceTrippingUnitTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcProtectiveDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcPumpTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRailingTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRampFlightTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRampTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRecurrenceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcReflectanceMethodEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcReinforcingBarRoleEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcReinforcingBarSurfaceEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcReinforcingBarTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcReinforcingMeshTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRoleEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcRoofTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSIPrefix;
	public static jsdai.dictionary.EDefined_type _st_IfcSIUnitName;
	public static jsdai.dictionary.EDefined_type _st_IfcSanitaryTerminalTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSectionTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSensorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSequenceEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcShadingDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSimplePropertyTemplateTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSlabTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSolarDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSpaceHeaterTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSpaceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSpatialZoneTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStackTerminalTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStairFlightTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStairTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStateEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStructuralCurveActivityTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStructuralCurveMemberTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStructuralSurfaceActivityTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcStructuralSurfaceMemberTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSubContractResourceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSurfaceFeatureTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSurfaceSide;
	public static jsdai.dictionary.EDefined_type _st_IfcSwitchingDeviceTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcSystemFurnitureElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTankTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTaskDurationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTaskTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTendonAnchorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTendonTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTextPath;
	public static jsdai.dictionary.EDefined_type _st_IfcTimeSeriesDataTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTransformerTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTransitionCode;
	public static jsdai.dictionary.EDefined_type _st_IfcTransportElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcTrimmingPreference;
	public static jsdai.dictionary.EDefined_type _st_IfcTubeBundleTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcUnitEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcUnitaryControlElementTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcUnitaryEquipmentTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcValveTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcVibrationIsolatorTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcVoidingFeatureTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWallTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWasteTerminalTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowPanelOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowPanelPositionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowStyleConstructionEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowStyleOperationEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWindowTypePartitioningEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWorkCalendarTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWorkPlanTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcWorkScheduleTypeEnum;
	public static jsdai.dictionary.EDefined_type _st_IfcActorSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcAppliedValueSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcAxis2Placement;
	public static jsdai.dictionary.EDefined_type _st_IfcBendingParameterSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcBooleanOperand;
	public static jsdai.dictionary.EDefined_type _st_IfcClassificationReferenceSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcClassificationSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcColour;
	public static jsdai.dictionary.EDefined_type _st_IfcColourOrFactor;
	public static jsdai.dictionary.EDefined_type _st_IfcCoordinateReferenceSystemSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcCsgSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcCurveFontOrScaledCurveFontSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcCurveOnSurface;
	public static jsdai.dictionary.EDefined_type _st_IfcCurveOrEdgeCurve;
	public static jsdai.dictionary.EDefined_type _st_IfcCurveStyleFontSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcDefinitionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcDerivedMeasureValue;
	public static jsdai.dictionary.EDefined_type _st_IfcDocumentSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcFillStyleSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcGeometricSetSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcGridPlacementDirectionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcHatchLineDistanceSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcLayeredItem;
	public static jsdai.dictionary.EDefined_type _st_IfcLibrarySelect;
	public static jsdai.dictionary.EDefined_type _st_IfcLightDistributionDataSourceSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcMaterialSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcMeasureValue;
	public static jsdai.dictionary.EDefined_type _st_IfcMetricValueSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfRotationalSubgradeReactionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfSubgradeReactionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcModulusOfTranslationalSubgradeReactionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcObjectReferenceSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcPointOrVertexPoint;
	public static jsdai.dictionary.EDefined_type _st_IfcPresentationStyleSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcProcessSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcProductRepresentationSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcProductSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcPropertySetDefinitionSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcResourceObjectSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcResourceSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcRotationalStiffnessSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcShell;
	public static jsdai.dictionary.EDefined_type _st_IfcSimpleValue;
	public static jsdai.dictionary.EDefined_type _st_IfcSizeSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcSolidOrShell;
	public static jsdai.dictionary.EDefined_type _st_IfcSpaceBoundarySelect;
	public static jsdai.dictionary.EDefined_type _st_IfcSpecularHighlightSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcStructuralActivityAssignmentSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcStyleAssignmentSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcSurfaceOrFaceSurface;
	public static jsdai.dictionary.EDefined_type _st_IfcSurfaceStyleElementSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcTextFontSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcTimeOrRatioSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcTranslationalStiffnessSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcTrimmingSelect;
	public static jsdai.dictionary.EDefined_type _st_IfcUnit;
	public static jsdai.dictionary.EDefined_type _st_IfcValue;
	public static jsdai.dictionary.EDefined_type _st_IfcVectorOrDirection;
	public static jsdai.dictionary.EDefined_type _st_IfcWarpingStiffnessSelect;

	static void initDefinedDataTypes(){
		_st_IfcAbsorbedDoseMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAbsorbedDoseMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcAccelerationMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAccelerationMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcAmountOfSubstanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAmountOfSubstanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcAngularVelocityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAngularVelocityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcAreaDensityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAreaDensityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcAreaMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAreaMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcBoolean = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBoolean",jsdai.SIfc4.SIfc4.class);
		_st_IfcBoxAlignment = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBoxAlignment",jsdai.SIfc4.SIfc4.class);
		_st_IfcCardinalPointReference = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCardinalPointReference",jsdai.SIfc4.SIfc4.class);
		_st_IfcComplexNumber = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcComplexNumber",jsdai.SIfc4.SIfc4.class);
		_st_IfcCompoundPlaneAngleMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCompoundPlaneAngleMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcContextDependentMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcContextDependentMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcCountMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCountMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurvatureMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurvatureMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcDate = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDate",jsdai.SIfc4.SIfc4.class);
		_st_IfcDateTime = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDateTime",jsdai.SIfc4.SIfc4.class);
		_st_IfcDayInMonthNumber = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDayInMonthNumber",jsdai.SIfc4.SIfc4.class);
		_st_IfcDayInWeekNumber = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDayInWeekNumber",jsdai.SIfc4.SIfc4.class);
		_st_IfcDescriptiveMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDescriptiveMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcDimensionCount = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDimensionCount",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoseEquivalentMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoseEquivalentMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcDuration = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDuration",jsdai.SIfc4.SIfc4.class);
		_st_IfcDynamicViscosityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDynamicViscosityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricCapacitanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricCapacitanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricChargeMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricChargeMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricConductanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricConductanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricCurrentMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricCurrentMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricResistanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricResistanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricVoltageMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricVoltageMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcEnergyMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEnergyMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcFontStyle = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFontStyle",jsdai.SIfc4.SIfc4.class);
		_st_IfcFontVariant = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFontVariant",jsdai.SIfc4.SIfc4.class);
		_st_IfcFontWeight = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFontWeight",jsdai.SIfc4.SIfc4.class);
		_st_IfcForceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcForceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcFrequencyMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFrequencyMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcGloballyUniqueId = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGloballyUniqueId",jsdai.SIfc4.SIfc4.class);
		_st_IfcHeatFluxDensityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcHeatFluxDensityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcHeatingValueMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcHeatingValueMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcIdentifier = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcIdentifier",jsdai.SIfc4.SIfc4.class);
		_st_IfcIlluminanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcIlluminanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcInductanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcInductanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcInteger = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcInteger",jsdai.SIfc4.SIfc4.class);
		_st_IfcIntegerCountRateMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcIntegerCountRateMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcIonConcentrationMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcIonConcentrationMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcIsothermalMoistureCapacityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcIsothermalMoistureCapacityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcKinematicViscosityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcKinematicViscosityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLabel = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLabel",jsdai.SIfc4.SIfc4.class);
		_st_IfcLanguageId = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLanguageId",jsdai.SIfc4.SIfc4.class);
		_st_IfcLengthMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLengthMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLinearForceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLinearForceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLinearMomentMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLinearMomentMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLinearStiffnessMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLinearStiffnessMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLinearVelocityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLinearVelocityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLogical = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLogical",jsdai.SIfc4.SIfc4.class);
		_st_IfcLuminousFluxMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLuminousFluxMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLuminousIntensityDistributionMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLuminousIntensityDistributionMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcLuminousIntensityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLuminousIntensityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMagneticFluxDensityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMagneticFluxDensityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMagneticFluxMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMagneticFluxMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMassDensityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMassDensityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMassFlowRateMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMassFlowRateMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMassMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMassMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMassPerLengthMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMassPerLengthMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfElasticityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfElasticityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfLinearSubgradeReactionMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfLinearSubgradeReactionMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfRotationalSubgradeReactionMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfRotationalSubgradeReactionMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfSubgradeReactionMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfSubgradeReactionMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMoistureDiffusivityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMoistureDiffusivityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMolecularWeightMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMolecularWeightMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMomentOfInertiaMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMomentOfInertiaMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMonetaryMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMonetaryMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcMonthInYearNumber = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMonthInYearNumber",jsdai.SIfc4.SIfc4.class);
		_st_IfcNonNegativeLengthMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcNonNegativeLengthMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcNormalisedRatioMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcNormalisedRatioMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcNumericMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcNumericMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPHMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPHMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcParameterValue = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcParameterValue",jsdai.SIfc4.SIfc4.class);
		_st_IfcPlanarForceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPlanarForceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPlaneAngleMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPlaneAngleMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPositiveLengthMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPositiveLengthMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPositivePlaneAngleMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPositivePlaneAngleMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPositiveRatioMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPositiveRatioMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPowerMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPowerMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPresentableText = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPresentableText",jsdai.SIfc4.SIfc4.class);
		_st_IfcPressureMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPressureMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcPropertySetDefinitionSet = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPropertySetDefinitionSet",jsdai.SIfc4.SIfc4.class);
		_st_IfcRadioActivityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRadioActivityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcRatioMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRatioMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcReal = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReal",jsdai.SIfc4.SIfc4.class);
		_st_IfcRotationalFrequencyMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRotationalFrequencyMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcRotationalMassMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRotationalMassMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcRotationalStiffnessMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRotationalStiffnessMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSectionModulusMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSectionModulusMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSectionalAreaIntegralMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSectionalAreaIntegralMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcShearModulusMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcShearModulusMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSolidAngleMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSolidAngleMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSoundPowerLevelMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSoundPowerLevelMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSoundPowerMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSoundPowerMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSoundPressureLevelMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSoundPressureLevelMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSoundPressureMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSoundPressureMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpecificHeatCapacityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpecificHeatCapacityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpecularExponent = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpecularExponent",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpecularRoughness = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpecularRoughness",jsdai.SIfc4.SIfc4.class);
		_st_IfcTemperatureGradientMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTemperatureGradientMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcTemperatureRateOfChangeMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTemperatureRateOfChangeMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcText = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcText",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextAlignment = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextAlignment",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextDecoration = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextDecoration",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextFontName = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextFontName",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextTransformation = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextTransformation",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermalAdmittanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermalAdmittanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermalConductivityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermalConductivityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermalExpansionCoefficientMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermalExpansionCoefficientMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermalResistanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermalResistanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermalTransmittanceMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermalTransmittanceMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcThermodynamicTemperatureMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcThermodynamicTemperatureMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcTime = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTime",jsdai.SIfc4.SIfc4.class);
		_st_IfcTimeMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTimeMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcTimeStamp = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTimeStamp",jsdai.SIfc4.SIfc4.class);
		_st_IfcTorqueMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTorqueMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcURIReference = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcURIReference",jsdai.SIfc4.SIfc4.class);
		_st_IfcVaporPermeabilityMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVaporPermeabilityMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcVolumeMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVolumeMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcVolumetricFlowRateMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVolumetricFlowRateMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcWarpingConstantMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWarpingConstantMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcWarpingMomentMeasure = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWarpingMomentMeasure",jsdai.SIfc4.SIfc4.class);
		_st_IfcActionRequestTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcActionRequestTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcActionSourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcActionSourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcActionTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcActionTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcActuatorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcActuatorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAddressTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAddressTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAirTerminalBoxTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAirTerminalBoxTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAirTerminalTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAirTerminalTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAirToAirHeatRecoveryTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAirToAirHeatRecoveryTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAlarmTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAlarmTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAnalysisModelTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAnalysisModelTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAnalysisTheoryTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAnalysisTheoryTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcArithmeticOperatorEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcArithmeticOperatorEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAssemblyPlaceEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAssemblyPlaceEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcAudioVisualApplianceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAudioVisualApplianceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBSplineCurveForm = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBSplineCurveForm",jsdai.SIfc4.SIfc4.class);
		_st_IfcBSplineSurfaceForm = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBSplineSurfaceForm",jsdai.SIfc4.SIfc4.class);
		_st_IfcBeamTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBeamTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBenchmarkEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBenchmarkEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBoilerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBoilerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBooleanOperator = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBooleanOperator",jsdai.SIfc4.SIfc4.class);
		_st_IfcBuildingElementPartTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBuildingElementPartTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBuildingElementProxyTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBuildingElementProxyTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBuildingSystemTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBuildingSystemTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcBurnerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBurnerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCableCarrierFittingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCableCarrierFittingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCableCarrierSegmentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCableCarrierSegmentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCableFittingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCableFittingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCableSegmentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCableSegmentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcChangeActionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcChangeActionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcChillerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcChillerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcChimneyTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcChimneyTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCoilTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCoilTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcColumnTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcColumnTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCommunicationsApplianceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCommunicationsApplianceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcComplexPropertyTemplateTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcComplexPropertyTemplateTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCompressorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCompressorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCondenserTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCondenserTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcConnectionTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcConnectionTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcConstraintEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcConstraintEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcConstructionEquipmentResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcConstructionEquipmentResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcConstructionMaterialResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcConstructionMaterialResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcConstructionProductResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcConstructionProductResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcControllerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcControllerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCooledBeamTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCooledBeamTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCoolingTowerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCoolingTowerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCostItemTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCostItemTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCostScheduleTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCostScheduleTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCoveringTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCoveringTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCrewResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCrewResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurtainWallTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurtainWallTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurveInterpolationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurveInterpolationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDamperTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDamperTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDataOriginEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDataOriginEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDerivedUnitEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDerivedUnitEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDirectionSenseEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDirectionSenseEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDiscreteAccessoryTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDiscreteAccessoryTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDistributionChamberElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDistributionChamberElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDistributionPortTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDistributionPortTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDistributionSystemEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDistributionSystemEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDocumentConfidentialityEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDocumentConfidentialityEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDocumentStatusEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDocumentStatusEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorPanelOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorPanelOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorPanelPositionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorPanelPositionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorStyleConstructionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorStyleConstructionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorStyleOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorStyleOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDoorTypeOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDoorTypeOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDuctFittingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDuctFittingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDuctSegmentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDuctSegmentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcDuctSilencerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDuctSilencerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricApplianceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricApplianceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricDistributionBoardTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricDistributionBoardTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricFlowStorageDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricFlowStorageDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricGeneratorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricGeneratorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricMotorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricMotorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElectricTimeControlTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElectricTimeControlTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElementAssemblyTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElementAssemblyTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcElementCompositionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcElementCompositionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcEngineTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEngineTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcEvaporativeCoolerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEvaporativeCoolerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcEvaporatorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEvaporatorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcEventTriggerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEventTriggerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcEventTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcEventTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcExternalSpatialElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcExternalSpatialElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFanTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFanTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFastenerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFastenerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFilterTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFilterTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFireSuppressionTerminalTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFireSuppressionTerminalTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFlowDirectionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFlowDirectionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFlowInstrumentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFlowInstrumentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFlowMeterTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFlowMeterTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFootingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFootingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcFurnitureTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFurnitureTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcGeographicElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGeographicElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcGeometricProjectionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGeometricProjectionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcGlobalOrLocalEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGlobalOrLocalEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcGridTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGridTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcHeatExchangerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcHeatExchangerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcHumidifierTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcHumidifierTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcInterceptorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcInterceptorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcInternalOrExternalEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcInternalOrExternalEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcInventoryTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcInventoryTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcJunctionBoxTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcJunctionBoxTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcKnotType = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcKnotType",jsdai.SIfc4.SIfc4.class);
		_st_IfcLaborResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLaborResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLampTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLampTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLayerSetDirectionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLayerSetDirectionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLightDistributionCurveEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLightDistributionCurveEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLightEmissionSourceEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLightEmissionSourceEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLightFixtureTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLightFixtureTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLoadGroupTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLoadGroupTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcLogicalOperatorEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLogicalOperatorEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcMechanicalFastenerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMechanicalFastenerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcMedicalDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMedicalDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcMemberTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMemberTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcMotorConnectionTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMotorConnectionTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcNullStyle = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcNullStyle",jsdai.SIfc4.SIfc4.class);
		_st_IfcObjectTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcObjectTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcObjectiveEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcObjectiveEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcOccupantTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcOccupantTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcOpeningElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcOpeningElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcOutletTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcOutletTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPerformanceHistoryTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPerformanceHistoryTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPermeableCoveringOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPermeableCoveringOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPermitTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPermitTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPhysicalOrVirtualEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPhysicalOrVirtualEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPileConstructionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPileConstructionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPileTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPileTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPipeFittingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPipeFittingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPipeSegmentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPipeSegmentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPlateTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPlateTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProcedureTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProcedureTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProfileTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProfileTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProjectOrderTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProjectOrderTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProjectedOrTrueLengthEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProjectedOrTrueLengthEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProjectionElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProjectionElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPropertySetTemplateTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPropertySetTemplateTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProtectiveDeviceTrippingUnitTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProtectiveDeviceTrippingUnitTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcProtectiveDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProtectiveDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcPumpTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPumpTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRailingTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRailingTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRampFlightTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRampFlightTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRampTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRampTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRecurrenceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRecurrenceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcReflectanceMethodEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReflectanceMethodEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcReinforcingBarRoleEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReinforcingBarRoleEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcReinforcingBarSurfaceEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReinforcingBarSurfaceEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcReinforcingBarTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReinforcingBarTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcReinforcingMeshTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcReinforcingMeshTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRoleEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRoleEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcRoofTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRoofTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSIPrefix = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSIPrefix",jsdai.SIfc4.SIfc4.class);
		_st_IfcSIUnitName = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSIUnitName",jsdai.SIfc4.SIfc4.class);
		_st_IfcSanitaryTerminalTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSanitaryTerminalTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSectionTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSectionTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSensorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSensorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSequenceEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSequenceEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcShadingDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcShadingDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSimplePropertyTemplateTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSimplePropertyTemplateTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSlabTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSlabTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSolarDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSolarDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpaceHeaterTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpaceHeaterTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpaceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpaceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpatialZoneTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpatialZoneTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStackTerminalTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStackTerminalTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStairFlightTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStairFlightTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStairTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStairTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStateEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStateEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStructuralCurveActivityTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStructuralCurveActivityTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStructuralCurveMemberTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStructuralCurveMemberTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStructuralSurfaceActivityTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStructuralSurfaceActivityTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcStructuralSurfaceMemberTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStructuralSurfaceMemberTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSubContractResourceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSubContractResourceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSurfaceFeatureTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSurfaceFeatureTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSurfaceSide = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSurfaceSide",jsdai.SIfc4.SIfc4.class);
		_st_IfcSwitchingDeviceTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSwitchingDeviceTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcSystemFurnitureElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSystemFurnitureElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTankTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTankTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTaskDurationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTaskDurationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTaskTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTaskTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTendonAnchorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTendonAnchorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTendonTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTendonTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextPath = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextPath",jsdai.SIfc4.SIfc4.class);
		_st_IfcTimeSeriesDataTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTimeSeriesDataTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTransformerTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTransformerTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTransitionCode = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTransitionCode",jsdai.SIfc4.SIfc4.class);
		_st_IfcTransportElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTransportElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcTrimmingPreference = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTrimmingPreference",jsdai.SIfc4.SIfc4.class);
		_st_IfcTubeBundleTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTubeBundleTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcUnitEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcUnitEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcUnitaryControlElementTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcUnitaryControlElementTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcUnitaryEquipmentTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcUnitaryEquipmentTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcValveTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcValveTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcVibrationIsolatorTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVibrationIsolatorTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcVoidingFeatureTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVoidingFeatureTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWallTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWallTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWasteTerminalTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWasteTerminalTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowPanelOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowPanelOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowPanelPositionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowPanelPositionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowStyleConstructionEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowStyleConstructionEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowStyleOperationEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowStyleOperationEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWindowTypePartitioningEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWindowTypePartitioningEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWorkCalendarTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWorkCalendarTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWorkPlanTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWorkPlanTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcWorkScheduleTypeEnum = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWorkScheduleTypeEnum",jsdai.SIfc4.SIfc4.class);
		_st_IfcActorSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcActorSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcAppliedValueSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAppliedValueSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcAxis2Placement = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcAxis2Placement",jsdai.SIfc4.SIfc4.class);
		_st_IfcBendingParameterSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBendingParameterSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcBooleanOperand = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcBooleanOperand",jsdai.SIfc4.SIfc4.class);
		_st_IfcClassificationReferenceSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcClassificationReferenceSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcClassificationSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcClassificationSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcColour = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcColour",jsdai.SIfc4.SIfc4.class);
		_st_IfcColourOrFactor = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcColourOrFactor",jsdai.SIfc4.SIfc4.class);
		_st_IfcCoordinateReferenceSystemSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCoordinateReferenceSystemSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcCsgSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCsgSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurveFontOrScaledCurveFontSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurveFontOrScaledCurveFontSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurveOnSurface = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurveOnSurface",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurveOrEdgeCurve = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurveOrEdgeCurve",jsdai.SIfc4.SIfc4.class);
		_st_IfcCurveStyleFontSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcCurveStyleFontSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcDefinitionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDefinitionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcDerivedMeasureValue = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDerivedMeasureValue",jsdai.SIfc4.SIfc4.class);
		_st_IfcDocumentSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcDocumentSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcFillStyleSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcFillStyleSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcGeometricSetSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGeometricSetSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcGridPlacementDirectionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcGridPlacementDirectionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcHatchLineDistanceSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcHatchLineDistanceSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcLayeredItem = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLayeredItem",jsdai.SIfc4.SIfc4.class);
		_st_IfcLibrarySelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLibrarySelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcLightDistributionDataSourceSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcLightDistributionDataSourceSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcMaterialSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMaterialSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcMeasureValue = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMeasureValue",jsdai.SIfc4.SIfc4.class);
		_st_IfcMetricValueSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcMetricValueSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfRotationalSubgradeReactionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfRotationalSubgradeReactionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfSubgradeReactionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfSubgradeReactionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcModulusOfTranslationalSubgradeReactionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcModulusOfTranslationalSubgradeReactionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcObjectReferenceSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcObjectReferenceSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcPointOrVertexPoint = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPointOrVertexPoint",jsdai.SIfc4.SIfc4.class);
		_st_IfcPresentationStyleSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPresentationStyleSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcProcessSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProcessSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcProductRepresentationSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProductRepresentationSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcProductSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcProductSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcPropertySetDefinitionSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcPropertySetDefinitionSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcResourceObjectSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcResourceObjectSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcResourceSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcResourceSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcRotationalStiffnessSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcRotationalStiffnessSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcShell = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcShell",jsdai.SIfc4.SIfc4.class);
		_st_IfcSimpleValue = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSimpleValue",jsdai.SIfc4.SIfc4.class);
		_st_IfcSizeSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSizeSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcSolidOrShell = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSolidOrShell",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpaceBoundarySelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpaceBoundarySelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcSpecularHighlightSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSpecularHighlightSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcStructuralActivityAssignmentSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStructuralActivityAssignmentSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcStyleAssignmentSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcStyleAssignmentSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcSurfaceOrFaceSurface = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSurfaceOrFaceSurface",jsdai.SIfc4.SIfc4.class);
		_st_IfcSurfaceStyleElementSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcSurfaceStyleElementSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcTextFontSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTextFontSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcTimeOrRatioSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTimeOrRatioSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcTranslationalStiffnessSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTranslationalStiffnessSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcTrimmingSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcTrimmingSelect",jsdai.SIfc4.SIfc4.class);
		_st_IfcUnit = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcUnit",jsdai.SIfc4.SIfc4.class);
		_st_IfcValue = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcValue",jsdai.SIfc4.SIfc4.class);
		_st_IfcVectorOrDirection = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcVectorOrDirection",jsdai.SIfc4.SIfc4.class);
		_st_IfcWarpingStiffnessSelect = (jsdai.dictionary.EDefined_type)SdaiSession.findDataType("IfcWarpingStiffnessSelect",jsdai.SIfc4.SIfc4.class);
	}

	/*--- methods to validate WHERE rules in defined type IfcBoxAlignment ---*/

	public static int rIfcboxalignmentWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements339 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "top-left"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "top-middle"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "top-right"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "middle-left"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "center"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "middle-right"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "bottom-left"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "bottom-middle"));
							_elements339.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "bottom-right"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements339)).getLogical());
	}
	public static int runIfcboxalignment(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcboxalignmentWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcBoxAlignment.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcCardinalPointReference ---*/

	public static int rIfccardinalpointreferenceGreaterthanzero(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, self, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical());
	}
	public static int runIfccardinalpointreference(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfccardinalpointreferenceGreaterthanzero(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcCardinalPointReference.GreaterThanZero");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcCompoundPlaneAngleMeasure ---*/

	public static int rIfccompoundplaneanglemeasureConsistentsign(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)), Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))), Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))), Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(self), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)), Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 4), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)))), Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))), Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(self), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 4), null), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)))))).getLogical());
	}
	public static int rIfccompoundplaneanglemeasureMicrosecondsinrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(self), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)), Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(ExpressTypes.NUMBER_TYPE).abs(self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 4), null)), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1000000)))).getLogical());
	}
	public static int rIfccompoundplaneanglemeasureSecondsinrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(ExpressTypes.NUMBER_TYPE).abs(self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3), null)), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 60))).getLogical());
	}
	public static int rIfccompoundplaneanglemeasureMinutesinrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(ExpressTypes.NUMBER_TYPE).abs(self.indexing(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2), null)), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 60))).getLogical());
	}
	public static int runIfccompoundplaneanglemeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		int r;
		result = rIfccompoundplaneanglemeasureConsistentsign(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcCompoundPlaneAngleMeasure.ConsistentSign");
		}
		r = rIfccompoundplaneanglemeasureMicrosecondsinrange(_context, self);
		if (r == 1) {
			violations.addUnordered("IfcCompoundPlaneAngleMeasure.MicrosecondsInRange");
			result = 1;
		} else
		if ((result == 2) && (r == 2)) ;
		else if (result != 1) result = 3;
		r = rIfccompoundplaneanglemeasureSecondsinrange(_context, self);
		if (r == 1) {
			violations.addUnordered("IfcCompoundPlaneAngleMeasure.SecondsInRange");
			result = 1;
		} else
		if ((result == 2) && (r == 2)) ;
		else if (result != 1) result = 3;
		r = rIfccompoundplaneanglemeasureMinutesinrange(_context, self);
		if (r == 1) {
			violations.addUnordered("IfcCompoundPlaneAngleMeasure.MinutesInRange");
			result = 1;
		} else
		if ((result == 2) && (r == 2)) ;
		else if (result != 1) result = 3;
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcDayInMonthNumber ---*/

	public static int rIfcdayinmonthnumberValidrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 31)))).getLogical());
	}
	public static int runIfcdayinmonthnumber(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcdayinmonthnumberValidrange(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcDayInMonthNumber.ValidRange");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcDayInWeekNumber ---*/

	public static int rIfcdayinweeknumberValidrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 7)))).getLogical());
	}
	public static int runIfcdayinweeknumber(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcdayinweeknumberValidrange(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcDayInWeekNumber.ValidRange");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcDimensionCount ---*/

	public static int rIfcdimensioncountWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)))).getLogical());
	}
	public static int runIfcdimensioncount(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcdimensioncountWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcDimensionCount.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcFontStyle ---*/

	public static int rIfcfontstyleWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements340 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements340.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "normal"));
							_elements340.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "italic"));
							_elements340.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "oblique"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements340)).getLogical());
	}
	public static int runIfcfontstyle(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcfontstyleWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcFontStyle.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcFontVariant ---*/

	public static int rIfcfontvariantWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements341 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements341.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "normal"));
							_elements341.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "small-caps"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements341)).getLogical());
	}
	public static int runIfcfontvariant(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcfontvariantWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcFontVariant.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcFontWeight ---*/

	public static int rIfcfontweightWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements342 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "normal"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "small-caps"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "100"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "200"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "300"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "400"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "500"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "600"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "700"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "800"));
							_elements342.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "900"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements342)).getLogical());
	}
	public static int runIfcfontweight(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcfontweightWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcFontWeight.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcHeatingValueMeasure ---*/

	public static int rIfcheatingvaluemeasureWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
	public static int runIfcheatingvaluemeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcheatingvaluemeasureWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcHeatingValueMeasure.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcMonthInYearNumber ---*/

	public static int rIfcmonthinyearnumberValidrange(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 12)))).getLogical());
	}
	public static int runIfcmonthinyearnumber(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcmonthinyearnumberValidrange(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcMonthInYearNumber.ValidRange");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcNonNegativeLengthMeasure ---*/

	public static int rIfcnonnegativelengthmeasureNotnegative(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).gequal(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
	public static int runIfcnonnegativelengthmeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcnonnegativelengthmeasureNotnegative(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcNonNegativeLengthMeasure.NotNegative");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcNormalisedRatioMeasure ---*/

	public static int rIfcnormalisedratiomeasureWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0)))).getLogical());
	}
	public static int runIfcnormalisedratiomeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcnormalisedratiomeasureWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcNormalisedRatioMeasure.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcPHMeasure ---*/

	public static int rIfcphmeasureWr21(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 14.0)))).getLogical());
	}
	public static int runIfcphmeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcphmeasureWr21(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcPHMeasure.WR21");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcPositiveLengthMeasure ---*/

	public static int rIfcpositivelengthmeasureWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
	public static int runIfcpositivelengthmeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcpositivelengthmeasureWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcPositiveLengthMeasure.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcPositivePlaneAngleMeasure ---*/

	public static int rIfcpositiveplaneanglemeasureWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
	public static int runIfcpositiveplaneanglemeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcpositiveplaneanglemeasureWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcPositivePlaneAngleMeasure.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcPositiveRatioMeasure ---*/

	public static int rIfcpositiveratiomeasureWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0))).getLogical());
	}
	public static int runIfcpositiveratiomeasure(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcpositiveratiomeasureWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcPositiveRatioMeasure.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcSpecularRoughness ---*/

	public static int rIfcspecularroughnessWr1(SdaiContext _context, Value self) throws SdaiException {
	


		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0), self), Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, self, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0)))).getLogical());
	}
	public static int runIfcspecularroughness(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfcspecularroughnessWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcSpecularRoughness.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcTextAlignment ---*/

	public static int rIfctextalignmentWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements343 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements343.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "left"));
							_elements343.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "right"));
							_elements343.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "center"));
							_elements343.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "justify"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements343)).getLogical());
	}
	public static int runIfctextalignment(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfctextalignmentWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcTextAlignment.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcTextDecoration ---*/

	public static int rIfctextdecorationWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements344 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements344.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "none"));
							_elements344.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "underline"));
							_elements344.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "overline"));
							_elements344.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "line-through"));
							_elements344.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "blink"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements344)).getLogical());
	}
	public static int runIfctextdecoration(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfctextdecorationWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcTextDecoration.WR1");
		}
		return result;
	}

	/*--- methods to validate WHERE rules in defined type IfcTextTransformation ---*/

	public static int rIfctexttransformationWr1(SdaiContext _context, Value self) throws SdaiException {
	


							Value _elements345 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
							_elements345.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "capitalize"));
							_elements345.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "uppercase"));
							_elements345.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "lowercase"));
							_elements345.addMember(_context, Value.alloc(ExpressTypes.STRING_TYPE).set(_context, "none"));
		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).IN(_context, self, _elements345)).getLogical());
	}
	public static int runIfctexttransformation(SdaiContext _context, Value self, A_string violations) throws SdaiException {
		int result;
		result = rIfctexttransformationWr1(_context, self);
		if (result == 1) {
			violations.addUnordered("IfcTextTransformation.WR1");
		}
		return result;
	}

	public static jsdai.dictionary.EData_type _st_set_1_ifcclosedshell;
	public static jsdai.dictionary.EData_type _st_set_1_ifccurve;
	public static jsdai.dictionary.EData_type _st_list_1_ifcappliedvalue;
	public static jsdai.dictionary.EData_type _st_set_1_ifcapproval;
	public static jsdai.dictionary.EData_type _st_list_2_ifccartesianpoint;
	public static jsdai.dictionary.EData_type _st_list_2_integer;
	public static jsdai.dictionary.EData_type _st_list_2_ifcparametervalue;
	public static jsdai.dictionary.EData_type _st_list_2_list_2_ifccartesianpoint;
	public static jsdai.dictionary.EData_type _st_list_1_3_ifclengthmeasure;
	public static jsdai.dictionary.EData_type _st_list_1_list_3_3_ifclengthmeasure;
	public static jsdai.dictionary.EData_type _st_list_1_ifcidentifier;
	public static jsdai.dictionary.EData_type _st_list_1_list_3_3_ifcnormalisedratiomeasure;
	public static jsdai.dictionary.EData_type _st_set_1_ifcproperty;
	public static jsdai.dictionary.EData_type _st_set_1_ifcpropertytemplate;
	public static jsdai.dictionary.EData_type _st_list_1_ifccompositecurvesegment;
	public static jsdai.dictionary.EData_type _st_set_2_ifcprofiledef;
	public static jsdai.dictionary.EData_type _st_set_1_ifcface;
	public static jsdai.dictionary.EData_type _st_set_1_ifcrepresentationcontext;
	public static jsdai.dictionary.EData_type _st_list_1_ifccostvalue;
	public static jsdai.dictionary.EData_type _st_list_1_ifcphysicalquantity;
	public static jsdai.dictionary.EData_type _st_set_0_ifccurve;
	public static jsdai.dictionary.EData_type _st_set_1_ifcboundarycurve;
	public static jsdai.dictionary.EData_type _st_list_1_ifccurvestylefontpattern;
	public static jsdai.dictionary.EData_type _st_set_1_ifcderivedunitelement;
	public static jsdai.dictionary.EData_type _st_list_2_3_real;
	public static jsdai.dictionary.EData_type _st_set_1_ifcactorselect;
	public static jsdai.dictionary.EData_type _st_set_1_ifcdocumentinformation;
	public static jsdai.dictionary.EData_type _st_list_1_ifcorientededge;
	public static jsdai.dictionary.EData_type _st_set_1_ifcphysicalquantity;
	public static jsdai.dictionary.EData_type _st_set_1_ifcresourceobjectselect;
	public static jsdai.dictionary.EData_type _st_set_1_ifcfacebound;
	public static jsdai.dictionary.EData_type _st_set_1_ifcconnectedfaceset;
	public static jsdai.dictionary.EData_type _st_set_1_ifcfillstyleselect;
	public static jsdai.dictionary.EData_type _st_list_2_2_ifcvector;
	public static jsdai.dictionary.EData_type _st_set_1_ifcstyleditem;
	public static jsdai.dictionary.EData_type _st_set_1_ifcgeometricsetselect;
	public static jsdai.dictionary.EData_type _st_list_1_unique_ifcgridaxis;
	public static jsdai.dictionary.EData_type _st_list_1_integer;
	public static jsdai.dictionary.EData_type _st_list_1_list_3_3_integer;
	public static jsdai.dictionary.EData_type _st_set_1_ifcperson;
	public static jsdai.dictionary.EData_type _st_list_1_ifcirregulartimeseriesvalue;
	public static jsdai.dictionary.EData_type _st_list_1_ifcvalue;
	public static jsdai.dictionary.EData_type _st_list_1_ifcplaneanglemeasure;
	public static jsdai.dictionary.EData_type _st_list_1_ifcluminousintensitydistributionmeasure;
	public static jsdai.dictionary.EData_type _st_list_1_ifclightdistributiondata;
	public static jsdai.dictionary.EData_type _st_set_1_ifcclassificationselect;
	public static jsdai.dictionary.EData_type _st_set_1_ifcmaterialconstituent;
	public static jsdai.dictionary.EData_type _st_list_1_ifcmateriallayer;
	public static jsdai.dictionary.EData_type _st_array_1_2_ifclengthmeasure;
	public static jsdai.dictionary.EData_type _st_list_1_ifcmaterial;
	public static jsdai.dictionary.EData_type _st_list_1_ifcmaterialprofile;
	public static jsdai.dictionary.EData_type _st_set_1_ifcmaterial;
	public static jsdai.dictionary.EData_type _st_list_1_ifcconstraint;
	public static jsdai.dictionary.EData_type _st_list_1_ifcactorrole;
	public static jsdai.dictionary.EData_type _st_list_1_ifcaddress;
	public static jsdai.dictionary.EData_type _st_set_1_ifcorganization;
	public static jsdai.dictionary.EData_type _st_list_1_unique_ifcorientededge;
	public static jsdai.dictionary.EData_type _st_list_1_ifclabel;
	public static jsdai.dictionary.EData_type _st_list_1_binary;
	public static jsdai.dictionary.EData_type _st_list_3_unique_ifccartesianpoint;
	public static jsdai.dictionary.EData_type _st_set_1_ifclayereditem;
	public static jsdai.dictionary.EData_type _st_set_0_ifcpresentationstyle;
	public static jsdai.dictionary.EData_type _st_set_1_ifcpresentationstyleselect;
	public static jsdai.dictionary.EData_type _st_list_1_ifcrepresentation;
	public static jsdai.dictionary.EData_type _st_list_1_unique_ifcvalue;
	public static jsdai.dictionary.EData_type _st_list_2_real;
	public static jsdai.dictionary.EData_type _st_list_2_list_2_real;
	public static jsdai.dictionary.EData_type _st_set_1_ifcdayinmonthnumber;
	public static jsdai.dictionary.EData_type _st_set_1_ifcdayinweeknumber;
	public static jsdai.dictionary.EData_type _st_set_1_ifcmonthinyearnumber;
	public static jsdai.dictionary.EData_type _st_list_1_ifctimeperiod;
	public static jsdai.dictionary.EData_type _st_list_1_ifctimeseriesvalue;
	public static jsdai.dictionary.EData_type _st_list_1_ifcsectionreinforcementproperties;
	public static jsdai.dictionary.EData_type _st_list_1_ifcbendingparameterselect;
	public static jsdai.dictionary.EData_type _st_set_1_ifcobjectdefinition;
	public static jsdai.dictionary.EData_type _st_set_1_ifcdefinitionselect;
	public static jsdai.dictionary.EData_type _st_list_0_number;
	public static jsdai.dictionary.EData_type _st_set_1_ifcelement;
	public static jsdai.dictionary.EData_type _st_set_1_ifcproduct;
	public static jsdai.dictionary.EData_type _st_set_1_ifccovering;
	public static jsdai.dictionary.EData_type _st_set_1_ifcobject;
	public static jsdai.dictionary.EData_type _st_set_1_1_ifcobjectdefinition;
	public static jsdai.dictionary.EData_type _st_set_1_ifcpropertysetdefinition;
	public static jsdai.dictionary.EData_type _st_set_1_ifcdistributioncontrolelement;
	public static jsdai.dictionary.EData_type _st_list_1_ifcobjectdefinition;
	public static jsdai.dictionary.EData_type _st_set_1_ifcspatialelement;
	public static jsdai.dictionary.EData_type _st_set_1_ifcrepresentationitem;
	public static jsdai.dictionary.EData_type _st_set_1_ifcreinforcementbarproperties;
	public static jsdai.dictionary.EData_type _st_list_2_ifcprofiledef;
	public static jsdai.dictionary.EData_type _st_list_2_ifcaxis2placement3d;
	public static jsdai.dictionary.EData_type _st_list_1_ifcshapemodel;
	public static jsdai.dictionary.EData_type _st_set_1_ifcshell;
	public static jsdai.dictionary.EData_type _st_set_1_ifcstructuralloadgroup;
	public static jsdai.dictionary.EData_type _st_set_1_ifcstructuralresultgroup;
	public static jsdai.dictionary.EData_type _st_list_3_3_ifcratiomeasure;
	public static jsdai.dictionary.EData_type _st_list_1_ifcstructuralloadorresult;
	public static jsdai.dictionary.EData_type _st_list_1_unique_list_1_2_ifclengthmeasure;
	public static jsdai.dictionary.EData_type _st_set_1_ifcstyleassignmentselect;
	public static jsdai.dictionary.EData_type _st_list_2_3_ifclengthmeasure;
	public static jsdai.dictionary.EData_type _st_set_1_5_ifcsurfacestyleelementselect;
	public static jsdai.dictionary.EData_type _st_list_1_ifcsurfacetexture;
	public static jsdai.dictionary.EData_type _st_list_1_ifctablerow;
	public static jsdai.dictionary.EData_type _st_list_1_ifctablecolumn;
	public static jsdai.dictionary.EData_type _st_list_1_ifcurireference;
	public static jsdai.dictionary.EData_type _st_list_1_list_3_3_ifcparametervalue;
	public static jsdai.dictionary.EData_type _st_list_1_ifctextfontname;
	public static jsdai.dictionary.EData_type _st_list_1_ifcreal;
	public static jsdai.dictionary.EData_type _st_list_3_ifctexturevertex;
	public static jsdai.dictionary.EData_type _st_list_2_2_ifcparametervalue;
	public static jsdai.dictionary.EData_type _st_list_1_list_2_2_ifcparametervalue;
	public static jsdai.dictionary.EData_type _st_set_1_2_ifctrimmingselect;
	public static jsdai.dictionary.EData_type _st_list_1_unique_ifcrepresentationmap;
	public static jsdai.dictionary.EData_type _st_set_1_ifcunit;
	public static jsdai.dictionary.EData_type _st_list_2_2_unique_ifcgridaxis;
	public static jsdai.dictionary.EData_type _st_set_1_ifcworktime;
	public static jsdai.dictionary.EData_type _st_list_2_2_ifcdirection;
	public static jsdai.dictionary.EData_type _st_list_3_3_ifcdirection;
	public static jsdai.dictionary.EData_type _st_array_0_2pdb0_ifccartesianpoint;
	public static jsdai.dictionary.EData_type _st_array_0_2pdb1_array_0_2pdb2_ifccartesianpoint;
	public static jsdai.dictionary.EData_type _st_set_0_1_ifcsurface;
	public static jsdai.dictionary.EData_type _st_array_0_2pdb3_real;
	public static jsdai.dictionary.EData_type _st_array_0_2pdb4_array_0_2pdb5_real;
	public static jsdai.dictionary.EData_type _st_generallist_2_3_ifcdirection;
	public static jsdai.dictionary.EData_type _st_generallist_2_2_ifcdirection;
	public static jsdai.dictionary.EData_type _st_generallist_3_3_ifcdirection;
	public static jsdai.dictionary.EData_type _st_generallist_0_integer;
	public static jsdai.dictionary.EData_type _st_generallist_0_ifcparametervalue;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcfillstyleselect;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcobjectdefinition;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcunit;
	public static jsdai.dictionary.EData_type _st_generalset_0_ifcunitenum;
	public static jsdai.dictionary.EData_type _st_generalset_0_ifcderivedunitenum;
	public static jsdai.dictionary.EData_type _st_generallist_3_3_real;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcderivedunitelement;
	public static jsdai.dictionary.EData_type _st_generalset_0_2_ifcsurface;
	public static jsdai.dictionary.EData_type _st_generalarray_0_2unset_generic;
	public static jsdai.dictionary.EData_type _st_generalarray_1pdb11_2pdb12_generic;
	public static jsdai.dictionary.EData_type _st_generallist_1_generic;
	public static jsdai.dictionary.EData_type _st_generallist_1_generallist_1_generic;
	public static jsdai.dictionary.EData_type _st_generalarray_1pdb17_2pdb18_generic;
	public static jsdai.dictionary.EData_type _st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic;
	public static jsdai.dictionary.EData_type _st_generalarray_1pdb21_2pdb22_generic;
	public static jsdai.dictionary.EData_type _st_generalarray_1pdb19_2pdb20_generalarray_1pdb21_2pdb22_generic;
	public static jsdai.dictionary.EData_type _st_generalset_0_ifcrepresentationitem;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcproperty;
	public static jsdai.dictionary.EData_type _st_generalset_0_ifcidentifier;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcpropertytemplate;
	public static jsdai.dictionary.EData_type _st_generalset_1_ifcphysicalquantity;
	public static jsdai.dictionary.EData_type _st_generalset_0_ifclabel;
	public static jsdai.dictionary.EData_type _st_population_ifcgeometricrepresentationcontext;
	public static jsdai.dictionary.EData_type _st_population_ifcproject;

	static void initNonDefinedDataTypes(){
		_st_generallist_0_ifcparametervalue = SdaiSession.findDataType("_GENERALLIST_0_IfcParameterValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcsurfacetexture = SdaiSession.findDataType("_LIST_1_IfcSurfaceTexture", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_ifclabel = SdaiSession.findDataType("_GENERALSET_0_IfcLabel", jsdai.SIfc4.SIfc4.class);
		_st_list_1_list_3_3_ifcnormalisedratiomeasure = SdaiSession.findDataType("_LIST_1_LIST_3_3_IfcNormalisedRatioMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcresourceobjectselect = SdaiSession.findDataType("_SET_1_IfcResourceObjectSelect", jsdai.SIfc4.SIfc4.class);
		_st_list_1_unique_list_1_2_ifclengthmeasure = SdaiSession.findDataType("_LIST_1_UNIQUE_LIST_1_2_IfcLengthMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcdayinweeknumber = SdaiSession.findDataType("_SET_1_IfcDayInWeekNumber", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcworktime = SdaiSession.findDataType("_SET_1_IfcWorkTime", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcfillstyleselect = SdaiSession.findDataType("_SET_1_IfcFillStyleSelect", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcobjectdefinition = SdaiSession.findDataType("_SET_1_IfcObjectDefinition", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcfacebound = SdaiSession.findDataType("_SET_1_IfcFaceBound", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcspatialelement = SdaiSession.findDataType("_SET_1_IfcSpatialElement", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_1pdb11_2pdb12_generic = SdaiSession.findDataType("_GENERALARRAY_1PDB11_2PDB12_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_array_0_2pdb1_array_0_2pdb2_ifccartesianpoint = SdaiSession.findDataType("_ARRAY_0_2PDB1_ARRAY_0_2PDB2_IfcCartesianPoint", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcmaterial = SdaiSession.findDataType("_SET_1_IfcMaterial", jsdai.SIfc4.SIfc4.class);
		_st_array_0_2pdb3_real = SdaiSession.findDataType("_ARRAY_0_2PDB3_REAL", jsdai.SIfc4.SIfc4.class);
		_st_set_1_1_ifcobjectdefinition = SdaiSession.findDataType("_SET_1_1_IfcObjectDefinition", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcrepresentationitem = SdaiSession.findDataType("_SET_1_IfcRepresentationItem", jsdai.SIfc4.SIfc4.class);
		_st_list_1_3_ifclengthmeasure = SdaiSession.findDataType("_LIST_1_3_IfcLengthMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcproduct = SdaiSession.findDataType("_SET_1_IfcProduct", jsdai.SIfc4.SIfc4.class);
		_st_list_2_3_ifclengthmeasure = SdaiSession.findDataType("_LIST_2_3_IfcLengthMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcproperty = SdaiSession.findDataType("_SET_1_IfcProperty", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifctextfontname = SdaiSession.findDataType("_LIST_1_IfcTextFontName", jsdai.SIfc4.SIfc4.class);
		_st_list_3_ifctexturevertex = SdaiSession.findDataType("_LIST_3_IfcTextureVertex", jsdai.SIfc4.SIfc4.class);
		_st_list_2_ifcparametervalue = SdaiSession.findDataType("_LIST_2_IfcParameterValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcidentifier = SdaiSession.findDataType("_LIST_1_IfcIdentifier", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcapproval = SdaiSession.findDataType("_SET_1_IfcApproval", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcorientededge = SdaiSession.findDataType("_LIST_1_IfcOrientedEdge", jsdai.SIfc4.SIfc4.class);
		_st_list_2_3_real = SdaiSession.findDataType("_LIST_2_3_REAL", jsdai.SIfc4.SIfc4.class);
		_st_set_0_ifcpresentationstyle = SdaiSession.findDataType("_SET_0_IfcPresentationStyle", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcunit = SdaiSession.findDataType("_SET_1_IfcUnit", jsdai.SIfc4.SIfc4.class);
		_st_list_2_2_ifcvector = SdaiSession.findDataType("_LIST_2_2_IfcVector", jsdai.SIfc4.SIfc4.class);
		_st_list_2_2_ifcparametervalue = SdaiSession.findDataType("_LIST_2_2_IfcParameterValue", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcpropertysetdefinition = SdaiSession.findDataType("_SET_1_IfcPropertySetDefinition", jsdai.SIfc4.SIfc4.class);
		_st_list_1_integer = SdaiSession.findDataType("_LIST_1_INTEGER", jsdai.SIfc4.SIfc4.class);
		_st_list_2_list_2_real = SdaiSession.findDataType("_LIST_2_LIST_2_REAL", jsdai.SIfc4.SIfc4.class);
		_st_list_1_unique_ifcorientededge = SdaiSession.findDataType("_LIST_1_UNIQUE_IfcOrientedEdge", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcderivedunitelement = SdaiSession.findDataType("_GENERALSET_1_IfcDerivedUnitElement", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcunit = SdaiSession.findDataType("_GENERALSET_1_IfcUnit", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifclightdistributiondata = SdaiSession.findDataType("_LIST_1_IfcLightDistributionData", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcderivedunitelement = SdaiSession.findDataType("_SET_1_IfcDerivedUnitElement", jsdai.SIfc4.SIfc4.class);
		_st_generallist_3_3_ifcdirection = SdaiSession.findDataType("_GENERALLIST_3_3_IfcDirection", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcphysicalquantity = SdaiSession.findDataType("_GENERALSET_1_IfcPhysicalQuantity", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcirregulartimeseriesvalue = SdaiSession.findDataType("_LIST_1_IfcIrregularTimeSeriesValue", jsdai.SIfc4.SIfc4.class);
		 _st_population_ifcproject = SdaiSession.findDataType("_POPULATION_IfcProject", jsdai.SIfc4.SIfc4.class);
		_st_list_2_ifcaxis2placement3d = SdaiSession.findDataType("_LIST_2_IfcAxis2Placement3D", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcproperty = SdaiSession.findDataType("_GENERALSET_1_IfcProperty", jsdai.SIfc4.SIfc4.class);
		_st_list_1_unique_ifcrepresentationmap = SdaiSession.findDataType("_LIST_1_UNIQUE_IfcRepresentationMap", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifctimeperiod = SdaiSession.findDataType("_LIST_1_IfcTimePeriod", jsdai.SIfc4.SIfc4.class);
		_st_list_3_3_ifcratiomeasure = SdaiSession.findDataType("_LIST_3_3_IfcRatioMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcstyleassignmentselect = SdaiSession.findDataType("_SET_1_IfcStyleAssignmentSelect", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_1pdb15_2pdb16_generalarray_1pdb17_2pdb18_generic = SdaiSession.findDataType("_GENERALARRAY_1PDB15_2PDB16_GENERALARRAY_1PDB17_2PDB18_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_list_3_3_ifcdirection = SdaiSession.findDataType("_LIST_3_3_IfcDirection", jsdai.SIfc4.SIfc4.class);
		_st_array_0_2pdb4_array_0_2pdb5_real = SdaiSession.findDataType("_ARRAY_0_2PDB4_ARRAY_0_2PDB5_REAL", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcactorselect = SdaiSession.findDataType("_SET_1_IfcActorSelect", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_1pdb19_2pdb20_generalarray_1pdb21_2pdb22_generic = SdaiSession.findDataType("_GENERALARRAY_1PDB19_2PDB20_GENERALARRAY_1PDB21_2PDB22_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_0_2unset_generic = SdaiSession.findDataType("_GENERALARRAY_0_2UNSET_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_list_2_integer = SdaiSession.findDataType("_LIST_2_INTEGER", jsdai.SIfc4.SIfc4.class);
		_st_set_0_ifccurve = SdaiSession.findDataType("_SET_0_IfcCurve", jsdai.SIfc4.SIfc4.class);
		_st_list_2_2_ifcdirection = SdaiSession.findDataType("_LIST_2_2_IfcDirection", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcactorrole = SdaiSession.findDataType("_LIST_1_IfcActorRole", jsdai.SIfc4.SIfc4.class);
		_st_list_2_ifccartesianpoint = SdaiSession.findDataType("_LIST_2_IfcCartesianPoint", jsdai.SIfc4.SIfc4.class);
		 _st_population_ifcgeometricrepresentationcontext = SdaiSession.findDataType("_POPULATION_IfcGeometricRepresentationContext", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcobjectdefinition = SdaiSession.findDataType("_GENERALSET_1_IfcObjectDefinition", jsdai.SIfc4.SIfc4.class);
		_st_generallist_0_integer = SdaiSession.findDataType("_GENERALLIST_0_INTEGER", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcstructuralloadgroup = SdaiSession.findDataType("_SET_1_IfcStructuralLoadGroup", jsdai.SIfc4.SIfc4.class);
		_st_array_0_2pdb0_ifccartesianpoint = SdaiSession.findDataType("_ARRAY_0_2PDB0_IfcCartesianPoint", jsdai.SIfc4.SIfc4.class);
		_st_generallist_3_3_real = SdaiSession.findDataType("_GENERALLIST_3_3_REAL", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcface = SdaiSession.findDataType("_SET_1_IfcFace", jsdai.SIfc4.SIfc4.class);
		_st_set_1_2_ifctrimmingselect = SdaiSession.findDataType("_SET_1_2_IfcTrimmingSelect", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifccurvestylefontpattern = SdaiSession.findDataType("_LIST_1_IfcCurveStyleFontPattern", jsdai.SIfc4.SIfc4.class);
		_st_list_1_unique_ifcvalue = SdaiSession.findDataType("_LIST_1_UNIQUE_IfcValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcmaterial = SdaiSession.findDataType("_LIST_1_IfcMaterial", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcaddress = SdaiSession.findDataType("_LIST_1_IfcAddress", jsdai.SIfc4.SIfc4.class);
		_st_set_2_ifcprofiledef = SdaiSession.findDataType("_SET_2_IfcProfileDef", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifccostvalue = SdaiSession.findDataType("_LIST_1_IfcCostValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_list_2_2_ifcparametervalue = SdaiSession.findDataType("_LIST_1_LIST_2_2_IfcParameterValue", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifccurve = SdaiSession.findDataType("_SET_1_IfcCurve", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifclabel = SdaiSession.findDataType("_LIST_1_IfcLabel", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_1pdb17_2pdb18_generic = SdaiSession.findDataType("_GENERALARRAY_1PDB17_2PDB18_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_ifcunitenum = SdaiSession.findDataType("_GENERALSET_0_IfcUnitEnum", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcstyleditem = SdaiSession.findDataType("_SET_1_IfcStyledItem", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcluminousintensitydistributionmeasure = SdaiSession.findDataType("_LIST_1_IfcLuminousIntensityDistributionMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcdistributioncontrolelement = SdaiSession.findDataType("_SET_1_IfcDistributionControlElement", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcshapemodel = SdaiSession.findDataType("_LIST_1_IfcShapeModel", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcfillstyleselect = SdaiSession.findDataType("_GENERALSET_1_IfcFillStyleSelect", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcmaterialconstituent = SdaiSession.findDataType("_SET_1_IfcMaterialConstituent", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifctablecolumn = SdaiSession.findDataType("_LIST_1_IfcTableColumn", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcstructuralloadorresult = SdaiSession.findDataType("_LIST_1_IfcStructuralLoadOrResult", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcshell = SdaiSession.findDataType("_SET_1_IfcShell", jsdai.SIfc4.SIfc4.class);
		_st_generallist_2_2_ifcdirection = SdaiSession.findDataType("_GENERALLIST_2_2_IfcDirection", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifctimeseriesvalue = SdaiSession.findDataType("_LIST_1_IfcTimeSeriesValue", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcgeometricsetselect = SdaiSession.findDataType("_SET_1_IfcGeometricSetSelect", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_ifcderivedunitenum = SdaiSession.findDataType("_GENERALSET_0_IfcDerivedUnitEnum", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcvalue = SdaiSession.findDataType("_LIST_1_IfcValue", jsdai.SIfc4.SIfc4.class);
		_st_generalset_1_ifcpropertytemplate = SdaiSession.findDataType("_GENERALSET_1_IfcPropertyTemplate", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcorganization = SdaiSession.findDataType("_SET_1_IfcOrganization", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_2_ifcsurface = SdaiSession.findDataType("_GENERALSET_0_2_IfcSurface", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifccovering = SdaiSession.findDataType("_SET_1_IfcCovering", jsdai.SIfc4.SIfc4.class);
		_st_set_0_1_ifcsurface = SdaiSession.findDataType("_SET_0_1_IfcSurface", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcphysicalquantity = SdaiSession.findDataType("_LIST_1_IfcPhysicalQuantity", jsdai.SIfc4.SIfc4.class);
		_st_array_1_2_ifclengthmeasure = SdaiSession.findDataType("_ARRAY_1_2_IfcLengthMeasure", jsdai.SIfc4.SIfc4.class);
		_st_list_1_binary = SdaiSession.findDataType("_LIST_1_BINARY", jsdai.SIfc4.SIfc4.class);
		_st_set_1_5_ifcsurfacestyleelementselect = SdaiSession.findDataType("_SET_1_5_IfcSurfaceStyleElementSelect", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcdocumentinformation = SdaiSession.findDataType("_SET_1_IfcDocumentInformation", jsdai.SIfc4.SIfc4.class);
		_st_list_1_list_3_3_integer = SdaiSession.findDataType("_LIST_1_LIST_3_3_INTEGER", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcelement = SdaiSession.findDataType("_SET_1_IfcElement", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifccompositecurvesegment = SdaiSession.findDataType("_LIST_1_IfcCompositeCurveSegment", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcconnectedfaceset = SdaiSession.findDataType("_SET_1_IfcConnectedFaceSet", jsdai.SIfc4.SIfc4.class);
		_st_list_2_list_2_ifccartesianpoint = SdaiSession.findDataType("_LIST_2_LIST_2_IfcCartesianPoint", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcrepresentationcontext = SdaiSession.findDataType("_SET_1_IfcRepresentationContext", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcdefinitionselect = SdaiSession.findDataType("_SET_1_IfcDefinitionSelect", jsdai.SIfc4.SIfc4.class);
		_st_generallist_2_3_ifcdirection = SdaiSession.findDataType("_GENERALLIST_2_3_IfcDirection", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcmateriallayer = SdaiSession.findDataType("_LIST_1_IfcMaterialLayer", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcboundarycurve = SdaiSession.findDataType("_SET_1_IfcBoundaryCurve", jsdai.SIfc4.SIfc4.class);
		_st_list_2_real = SdaiSession.findDataType("_LIST_2_REAL", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcobjectdefinition = SdaiSession.findDataType("_LIST_1_IfcObjectDefinition", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcdayinmonthnumber = SdaiSession.findDataType("_SET_1_IfcDayInMonthNumber", jsdai.SIfc4.SIfc4.class);
		_st_list_2_ifcprofiledef = SdaiSession.findDataType("_LIST_2_IfcProfileDef", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcclosedshell = SdaiSession.findDataType("_SET_1_IfcClosedShell", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcobject = SdaiSession.findDataType("_SET_1_IfcObject", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcreinforcementbarproperties = SdaiSession.findDataType("_SET_1_IfcReinforcementBarProperties", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcpropertytemplate = SdaiSession.findDataType("_SET_1_IfcPropertyTemplate", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcsectionreinforcementproperties = SdaiSession.findDataType("_LIST_1_IfcSectionReinforcementProperties", jsdai.SIfc4.SIfc4.class);
		_st_list_3_unique_ifccartesianpoint = SdaiSession.findDataType("_LIST_3_UNIQUE_IfcCartesianPoint", jsdai.SIfc4.SIfc4.class);
		_st_list_2_2_unique_ifcgridaxis = SdaiSession.findDataType("_LIST_2_2_UNIQUE_IfcGridAxis", jsdai.SIfc4.SIfc4.class);
		_st_list_0_number = SdaiSession.findDataType("_LIST_0_NUMBER", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcbendingparameterselect = SdaiSession.findDataType("_LIST_1_IfcBendingParameterSelect", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_ifcidentifier = SdaiSession.findDataType("_GENERALSET_0_IfcIdentifier", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcconstraint = SdaiSession.findDataType("_LIST_1_IfcConstraint", jsdai.SIfc4.SIfc4.class);
		_st_generallist_1_generic = SdaiSession.findDataType("_GENERALLIST_1_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcstructuralresultgroup = SdaiSession.findDataType("_SET_1_IfcStructuralResultGroup", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcclassificationselect = SdaiSession.findDataType("_SET_1_IfcClassificationSelect", jsdai.SIfc4.SIfc4.class);
		_st_list_1_list_3_3_ifcparametervalue = SdaiSession.findDataType("_LIST_1_LIST_3_3_IfcParameterValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_list_3_3_ifclengthmeasure = SdaiSession.findDataType("_LIST_1_LIST_3_3_IfcLengthMeasure", jsdai.SIfc4.SIfc4.class);
		_st_generallist_1_generallist_1_generic = SdaiSession.findDataType("_GENERALLIST_1_GENERALLIST_1_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcappliedvalue = SdaiSession.findDataType("_LIST_1_IfcAppliedValue", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcurireference = SdaiSession.findDataType("_LIST_1_IfcURIReference", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcrepresentation = SdaiSession.findDataType("_LIST_1_IfcRepresentation", jsdai.SIfc4.SIfc4.class);
		_st_list_1_unique_ifcgridaxis = SdaiSession.findDataType("_LIST_1_UNIQUE_IfcGridAxis", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcmaterialprofile = SdaiSession.findDataType("_LIST_1_IfcMaterialProfile", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcmonthinyearnumber = SdaiSession.findDataType("_SET_1_IfcMonthInYearNumber", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcphysicalquantity = SdaiSession.findDataType("_SET_1_IfcPhysicalQuantity", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcpresentationstyleselect = SdaiSession.findDataType("_SET_1_IfcPresentationStyleSelect", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcplaneanglemeasure = SdaiSession.findDataType("_LIST_1_IfcPlaneAngleMeasure", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifclayereditem = SdaiSession.findDataType("_SET_1_IfcLayeredItem", jsdai.SIfc4.SIfc4.class);
		_st_generalset_0_ifcrepresentationitem = SdaiSession.findDataType("_GENERALSET_0_IfcRepresentationItem", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifcreal = SdaiSession.findDataType("_LIST_1_IfcReal", jsdai.SIfc4.SIfc4.class);
		_st_generalarray_1pdb21_2pdb22_generic = SdaiSession.findDataType("_GENERALARRAY_1PDB21_2PDB22_GENERIC", jsdai.SIfc4.SIfc4.class);
		_st_set_1_ifcperson = SdaiSession.findDataType("_SET_1_IfcPerson", jsdai.SIfc4.SIfc4.class);
		_st_list_1_ifctablerow = SdaiSession.findDataType("_LIST_1_IfcTableRow", jsdai.SIfc4.SIfc4.class);
	}

}
