/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRelConnectsWithRealizingElements

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrelconnectswithrealizingelements extends CIfcrelconnectselements implements EIfcrelconnectswithrealizingelements {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrelconnectswithrealizingelements.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// ConnectionGeometry: protected Object a4;   ConnectionGeometry - java inheritance - ENTITY IfcConnectionGeometry
	// RelatingElement: protected Object a5;   RelatingElement - java inheritance - ENTITY IfcElement
	// RelatedElement: protected Object a6;   RelatedElement - java inheritance - ENTITY IfcElement
	protected AIfcelement a7; // RealizingElements - current entity - SET OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected String a8; // ConnectionType - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// ConnectionGeometry - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	// protected Object a4;
	// RelatingElement - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// protected Object a5;
	// RelatedElement - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// protected Object a6;
	// RealizingElements - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected AIfcelement a7;
	// ConnectionType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected String a8;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		changeReferencesAggregate(a7, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5401=EXPLICIT_ATTRIBUTE('ConnectionGeometry',#5399,0,#3726,$,.T.);
	//<01> generating methods for consolidated attribute:  ConnectionGeometry
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): ConnectionGeometry, base type: entity IfcConnectionGeometry
	public static int usedinConnectiongeometry(EIfcrelconnectselements type, EIfcconnectiongeometry instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	//going through all the attributes: #5402=EXPLICIT_ATTRIBUTE('RelatingElement',#5399,1,#4136,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatingElement
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): RelatingElement, base type: entity IfcElement
	public static int usedinRelatingelement(EIfcrelconnectselements type, EIfcelement instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a5$, domain, result);
	}
	//going through all the attributes: #5403=EXPLICIT_ATTRIBUTE('RelatedElement',#5399,2,#4136,$,.F.);
	//<01> generating methods for consolidated attribute:  RelatedElement
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): RelatedElement, base type: entity IfcElement
	public static int usedinRelatedelement(EIfcrelconnectselements type, EIfcelement instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a6$, domain, result);
	}
	//going through all the attributes: #5436=EXPLICIT_ATTRIBUTE('RealizingElements',#5434,0,#7089,$,.F.);
	//<01> generating methods for consolidated attribute:  RealizingElements
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: RealizingElements, base type: SET OF ENTITY
	public static int usedinRealizingelements(EIfcrelconnectswithrealizingelements type, EIfcelement instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a7$, domain, result);
	}
	public boolean testRealizingelements(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return test_aggregate(a7);
	}
	public AIfcelement getRealizingelements(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return (AIfcelement)get_aggregate(a7);
	}
	public AIfcelement createRealizingelements(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		a7 = (AIfcelement)create_aggregate_class(a7, a7$,  AIfcelement.class, 0);
		return a7;
	}
	public void unsetRealizingelements(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		unset_aggregate(a7);
		a7 = null;
	}
	public static jsdai.dictionary.EAttribute attributeRealizingelements(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #5437=EXPLICIT_ATTRIBUTE('ConnectionType',#5434,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ConnectionType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ConnectionType, base type: STRING
	public boolean testConnectiontype(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return test_string(a8);
	}
	public String getConnectiontype(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return get_string(a8);
	}
	public void setConnectiontype(EIfcrelconnectswithrealizingelements type, String value) throws SdaiException {
		a8 = set_string(value);
	}
	public void unsetConnectiontype(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		a8 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeConnectiontype(EIfcrelconnectswithrealizingelements type) throws SdaiException {
		return a8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			a5 = unset_instance(a5);
			a6 = unset_instance(a6);
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			a8 = null;
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getInstance(1, this, a5$);
		a6 = av.entityValues[2].getInstance(2, this, a6$);
		a7 = (AIfcelement)av.entityValues[3].getInstanceAggregate(0, a7$, this);
		a8 = av.entityValues[3].getString(1);
		a0 = av.entityValues[4].getString(0);
		a1 = av.entityValues[4].getInstance(1, this, a1$);
		a2 = av.entityValues[4].getString(2);
		a3 = av.entityValues[4].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = unset_instance(a4);
			a5 = unset_instance(a5);
			a6 = unset_instance(a6);
			if (a7 instanceof CAggregate)
				a7.unsetAll();
			a7 = null;
			a8 = null;
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[2].getInstance(0, this, a4$);
		a5 = av.entityValues[2].getInstance(1, this, a5$);
		a6 = av.entityValues[2].getInstance(2, this, a6$);
		a7 = (AIfcelement)av.entityValues[3].getInstanceAggregate(0, a7$, this);
		a8 = av.entityValues[3].getString(1);
		a0 = av.entityValues[4].getString(0);
		a1 = av.entityValues[4].getInstance(1, this, a1$);
		a2 = av.entityValues[4].getString(2);
		a3 = av.entityValues[4].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelConnectsElements
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstance(1, a5);
		av.entityValues[2].setInstance(2, a6);
		// partial entity: IfcRelConnectsWithRealizingElements
		av.entityValues[3].setInstanceAggregate(0, a7);
		av.entityValues[3].setString(1, a8);
		// partial entity: IfcRoot
		av.entityValues[4].setString(0, a0);
		av.entityValues[4].setInstance(1, a1);
		av.entityValues[4].setString(2, a2);
		av.entityValues[4].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRelationship
		// partial entity: IfcRelConnects
		// partial entity: IfcRelConnectsElements
		av.entityValues[2].setInstance(0, a4);
		av.entityValues[2].setInstance(1, a5);
		av.entityValues[2].setInstance(2, a6);
		// partial entity: IfcRelConnectsWithRealizingElements
		av.entityValues[3].setInstanceAggregate(0, a7);
		av.entityValues[3].setString(1, a8);
		// partial entity: IfcRoot
		av.entityValues[4].setString(0, a0);
		av.entityValues[4].setInstance(1, a1);
		av.entityValues[4].setString(2, a2);
		av.entityValues[4].setString(3, a3);
	}
}
