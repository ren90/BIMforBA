/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcConstraint

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcconstraint extends CEntity implements EIfcconstraint {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcconstraint.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a2; // ConstraintGrade - current entity - ENUMERATION IfcConstraintEnum
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a3; // ConstraintSource - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected Object a4; // CreatingActor - current entity - SELECT IfcActorSelect
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // CreationTime - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a6; // UserDefinedGrade - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	// HasExternalReferences: protected Object  - inverse - current -  ENTITY IfcExternalReferenceRelationship
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// PropertiesForConstraint: protected Object  - inverse - current -  ENTITY IfcResourceConstraintRelationship
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// ConstraintGrade - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// ConstraintSource - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// CreatingActor - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;
	// CreationTime - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// UserDefinedGrade - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a6;
	// HasExternalReferences - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// PropertiesForConstraint - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a4 == old) {
			a4 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a4 == old) {
			a4 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3747=EXPLICIT_ATTRIBUTE('Name',#3745,0,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfcconstraint type) throws SdaiException {
		return test_string(a0);
	}
	public String getName(EIfcconstraint type) throws SdaiException {
		return get_string(a0);
	}
	public void setName(EIfcconstraint type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetName(EIfcconstraint type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfcconstraint type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3748=EXPLICIT_ATTRIBUTE('Description',#3745,1,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcconstraint type) throws SdaiException {
		return test_string(a1);
	}
	public String getDescription(EIfcconstraint type) throws SdaiException {
		return get_string(a1);
	}
	public void setDescription(EIfcconstraint type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetDescription(EIfcconstraint type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcconstraint type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3749=EXPLICIT_ATTRIBUTE('ConstraintGrade',#3745,2,#2775,$,.F.);
	//<01> generating methods for consolidated attribute:  ConstraintGrade
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:ConstraintGrade, base type: ENUMERATION
	public boolean testConstraintgrade(EIfcconstraint type) throws SdaiException {
		return test_enumeration(a2);
	}
	public int getConstraintgrade(EIfcconstraint type) throws SdaiException {
		return get_enumeration(a2);
	}
	public void setConstraintgrade(EIfcconstraint type, int value) throws SdaiException {
		a2 = set_enumeration(value, a2$);
	}
	public void unsetConstraintgrade(EIfcconstraint type) throws SdaiException {
		a2 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeConstraintgrade(EIfcconstraint type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3750=EXPLICIT_ATTRIBUTE('ConstraintSource',#3745,3,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ConstraintSource
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ConstraintSource, base type: STRING
	public boolean testConstraintsource(EIfcconstraint type) throws SdaiException {
		return test_string(a3);
	}
	public String getConstraintsource(EIfcconstraint type) throws SdaiException {
		return get_string(a3);
	}
	public void setConstraintsource(EIfcconstraint type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetConstraintsource(EIfcconstraint type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeConstraintsource(EIfcconstraint type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #3751=EXPLICIT_ATTRIBUTE('CreatingActor',#3745,4,#3111,$,.T.);
	//<01> generating methods for consolidated attribute:  CreatingActor
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: CreatingActor
	public static int usedinCreatingactor(EIfcconstraint type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testCreatingactor(EIfcconstraint type) throws SdaiException {
		return test_instance(a4);
	}

	public EEntity getCreatingactor(EIfcconstraint type) throws SdaiException { // case 1
		return get_instance_select(a4);
	}

	public void setCreatingactor(EIfcconstraint type, EEntity value) throws SdaiException { // case 1
		a4 = set_instance(a4, value);
	}

	public void unsetCreatingactor(EIfcconstraint type) throws SdaiException {
		a4 = unset_instance(a4);
	}

	public static jsdai.dictionary.EAttribute attributeCreatingactor(EIfcconstraint type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #3752=EXPLICIT_ATTRIBUTE('CreationTime',#3745,5,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  CreationTime
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: CreationTime, base type: STRING
	public boolean testCreationtime(EIfcconstraint type) throws SdaiException {
		return test_string(a5);
	}
	public String getCreationtime(EIfcconstraint type) throws SdaiException {
		return get_string(a5);
	}
	public void setCreationtime(EIfcconstraint type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetCreationtime(EIfcconstraint type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeCreationtime(EIfcconstraint type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #3753=EXPLICIT_ATTRIBUTE('UserDefinedGrade',#3745,6,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedGrade
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: UserDefinedGrade, base type: STRING
	public boolean testUserdefinedgrade(EIfcconstraint type) throws SdaiException {
		return test_string(a6);
	}
	public String getUserdefinedgrade(EIfcconstraint type) throws SdaiException {
		return get_string(a6);
	}
	public void setUserdefinedgrade(EIfcconstraint type, String value) throws SdaiException {
		a6 = set_string(value);
	}
	public void unsetUserdefinedgrade(EIfcconstraint type) throws SdaiException {
		a6 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeUserdefinedgrade(EIfcconstraint type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #3754=INVERSE_ATTRIBUTE('HasExternalReferences',#3745,0,#4231,$,#4234,#7975,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReferences
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasExternalReferences : SET[0:-2147483648] OF IfcExternalReferenceRelationship FOR RelatedResourceObjects
	public AIfcexternalreferencerelationship getHasexternalreferences(EIfcconstraint type, ASdaiModel domain) throws SdaiException {
		AIfcexternalreferencerelationship result = (AIfcexternalreferencerelationship)get_inverse_aggregate(i0$);
		CIfcexternalreferencerelationship.usedinRelatedresourceobjects(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasexternalreferences(EIfcconstraint type) throws SdaiException {
		return i0$;
	}

	//going through all the attributes: #3755=INVERSE_ATTRIBUTE('PropertiesForConstraint',#3745,1,#5569,$,#5571,#7977,$,.F.);
	//<01> generating methods for consolidated attribute:  PropertiesForConstraint
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - PropertiesForConstraint : SET[0:-2147483648] OF IfcResourceConstraintRelationship FOR RelatingConstraint
	public AIfcresourceconstraintrelationship getPropertiesforconstraint(EIfcconstraint type, ASdaiModel domain) throws SdaiException {
		AIfcresourceconstraintrelationship result = (AIfcresourceconstraintrelationship)get_inverse_aggregate(i1$);
		CIfcresourceconstraintrelationship.usedinRelatingconstraint(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributePropertiesforconstraint(EIfcconstraint type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = 0;
			a3 = null;
			a4 = unset_instance(a4);
			a5 = null;
			a6 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getEnumeration(2, a2$);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[0].getInstance(4, this, a4$);
		a5 = av.entityValues[0].getString(5);
		a6 = av.entityValues[0].getString(6);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = 0;
			a3 = null;
			a4 = unset_instance(a4);
			a5 = null;
			a6 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getEnumeration(2, a2$);
		a3 = av.entityValues[0].getString(3);
		a4 = av.entityValues[0].getInstance(4, this, a4$);
		a5 = av.entityValues[0].getString(5);
		a6 = av.entityValues[0].getString(6);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcConstraint
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setEnumeration(2, a2, a2$);
		av.entityValues[0].setString(3, a3);
		av.entityValues[0].setInstance(4, a4);
		av.entityValues[0].setString(5, a5);
		av.entityValues[0].setString(6, a6);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcConstraint
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setEnumeration(2, a2, a2$);
		av.entityValues[0].setString(3, a3);
		av.entityValues[0].setInstance(4, a4);
		av.entityValues[0].setString(5, a5);
		av.entityValues[0].setString(6, a6);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcconstraintWr11(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcConstraintEnum).set(_context, get(a2$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcConstraintEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcConstraintEnum).set(_context, get(a2$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcConstraintEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.CIfcconstraint.definition).set(_context, this).groupReference(_context, jsdai.SIfc4.CIfcconstraint.class).getAttribute(a6$, _context))))).getLogical());
	}
}
