/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcPermeableCoveringProperties

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcpermeablecoveringproperties extends CIfcpredefinedpropertyset implements EIfcpermeablecoveringproperties {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcpermeablecoveringproperties.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// GlobalId: protected String a0;   GlobalId - java inheritance - STRING
	// OwnerHistory: protected Object a1;   OwnerHistory - java inheritance - ENTITY IfcOwnerHistory
	// Name: protected String a2;   Name - java inheritance - STRING
	// Description: protected String a3;   Description - java inheritance - STRING
	// HasContext: protected Object  - inverse - java inheritance -  ENTITY IfcRelDeclares
	// HasAssociations: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociates
	// DefinesType: protected Object  - inverse - java inheritance -  ENTITY IfcTypeObject
	// IsDefinedBy: protected Object  - inverse - java inheritance -  ENTITY IfcRelDefinesByTemplate
	// DefinesOccurrence: protected Object  - inverse - java inheritance -  ENTITY IfcRelDefinesByProperties
	protected int a4; // OperationType - current entity - ENUMERATION IfcPermeableCoveringOperationEnum
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a5; // PanelPosition - current entity - ENUMERATION IfcWindowPanelPositionEnum
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected double a6; // FrameDepth - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a7; // FrameThickness - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected Object a8; // ShapeAspectStyle - current entity - ENTITY IfcShapeAspect
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// GlobalId - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// OwnerHistory - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// Description - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected String a3;
	// HasContext - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasAssociations - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// DefinesType - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i2$ = CEntity.initInverseAttribute(definition, 2);
	// IsDefinedBy - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i3$ = CEntity.initInverseAttribute(definition, 3);
	// DefinesOccurrence - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i4$ = CEntity.initInverseAttribute(definition, 4);
	// OperationType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected int a4;
	// PanelPosition - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected int a5;
	// FrameDepth - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected double a6;
	// FrameThickness - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected double a7;
	// ShapeAspectStyle - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected Object a8;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a8 == old) {
			a8 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a8 == old) {
			a8 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5618=EXPLICIT_ATTRIBUTE('GlobalId',#5616,0,#2517,$,.F.);
	//<01> generating methods for consolidated attribute:  GlobalId
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5619=EXPLICIT_ATTRIBUTE('OwnerHistory',#5616,1,#4858,$,.T.);
	//<01> generating methods for consolidated attribute:  OwnerHistory
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): OwnerHistory, base type: entity IfcOwnerHistory
	public static int usedinOwnerhistory(EIfcroot type, EIfcownerhistory instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #5620=EXPLICIT_ATTRIBUTE('Name',#5616,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5621=EXPLICIT_ATTRIBUTE('Description',#5616,3,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5113=INVERSE_ATTRIBUTE('HasContext',#5111,0,#5450,$,#5453,#8928,#8929,.F.);
	//<01> generating methods for consolidated attribute:  HasContext
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5114=INVERSE_ATTRIBUTE('HasAssociations',#5111,1,#5375,$,#5377,#8931,$,.F.);
	//<01> generating methods for consolidated attribute:  HasAssociations
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5142=INVERSE_ATTRIBUTE('DefinesType',#5140,0,#6270,$,#6273,#8952,$,.F.);
	//<01> generating methods for consolidated attribute:  DefinesType
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5143=INVERSE_ATTRIBUTE('IsDefinedBy',#5140,1,#5466,$,#5468,#8954,$,.F.);
	//<01> generating methods for consolidated attribute:  IsDefinedBy
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5144=INVERSE_ATTRIBUTE('DefinesOccurrence',#5140,2,#5462,$,#5465,#8956,#8957,.F.);
	//<01> generating methods for consolidated attribute:  DefinesOccurrence
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4884=EXPLICIT_ATTRIBUTE('OperationType',#4882,0,#2945,$,.F.);
	//<01> generating methods for consolidated attribute:  OperationType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:OperationType, base type: ENUMERATION
	public boolean testOperationtype(EIfcpermeablecoveringproperties type) throws SdaiException {
		return test_enumeration(a4);
	}
	public int getOperationtype(EIfcpermeablecoveringproperties type) throws SdaiException {
		return get_enumeration(a4);
	}
	public void setOperationtype(EIfcpermeablecoveringproperties type, int value) throws SdaiException {
		a4 = set_enumeration(value, a4$);
	}
	public void unsetOperationtype(EIfcpermeablecoveringproperties type) throws SdaiException {
		a4 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeOperationtype(EIfcpermeablecoveringproperties type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4885=EXPLICIT_ATTRIBUTE('PanelPosition',#4882,1,#3095,$,.F.);
	//<01> generating methods for consolidated attribute:  PanelPosition
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:PanelPosition, base type: ENUMERATION
	public boolean testPanelposition(EIfcpermeablecoveringproperties type) throws SdaiException {
		return test_enumeration(a5);
	}
	public int getPanelposition(EIfcpermeablecoveringproperties type) throws SdaiException {
		return get_enumeration(a5);
	}
	public void setPanelposition(EIfcpermeablecoveringproperties type, int value) throws SdaiException {
		a5 = set_enumeration(value, a5$);
	}
	public void unsetPanelposition(EIfcpermeablecoveringproperties type) throws SdaiException {
		a5 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributePanelposition(EIfcpermeablecoveringproperties type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4886=EXPLICIT_ATTRIBUTE('FrameDepth',#4882,2,#2605,$,.T.);
	//<01> generating methods for consolidated attribute:  FrameDepth
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: FrameDepth, base type: REAL
	public boolean testFramedepth(EIfcpermeablecoveringproperties type) throws SdaiException {
		return test_double(a6);
	}
	public double getFramedepth(EIfcpermeablecoveringproperties type) throws SdaiException {
		return get_double(a6);
	}
	public void setFramedepth(EIfcpermeablecoveringproperties type, double value) throws SdaiException {
		a6 = set_double(value);
	}
	public void unsetFramedepth(EIfcpermeablecoveringproperties type) throws SdaiException {
		a6 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeFramedepth(EIfcpermeablecoveringproperties type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #4887=EXPLICIT_ATTRIBUTE('FrameThickness',#4882,3,#2605,$,.T.);
	//<01> generating methods for consolidated attribute:  FrameThickness
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: FrameThickness, base type: REAL
	public boolean testFramethickness(EIfcpermeablecoveringproperties type) throws SdaiException {
		return test_double(a7);
	}
	public double getFramethickness(EIfcpermeablecoveringproperties type) throws SdaiException {
		return get_double(a7);
	}
	public void setFramethickness(EIfcpermeablecoveringproperties type, double value) throws SdaiException {
		a7 = set_double(value);
	}
	public void unsetFramethickness(EIfcpermeablecoveringproperties type) throws SdaiException {
		a7 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeFramethickness(EIfcpermeablecoveringproperties type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #4888=EXPLICIT_ATTRIBUTE('ShapeAspectStyle',#4882,4,#5672,$,.T.);
	//<01> generating methods for consolidated attribute:  ShapeAspectStyle
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ShapeAspectStyle, base type: entity IfcShapeAspect
	public static int usedinShapeaspectstyle(EIfcpermeablecoveringproperties type, EIfcshapeaspect instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a8$, domain, result);
	}
	public boolean testShapeaspectstyle(EIfcpermeablecoveringproperties type) throws SdaiException {
		return test_instance(a8);
	}
	public EIfcshapeaspect getShapeaspectstyle(EIfcpermeablecoveringproperties type) throws SdaiException {
		return (EIfcshapeaspect)get_instance(a8);
	}
	public void setShapeaspectstyle(EIfcpermeablecoveringproperties type, EIfcshapeaspect value) throws SdaiException {
		a8 = set_instance(a8, value);
	}
	public void unsetShapeaspectstyle(EIfcpermeablecoveringproperties type) throws SdaiException {
		a8 = unset_instance(a8);
	}
	public static jsdai.dictionary.EAttribute attributeShapeaspectstyle(EIfcpermeablecoveringproperties type) throws SdaiException {
		return a8$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = 0;
			a5 = 0;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = unset_instance(a8);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[0].getEnumeration(0, a4$);
		a5 = av.entityValues[0].getEnumeration(1, a5$);
		a6 = av.entityValues[0].getDouble(2);
		a7 = av.entityValues[0].getDouble(3);
		a8 = av.entityValues[0].getInstance(4, this, a8$);
		a0 = av.entityValues[4].getString(0);
		a1 = av.entityValues[4].getInstance(1, this, a1$);
		a2 = av.entityValues[4].getString(2);
		a3 = av.entityValues[4].getString(3);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a4 = 0;
			a5 = 0;
			a6 = Double.NaN;
			a7 = Double.NaN;
			a8 = unset_instance(a8);
			a0 = null;
			a1 = unset_instance(a1);
			a2 = null;
			a3 = null;
			return;
		}
		a4 = av.entityValues[0].getEnumeration(0, a4$);
		a5 = av.entityValues[0].getEnumeration(1, a5$);
		a6 = av.entityValues[0].getDouble(2);
		a7 = av.entityValues[0].getDouble(3);
		a8 = av.entityValues[0].getInstance(4, this, a8$);
		a0 = av.entityValues[4].getString(0);
		a1 = av.entityValues[4].getInstance(1, this, a1$);
		a2 = av.entityValues[4].getString(2);
		a3 = av.entityValues[4].getString(3);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPermeableCoveringProperties
		av.entityValues[0].setEnumeration(0, a4, a4$);
		av.entityValues[0].setEnumeration(1, a5, a5$);
		av.entityValues[0].setDouble(2, a6);
		av.entityValues[0].setDouble(3, a7);
		av.entityValues[0].setInstance(4, a8);
		// partial entity: IfcPreDefinedPropertySet
		// partial entity: IfcPropertyDefinition
		// partial entity: IfcPropertySetDefinition
		// partial entity: IfcRoot
		av.entityValues[4].setString(0, a0);
		av.entityValues[4].setInstance(1, a1);
		av.entityValues[4].setString(2, a2);
		av.entityValues[4].setString(3, a3);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcPermeableCoveringProperties
		av.entityValues[0].setEnumeration(0, a4, a4$);
		av.entityValues[0].setEnumeration(1, a5, a5$);
		av.entityValues[0].setDouble(2, a6);
		av.entityValues[0].setDouble(3, a7);
		av.entityValues[0].setInstance(4, a8);
		// partial entity: IfcPreDefinedPropertySet
		// partial entity: IfcPropertyDefinition
		// partial entity: IfcPropertySetDefinition
		// partial entity: IfcRoot
		av.entityValues[4].setString(0, a0);
		av.entityValues[4].setInstance(1, a1);
		av.entityValues[4].setString(2, a2);
		av.entityValues[4].setString(3, a3);
	}
}
