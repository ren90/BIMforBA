/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcActorRole

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcactorrole extends CEntity implements EIfcactorrole {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcactorrole.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected int a0; // Role - current entity - ENUMERATION IfcRoleEnum
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // UserDefinedRole - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a2; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// HasExternalReference: protected Object  - inverse - current -  ENTITY IfcExternalReferenceRelationship
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Role - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0;
	// UserDefinedRole - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a2;
	// HasExternalReference - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #3240=EXPLICIT_ATTRIBUTE('Role',#3238,0,#2997,$,.F.);
	//<01> generating methods for consolidated attribute:  Role
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:Role, base type: ENUMERATION
	public boolean testRole(EIfcactorrole type) throws SdaiException {
		return test_enumeration(a0);
	}
	public int getRole(EIfcactorrole type) throws SdaiException {
		return get_enumeration(a0);
	}
	public void setRole(EIfcactorrole type, int value) throws SdaiException {
		a0 = set_enumeration(value, a0$);
	}
	public void unsetRole(EIfcactorrole type) throws SdaiException {
		a0 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeRole(EIfcactorrole type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3241=EXPLICIT_ATTRIBUTE('UserDefinedRole',#3238,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedRole
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: UserDefinedRole, base type: STRING
	public boolean testUserdefinedrole(EIfcactorrole type) throws SdaiException {
		return test_string(a1);
	}
	public String getUserdefinedrole(EIfcactorrole type) throws SdaiException {
		return get_string(a1);
	}
	public void setUserdefinedrole(EIfcactorrole type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetUserdefinedrole(EIfcactorrole type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeUserdefinedrole(EIfcactorrole type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #3242=EXPLICIT_ATTRIBUTE('Description',#3238,2,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfcactorrole type) throws SdaiException {
		return test_string(a2);
	}
	public String getDescription(EIfcactorrole type) throws SdaiException {
		return get_string(a2);
	}
	public void setDescription(EIfcactorrole type, String value) throws SdaiException {
		a2 = set_string(value);
	}
	public void unsetDescription(EIfcactorrole type) throws SdaiException {
		a2 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfcactorrole type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #3243=INVERSE_ATTRIBUTE('HasExternalReference',#3238,0,#4231,$,#4234,#7524,$,.F.);
	//<01> generating methods for consolidated attribute:  HasExternalReference
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasExternalReference : SET[0:-2147483648] OF IfcExternalReferenceRelationship FOR RelatedResourceObjects
	public AIfcexternalreferencerelationship getHasexternalreference(EIfcactorrole type, ASdaiModel domain) throws SdaiException {
		AIfcexternalreferencerelationship result = (AIfcexternalreferencerelationship)get_inverse_aggregate(i0$);
		CIfcexternalreferencerelationship.usedinRelatedresourceobjects(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHasexternalreference(EIfcactorrole type) throws SdaiException {
		return i0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = null;
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			a1 = null;
			a2 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = av.entityValues[0].getString(1);
		a2 = av.entityValues[0].getString(2);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcActorRole
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcActorRole
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setString(1, a1);
		av.entityValues[0].setString(2, a2);
	}

	/*---------------------- methods to validate WHERE rules --------------------*/

	public int rIfcactorroleWr1(SdaiContext _context) throws SdaiException {
	





		return (Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcRoleEnum).set(_context, get(a0$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcRoleEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(jsdai.SIfc4.SIfc4._st_IfcRoleEnum).set(_context, get(a0$)), Value.alloc(jsdai.SIfc4.SIfc4._st_IfcRoleEnum).setEnum(_context, "USERDEFINED")), Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(Value.alloc(jsdai.SIfc4.CIfcactorrole.definition).set(_context, this).getAttribute(a1$, _context))))).getLogical());
	}
}
