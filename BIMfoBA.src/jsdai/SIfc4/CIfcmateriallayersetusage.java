/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcMaterialLayerSetUsage

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcmateriallayersetusage extends CIfcmaterialusagedefinition implements EIfcmateriallayersetusage {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcmateriallayersetusage.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// AssociatedTo: protected Object  - inverse - java inheritance -  ENTITY IfcRelAssociatesMaterial
	protected Object a0; // ForLayerSet - current entity - ENTITY IfcMaterialLayerSet
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a1; // LayerSetDirection - current entity - ENUMERATION IfcLayerSetDirectionEnum
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a2; // DirectionSense - current entity - ENUMERATION IfcDirectionSenseEnum
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected double a3; // OffsetFromReferenceLine - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // ReferenceExtent - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// AssociatedTo - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// ForLayerSet - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	// LayerSetDirection - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected int a1;
	// DirectionSense - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected int a2;
	// OffsetFromReferenceLine - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a3;
	// ReferenceExtent - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4731=INVERSE_ATTRIBUTE('AssociatedTo',#4729,0,#5394,$,#5396,#8623,$,.F.);
	//<01> generating methods for consolidated attribute:  AssociatedTo
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4682=EXPLICIT_ATTRIBUTE('ForLayerSet',#4680,0,#4674,$,.F.);
	//<01> generating methods for consolidated attribute:  ForLayerSet
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : ForLayerSet, base type: entity IfcMaterialLayerSet
	public static int usedinForlayerset(EIfcmateriallayersetusage type, EIfcmateriallayerset instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testForlayerset(EIfcmateriallayersetusage type) throws SdaiException {
		return test_instance(a0);
	}
	public EIfcmateriallayerset getForlayerset(EIfcmateriallayersetusage type) throws SdaiException {
		return (EIfcmateriallayerset)get_instance(a0);
	}
	public void setForlayerset(EIfcmateriallayersetusage type, EIfcmateriallayerset value) throws SdaiException {
		a0 = set_instance(a0, value);
	}
	public void unsetForlayerset(EIfcmateriallayersetusage type) throws SdaiException {
		a0 = unset_instance(a0);
	}
	public static jsdai.dictionary.EAttribute attributeForlayerset(EIfcmateriallayersetusage type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4683=EXPLICIT_ATTRIBUTE('LayerSetDirection',#4680,1,#2911,$,.F.);
	//<01> generating methods for consolidated attribute:  LayerSetDirection
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:LayerSetDirection, base type: ENUMERATION
	public boolean testLayersetdirection(EIfcmateriallayersetusage type) throws SdaiException {
		return test_enumeration(a1);
	}
	public int getLayersetdirection(EIfcmateriallayersetusage type) throws SdaiException {
		return get_enumeration(a1);
	}
	public void setLayersetdirection(EIfcmateriallayersetusage type, int value) throws SdaiException {
		a1 = set_enumeration(value, a1$);
	}
	public void unsetLayersetdirection(EIfcmateriallayersetusage type) throws SdaiException {
		a1 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeLayersetdirection(EIfcmateriallayersetusage type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4684=EXPLICIT_ATTRIBUTE('DirectionSense',#4680,2,#2807,$,.F.);
	//<01> generating methods for consolidated attribute:  DirectionSense
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:DirectionSense, base type: ENUMERATION
	public boolean testDirectionsense(EIfcmateriallayersetusage type) throws SdaiException {
		return test_enumeration(a2);
	}
	public int getDirectionsense(EIfcmateriallayersetusage type) throws SdaiException {
		return get_enumeration(a2);
	}
	public void setDirectionsense(EIfcmateriallayersetusage type, int value) throws SdaiException {
		a2 = set_enumeration(value, a2$);
	}
	public void unsetDirectionsense(EIfcmateriallayersetusage type) throws SdaiException {
		a2 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeDirectionsense(EIfcmateriallayersetusage type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4685=EXPLICIT_ATTRIBUTE('OffsetFromReferenceLine',#4680,3,#2543,$,.F.);
	//<01> generating methods for consolidated attribute:  OffsetFromReferenceLine
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: OffsetFromReferenceLine, base type: REAL
	public boolean testOffsetfromreferenceline(EIfcmateriallayersetusage type) throws SdaiException {
		return test_double(a3);
	}
	public double getOffsetfromreferenceline(EIfcmateriallayersetusage type) throws SdaiException {
		return get_double(a3);
	}
	public void setOffsetfromreferenceline(EIfcmateriallayersetusage type, double value) throws SdaiException {
		a3 = set_double(value);
	}
	public void unsetOffsetfromreferenceline(EIfcmateriallayersetusage type) throws SdaiException {
		a3 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeOffsetfromreferenceline(EIfcmateriallayersetusage type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4686=EXPLICIT_ATTRIBUTE('ReferenceExtent',#4680,4,#2605,$,.T.);
	//<01> generating methods for consolidated attribute:  ReferenceExtent
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ReferenceExtent, base type: REAL
	public boolean testReferenceextent(EIfcmateriallayersetusage type) throws SdaiException {
		return test_double(a4);
	}
	public double getReferenceextent(EIfcmateriallayersetusage type) throws SdaiException {
		return get_double(a4);
	}
	public void setReferenceextent(EIfcmateriallayersetusage type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetReferenceextent(EIfcmateriallayersetusage type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeReferenceextent(EIfcmateriallayersetusage type) throws SdaiException {
		return a4$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = 0;
			a2 = 0;
			a3 = Double.NaN;
			a4 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getEnumeration(2, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[0].getDouble(4);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			a1 = 0;
			a2 = 0;
			a3 = Double.NaN;
			a4 = Double.NaN;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = av.entityValues[0].getEnumeration(1, a1$);
		a2 = av.entityValues[0].getEnumeration(2, a2$);
		a3 = av.entityValues[0].getDouble(3);
		a4 = av.entityValues[0].getDouble(4);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialLayerSetUsage
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setEnumeration(2, a2, a2$);
		av.entityValues[0].setDouble(3, a3);
		av.entityValues[0].setDouble(4, a4);
		// partial entity: IfcMaterialUsageDefinition
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcMaterialLayerSetUsage
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setEnumeration(1, a1, a1$);
		av.entityValues[0].setEnumeration(2, a2, a2$);
		av.entityValues[0].setDouble(3, a3);
		av.entityValues[0].setDouble(4, a4);
		// partial entity: IfcMaterialUsageDefinition
	}
}
