/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcFirstProjAxis

package jsdai.SIfc4;
import jsdai.lang.*;




public class FIfcfirstprojaxis {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_ZAxis;
	Value _nonvar__e_Arg;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_XAxis;
	Value _e_V;
	Value _e_Z;
	Value _e_XVec;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_ZAxis, Value _e_Arg) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_ZAxis = Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_e_ZAxis);
		_nonvar__e_Arg = Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_e_Arg);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_XAxis = Value.alloc(jsdai.SIfc4.CIfcdirection.definition);
		_e_V = Value.alloc(jsdai.SIfc4.CIfcdirection.definition);
		_e_Z = Value.alloc(jsdai.SIfc4.CIfcdirection.definition);
		_e_XVec = Value.alloc(jsdai.SIfc4.CIfcvector.definition);
		// end of initialization of local variables





																							if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(_nonvar__e_ZAxis)).getLogical() == 2) {																							
		if (true) return Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.CIfcdirection.definition);
																							} else {																							
																								_e_Z.set(_context, (new jsdai.SIfc4.FIfcnormalise()).run(_context, _nonvar__e_ZAxis));																											
																								if (Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(_nonvar__e_Arg)).getLogical() == 2) {																								
																									Value _elements422 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																									_elements422.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0));
																									_elements422.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																									_elements422.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																									if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, _e_Z.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDirectionratios(null), _context), _elements422).getLogical() == 2) {																									
																														Value _elements423 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																														_elements423.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0));
																														_elements423.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																														_elements423.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																										_e_V.set(_context, new jsdai.lang.Value(CIfcrepresentationitem.definition).addComplex(new jsdai.lang.Value(CIfcgeometricrepresentationitem.definition)).addComplex(new jsdai.lang.Value(CIfcdirection.definition).addParameter(_elements423)));
																									} else {																									
																														Value _elements424 = Value.alloc(ExpressTypes.AGGREGATE_GENERIC_TYPE).create();
																														_elements424.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																														_elements424.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0));
																														_elements424.addMember(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																										_e_V.set(_context, new jsdai.lang.Value(CIfcrepresentationitem.definition).addComplex(new jsdai.lang.Value(CIfcgeometricrepresentationitem.definition)).addComplex(new jsdai.lang.Value(CIfcdirection.definition).addParameter(_elements424)));
																									}
																								} else {																								
																									if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, _nonvar__e_Arg.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDim(null), _context), Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)).getLogical() == 2) {																									
		if (true) return Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.CIfcdirection.definition);
																									}																											
																									if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, (new jsdai.SIfc4.FIfccrossproduct()).run(_context, _nonvar__e_Arg, _e_Z).getAttribute("Magnitude", _context), Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0)).getLogical() == 2) {																									
		if (true) return Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset()).check(_context, jsdai.SIfc4.CIfcdirection.definition);
																									} else {																									
																										_e_V.set(_context, (new jsdai.SIfc4.FIfcnormalise()).run(_context, _nonvar__e_Arg));
																									}																											
																								}																																																							
																								_e_XVec.set(_context, (new jsdai.SIfc4.FIfcscalartimesvector()).run(_context, (new jsdai.SIfc4.FIfcdotproduct()).run(_context, _e_V, _e_Z), _e_Z));																																																					
																								_e_XAxis.set(_context, (new jsdai.SIfc4.FIfcvectordifference()).run(_context, _e_V, _e_XVec).getAttribute("Orientation", _context));																																																		
																								_e_XAxis.set(_context, (new jsdai.SIfc4.FIfcnormalise()).run(_context, _e_XAxis));																									
																							}




		if (true) return Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_context, _e_XAxis).check(_context, jsdai.SIfc4.CIfcdirection.definition);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
