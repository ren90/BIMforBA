/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcCorrectDimensions

package jsdai.SIfc4;
import jsdai.lang.*;


public class FIfccorrectdimensions {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_m;
	Value _nonvar__e_Dim;
	// end of declaration of non-VAR parameters


	public Value run(SdaiContext _context, Value _e_m, Value _e_Dim) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_m = Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).set(_e_m);
		_nonvar__e_Dim = Value.alloc(jsdai.SIfc4.CIfcdimensionalexponents.definition).set(_e_Dim);
		// end of initialization of non-VAR parameters




												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "LENGTHUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "MASSUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "TIMEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICCURRENTUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "THERMODYNAMICTEMPERATUREUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "AMOUNTOFSUBSTANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "LUMINOUSINTENSITYUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "PLANEANGLEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "SOLIDANGLEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "AREAUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "VOLUMEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ABSORBEDDOSEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "RADIOACTIVITYUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICCAPACITANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 4)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "DOSEEQUIVALENTUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICCHARGEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICCONDUCTANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICVOLTAGEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ELECTRICRESISTANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ENERGYUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "FORCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "FREQUENCYUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "INDUCTANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "ILLUMINANCEUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "LUMINOUSFLUXUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "MAGNETICFLUXUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "MAGNETICFLUXDENSITYUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "POWERUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 3))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else
												if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_m,Value.alloc(jsdai.SIfc4.SIfc4._st_IfcUnitEnum).setEnum(_context, "PRESSUREUNIT")).getLogical() == 2) {													
														if (Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, _nonvar__e_Dim, new jsdai.lang.Value(CIfcdimensionalexponents.definition).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)).addParameter(Value.alloc(ExpressTypes.NUMBER_TYPE).negation(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2))).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0)).addParameter(Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0))).getLogical() == 2) {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 2)).check(_context, ExpressTypes.LOGICAL_TYPE);
														} else {														
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 1)).check(_context, ExpressTypes.LOGICAL_TYPE);
														}
												} else {													
		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 3)).check(_context, ExpressTypes.LOGICAL_TYPE);
												}


		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
