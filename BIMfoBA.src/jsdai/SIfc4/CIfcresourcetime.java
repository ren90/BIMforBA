/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcResourceTime

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcresourcetime extends CIfcschedulingtime implements EIfcresourcetime {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcresourcetime.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// Name: protected String a0;   Name - java inheritance - STRING
	// DataOrigin: protected int a1;   DataOrigin - java inheritance - ENUMERATION IfcDataOriginEnum
	// UserDefinedDataOrigin: protected String a2;   UserDefinedDataOrigin - java inheritance - STRING
	protected String a3; // ScheduleWork - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected double a4; // ScheduleUsage - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // ScheduleStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a6; // ScheduleFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a7; // ScheduleContour - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected String a8; // LevelingDelay - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected int a9; // IsOverAllocated - current entity - BOOLEAN
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	protected String a10; // StatusTime - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	protected String a11; // ActualWork - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a11$ = CEntity.initExplicitAttribute(definition, 11);
	protected double a12; // ActualUsage - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a12$ = CEntity.initExplicitAttribute(definition, 12);
	protected String a13; // ActualStart - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a13$ = CEntity.initExplicitAttribute(definition, 13);
	protected String a14; // ActualFinish - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a14$ = CEntity.initExplicitAttribute(definition, 14);
	protected String a15; // RemainingWork - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a15$ = CEntity.initExplicitAttribute(definition, 15);
	protected double a16; // RemainingUsage - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a16$ = CEntity.initExplicitAttribute(definition, 16);
	protected double a17; // Completion - current entity - REAL
	protected static final jsdai.dictionary.CExplicit_attribute a17$ = CEntity.initExplicitAttribute(definition, 17);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// DataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected int a1;
	// UserDefinedDataOrigin - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected String a2;
	// ScheduleWork - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// ScheduleUsage - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected double a4;
	// ScheduleStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// ScheduleFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a6$ = CEntity.initExplicitAttribute(definition, 6);
	protected String a6;
	// ScheduleContour - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a7$ = CEntity.initExplicitAttribute(definition, 7);
	protected String a7;
	// LevelingDelay - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a8$ = CEntity.initExplicitAttribute(definition, 8);
	protected String a8;
	// IsOverAllocated - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a9$ = CEntity.initExplicitAttribute(definition, 9);
	protected int a9;
	// StatusTime - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a10$ = CEntity.initExplicitAttribute(definition, 10);
	protected String a10;
	// ActualWork - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a11$ = CEntity.initExplicitAttribute(definition, 11);
	protected String a11;
	// ActualUsage - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a12$ = CEntity.initExplicitAttribute(definition, 12);
	protected double a12;
	// ActualStart - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a13$ = CEntity.initExplicitAttribute(definition, 13);
	protected String a13;
	// ActualFinish - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a14$ = CEntity.initExplicitAttribute(definition, 14);
	protected String a14;
	// RemainingWork - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a15$ = CEntity.initExplicitAttribute(definition, 15);
	protected String a15;
	// RemainingUsage - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a16$ = CEntity.initExplicitAttribute(definition, 16);
	protected double a16;
	// Completion - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a17$ = CEntity.initExplicitAttribute(definition, 17);
	protected double a17;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5638=EXPLICIT_ATTRIBUTE('Name',#5636,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5639=EXPLICIT_ATTRIBUTE('DataOrigin',#5636,1,#2803,$,.T.);
	//<01> generating methods for consolidated attribute:  DataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5640=EXPLICIT_ATTRIBUTE('UserDefinedDataOrigin',#5636,2,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  UserDefinedDataOrigin
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5579=EXPLICIT_ATTRIBUTE('ScheduleWork',#5577,0,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleWork
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleWork, base type: STRING
	public boolean testSchedulework(EIfcresourcetime type) throws SdaiException {
		return test_string(a3);
	}
	public String getSchedulework(EIfcresourcetime type) throws SdaiException {
		return get_string(a3);
	}
	public void setSchedulework(EIfcresourcetime type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetSchedulework(EIfcresourcetime type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulework(EIfcresourcetime type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #5580=EXPLICIT_ATTRIBUTE('ScheduleUsage',#5577,1,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleUsage
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleUsage, base type: REAL
	public boolean testScheduleusage(EIfcresourcetime type) throws SdaiException {
		return test_double(a4);
	}
	public double getScheduleusage(EIfcresourcetime type) throws SdaiException {
		return get_double(a4);
	}
	public void setScheduleusage(EIfcresourcetime type, double value) throws SdaiException {
		a4 = set_double(value);
	}
	public void unsetScheduleusage(EIfcresourcetime type) throws SdaiException {
		a4 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeScheduleusage(EIfcresourcetime type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #5581=EXPLICIT_ATTRIBUTE('ScheduleStart',#5577,2,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleStart, base type: STRING
	public boolean testSchedulestart(EIfcresourcetime type) throws SdaiException {
		return test_string(a5);
	}
	public String getSchedulestart(EIfcresourcetime type) throws SdaiException {
		return get_string(a5);
	}
	public void setSchedulestart(EIfcresourcetime type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetSchedulestart(EIfcresourcetime type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulestart(EIfcresourcetime type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #5582=EXPLICIT_ATTRIBUTE('ScheduleFinish',#5577,3,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleFinish, base type: STRING
	public boolean testSchedulefinish(EIfcresourcetime type) throws SdaiException {
		return test_string(a6);
	}
	public String getSchedulefinish(EIfcresourcetime type) throws SdaiException {
		return get_string(a6);
	}
	public void setSchedulefinish(EIfcresourcetime type, String value) throws SdaiException {
		a6 = set_string(value);
	}
	public void unsetSchedulefinish(EIfcresourcetime type) throws SdaiException {
		a6 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulefinish(EIfcresourcetime type) throws SdaiException {
		return a6$;
	}

	//going through all the attributes: #5583=EXPLICIT_ATTRIBUTE('ScheduleContour',#5577,4,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ScheduleContour
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ScheduleContour, base type: STRING
	public boolean testSchedulecontour(EIfcresourcetime type) throws SdaiException {
		return test_string(a7);
	}
	public String getSchedulecontour(EIfcresourcetime type) throws SdaiException {
		return get_string(a7);
	}
	public void setSchedulecontour(EIfcresourcetime type, String value) throws SdaiException {
		a7 = set_string(value);
	}
	public void unsetSchedulecontour(EIfcresourcetime type) throws SdaiException {
		a7 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeSchedulecontour(EIfcresourcetime type) throws SdaiException {
		return a7$;
	}

	//going through all the attributes: #5584=EXPLICIT_ATTRIBUTE('LevelingDelay',#5577,5,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  LevelingDelay
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: LevelingDelay, base type: STRING
	public boolean testLevelingdelay(EIfcresourcetime type) throws SdaiException {
		return test_string(a8);
	}
	public String getLevelingdelay(EIfcresourcetime type) throws SdaiException {
		return get_string(a8);
	}
	public void setLevelingdelay(EIfcresourcetime type, String value) throws SdaiException {
		a8 = set_string(value);
	}
	public void unsetLevelingdelay(EIfcresourcetime type) throws SdaiException {
		a8 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLevelingdelay(EIfcresourcetime type) throws SdaiException {
		return a8$;
	}

	//going through all the attributes: #5585=EXPLICIT_ATTRIBUTE('IsOverAllocated',#5577,6,#6,$,.T.);
	//<01> generating methods for consolidated attribute:  IsOverAllocated
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: IsOverAllocated, base type: BOOLEAN
	public boolean testIsoverallocated(EIfcresourcetime type) throws SdaiException {
		return test_boolean(a9);
	}
	public boolean getIsoverallocated(EIfcresourcetime type) throws SdaiException {
		return get_boolean(a9);
	}
	public void setIsoverallocated(EIfcresourcetime type, boolean value) throws SdaiException {
		a9 = set_boolean(value);
	}
	public void unsetIsoverallocated(EIfcresourcetime type) throws SdaiException {
		a9 = unset_boolean();
	}
	public static jsdai.dictionary.EAttribute attributeIsoverallocated(EIfcresourcetime type) throws SdaiException {
		return a9$;
	}

	//going through all the attributes: #5586=EXPLICIT_ATTRIBUTE('StatusTime',#5577,7,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  StatusTime
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: StatusTime, base type: STRING
	public boolean testStatustime(EIfcresourcetime type) throws SdaiException {
		return test_string(a10);
	}
	public String getStatustime(EIfcresourcetime type) throws SdaiException {
		return get_string(a10);
	}
	public void setStatustime(EIfcresourcetime type, String value) throws SdaiException {
		a10 = set_string(value);
	}
	public void unsetStatustime(EIfcresourcetime type) throws SdaiException {
		a10 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeStatustime(EIfcresourcetime type) throws SdaiException {
		return a10$;
	}

	//going through all the attributes: #5587=EXPLICIT_ATTRIBUTE('ActualWork',#5577,8,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualWork
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualWork, base type: STRING
	public boolean testActualwork(EIfcresourcetime type) throws SdaiException {
		return test_string(a11);
	}
	public String getActualwork(EIfcresourcetime type) throws SdaiException {
		return get_string(a11);
	}
	public void setActualwork(EIfcresourcetime type, String value) throws SdaiException {
		a11 = set_string(value);
	}
	public void unsetActualwork(EIfcresourcetime type) throws SdaiException {
		a11 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualwork(EIfcresourcetime type) throws SdaiException {
		return a11$;
	}

	//going through all the attributes: #5588=EXPLICIT_ATTRIBUTE('ActualUsage',#5577,9,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualUsage
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualUsage, base type: REAL
	public boolean testActualusage(EIfcresourcetime type) throws SdaiException {
		return test_double(a12);
	}
	public double getActualusage(EIfcresourcetime type) throws SdaiException {
		return get_double(a12);
	}
	public void setActualusage(EIfcresourcetime type, double value) throws SdaiException {
		a12 = set_double(value);
	}
	public void unsetActualusage(EIfcresourcetime type) throws SdaiException {
		a12 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeActualusage(EIfcresourcetime type) throws SdaiException {
		return a12$;
	}

	//going through all the attributes: #5589=EXPLICIT_ATTRIBUTE('ActualStart',#5577,10,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualStart
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualStart, base type: STRING
	public boolean testActualstart(EIfcresourcetime type) throws SdaiException {
		return test_string(a13);
	}
	public String getActualstart(EIfcresourcetime type) throws SdaiException {
		return get_string(a13);
	}
	public void setActualstart(EIfcresourcetime type, String value) throws SdaiException {
		a13 = set_string(value);
	}
	public void unsetActualstart(EIfcresourcetime type) throws SdaiException {
		a13 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualstart(EIfcresourcetime type) throws SdaiException {
		return a13$;
	}

	//going through all the attributes: #5590=EXPLICIT_ATTRIBUTE('ActualFinish',#5577,11,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  ActualFinish
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ActualFinish, base type: STRING
	public boolean testActualfinish(EIfcresourcetime type) throws SdaiException {
		return test_string(a14);
	}
	public String getActualfinish(EIfcresourcetime type) throws SdaiException {
		return get_string(a14);
	}
	public void setActualfinish(EIfcresourcetime type, String value) throws SdaiException {
		a14 = set_string(value);
	}
	public void unsetActualfinish(EIfcresourcetime type) throws SdaiException {
		a14 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeActualfinish(EIfcresourcetime type) throws SdaiException {
		return a14$;
	}

	//going through all the attributes: #5591=EXPLICIT_ATTRIBUTE('RemainingWork',#5577,12,#2489,$,.T.);
	//<01> generating methods for consolidated attribute:  RemainingWork
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: RemainingWork, base type: STRING
	public boolean testRemainingwork(EIfcresourcetime type) throws SdaiException {
		return test_string(a15);
	}
	public String getRemainingwork(EIfcresourcetime type) throws SdaiException {
		return get_string(a15);
	}
	public void setRemainingwork(EIfcresourcetime type, String value) throws SdaiException {
		a15 = set_string(value);
	}
	public void unsetRemainingwork(EIfcresourcetime type) throws SdaiException {
		a15 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeRemainingwork(EIfcresourcetime type) throws SdaiException {
		return a15$;
	}

	//going through all the attributes: #5592=EXPLICIT_ATTRIBUTE('RemainingUsage',#5577,13,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  RemainingUsage
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: RemainingUsage, base type: REAL
	public boolean testRemainingusage(EIfcresourcetime type) throws SdaiException {
		return test_double(a16);
	}
	public double getRemainingusage(EIfcresourcetime type) throws SdaiException {
		return get_double(a16);
	}
	public void setRemainingusage(EIfcresourcetime type, double value) throws SdaiException {
		a16 = set_double(value);
	}
	public void unsetRemainingusage(EIfcresourcetime type) throws SdaiException {
		a16 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeRemainingusage(EIfcresourcetime type) throws SdaiException {
		return a16$;
	}

	//going through all the attributes: #5593=EXPLICIT_ATTRIBUTE('Completion',#5577,14,#2609,$,.T.);
	//<01> generating methods for consolidated attribute:  Completion
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Completion, base type: REAL
	public boolean testCompletion(EIfcresourcetime type) throws SdaiException {
		return test_double(a17);
	}
	public double getCompletion(EIfcresourcetime type) throws SdaiException {
		return get_double(a17);
	}
	public void setCompletion(EIfcresourcetime type, double value) throws SdaiException {
		a17 = set_double(value);
	}
	public void unsetCompletion(EIfcresourcetime type) throws SdaiException {
		a17 = unset_double();
	}
	public static jsdai.dictionary.EAttribute attributeCompletion(EIfcresourcetime type) throws SdaiException {
		return a17$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = Double.NaN;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = 0;
			a10 = null;
			a11 = null;
			a12 = Double.NaN;
			a13 = null;
			a14 = null;
			a15 = null;
			a16 = Double.NaN;
			a17 = Double.NaN;
			a0 = null;
			a1 = 0;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getDouble(1);
		a5 = av.entityValues[0].getString(2);
		a6 = av.entityValues[0].getString(3);
		a7 = av.entityValues[0].getString(4);
		a8 = av.entityValues[0].getString(5);
		a9 = av.entityValues[0].getBoolean(6);
		a10 = av.entityValues[0].getString(7);
		a11 = av.entityValues[0].getString(8);
		a12 = av.entityValues[0].getDouble(9);
		a13 = av.entityValues[0].getString(10);
		a14 = av.entityValues[0].getString(11);
		a15 = av.entityValues[0].getString(12);
		a16 = av.entityValues[0].getDouble(13);
		a17 = av.entityValues[0].getDouble(14);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getEnumeration(1, a1$);
		a2 = av.entityValues[1].getString(2);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a3 = null;
			a4 = Double.NaN;
			a5 = null;
			a6 = null;
			a7 = null;
			a8 = null;
			a9 = 0;
			a10 = null;
			a11 = null;
			a12 = Double.NaN;
			a13 = null;
			a14 = null;
			a15 = null;
			a16 = Double.NaN;
			a17 = Double.NaN;
			a0 = null;
			a1 = 0;
			a2 = null;
			return;
		}
		a3 = av.entityValues[0].getString(0);
		a4 = av.entityValues[0].getDouble(1);
		a5 = av.entityValues[0].getString(2);
		a6 = av.entityValues[0].getString(3);
		a7 = av.entityValues[0].getString(4);
		a8 = av.entityValues[0].getString(5);
		a9 = av.entityValues[0].getBoolean(6);
		a10 = av.entityValues[0].getString(7);
		a11 = av.entityValues[0].getString(8);
		a12 = av.entityValues[0].getDouble(9);
		a13 = av.entityValues[0].getString(10);
		a14 = av.entityValues[0].getString(11);
		a15 = av.entityValues[0].getString(12);
		a16 = av.entityValues[0].getDouble(13);
		a17 = av.entityValues[0].getDouble(14);
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getEnumeration(1, a1$);
		a2 = av.entityValues[1].getString(2);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcResourceTime
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setDouble(1, a4);
		av.entityValues[0].setString(2, a5);
		av.entityValues[0].setString(3, a6);
		av.entityValues[0].setString(4, a7);
		av.entityValues[0].setString(5, a8);
		av.entityValues[0].setBoolean(6, a9);
		av.entityValues[0].setString(7, a10);
		av.entityValues[0].setString(8, a11);
		av.entityValues[0].setDouble(9, a12);
		av.entityValues[0].setString(10, a13);
		av.entityValues[0].setString(11, a14);
		av.entityValues[0].setString(12, a15);
		av.entityValues[0].setDouble(13, a16);
		av.entityValues[0].setDouble(14, a17);
		// partial entity: IfcSchedulingTime
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setEnumeration(1, a1, a1$);
		av.entityValues[1].setString(2, a2);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcResourceTime
		av.entityValues[0].setString(0, a3);
		av.entityValues[0].setDouble(1, a4);
		av.entityValues[0].setString(2, a5);
		av.entityValues[0].setString(3, a6);
		av.entityValues[0].setString(4, a7);
		av.entityValues[0].setString(5, a8);
		av.entityValues[0].setBoolean(6, a9);
		av.entityValues[0].setString(7, a10);
		av.entityValues[0].setString(8, a11);
		av.entityValues[0].setDouble(9, a12);
		av.entityValues[0].setString(10, a13);
		av.entityValues[0].setString(11, a14);
		av.entityValues[0].setString(12, a15);
		av.entityValues[0].setDouble(13, a16);
		av.entityValues[0].setDouble(14, a17);
		// partial entity: IfcSchedulingTime
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setEnumeration(1, a1, a1$);
		av.entityValues[1].setString(2, a2);
	}
}
