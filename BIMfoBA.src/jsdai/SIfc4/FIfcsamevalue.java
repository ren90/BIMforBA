/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcSameValue

package jsdai.SIfc4;
import jsdai.lang.*;


public class FIfcsamevalue {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Value1;
	Value _nonvar__e_Value2;
	Value _nonvar__e_Epsilon;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_ValidEps;
	Value _e_DefaultEps;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Value1, Value _e_Value2, Value _e_Epsilon) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Value1 = Value.alloc(ExpressTypes.REAL_TYPE).set(_e_Value1);
		_nonvar__e_Value2 = Value.alloc(ExpressTypes.REAL_TYPE).set(_e_Value2);
		_nonvar__e_Epsilon = Value.alloc(ExpressTypes.REAL_TYPE).set(_e_Epsilon);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_ValidEps = Value.alloc(ExpressTypes.REAL_TYPE);
		_e_DefaultEps = Value.alloc(ExpressTypes.REAL_TYPE).set(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 1.0E-6));
		// end of initialization of local variables





																																				_e_ValidEps.set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).NVL(_context, _nonvar__e_Epsilon, _e_DefaultEps));




		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).greater(_context, Value.alloc().addOrUnionOrConcatenate(_context, _nonvar__e_Value1, _e_ValidEps), _nonvar__e_Value2), Value.alloc(ExpressTypes.LOGICAL_TYPE).less(_context, _nonvar__e_Value1, Value.alloc().addOrUnionOrConcatenate(_context, _nonvar__e_Value2, _e_ValidEps)))).check(_context, ExpressTypes.LOGICAL_TYPE);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
