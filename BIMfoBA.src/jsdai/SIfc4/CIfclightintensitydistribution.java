/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLightIntensityDistribution

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclightintensitydistribution extends CEntity implements EIfclightintensitydistribution {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclightintensitydistribution.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected int a0; // LightDistributionCurve - current entity - ENUMERATION IfcLightDistributionCurveEnum
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected AIfclightdistributiondata a1; // DistributionData - current entity - LIST OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LightDistributionCurve - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected int a0;
	// DistributionData - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected AIfclightdistributiondata a1;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a1, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		changeReferencesAggregate(a1, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4572=EXPLICIT_ATTRIBUTE('LightDistributionCurve',#4570,0,#2913,$,.F.);
	//<01> generating methods for consolidated attribute:  LightDistributionCurve
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute:LightDistributionCurve, base type: ENUMERATION
	public boolean testLightdistributioncurve(EIfclightintensitydistribution type) throws SdaiException {
		return test_enumeration(a0);
	}
	public int getLightdistributioncurve(EIfclightintensitydistribution type) throws SdaiException {
		return get_enumeration(a0);
	}
	public void setLightdistributioncurve(EIfclightintensitydistribution type, int value) throws SdaiException {
		a0 = set_enumeration(value, a0$);
	}
	public void unsetLightdistributioncurve(EIfclightintensitydistribution type) throws SdaiException {
		a0 = unset_enumeration();
	}
	public static jsdai.dictionary.EAttribute attributeLightdistributioncurve(EIfclightintensitydistribution type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4573=EXPLICIT_ATTRIBUTE('DistributionData',#4570,1,#6953,$,.F.);
	//<01> generating methods for consolidated attribute:  DistributionData
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: DistributionData, base type: LIST OF ENTITY
	public static int usedinDistributiondata(EIfclightintensitydistribution type, EIfclightdistributiondata instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	public boolean testDistributiondata(EIfclightintensitydistribution type) throws SdaiException {
		return test_aggregate(a1);
	}
	public AIfclightdistributiondata getDistributiondata(EIfclightintensitydistribution type) throws SdaiException {
		return (AIfclightdistributiondata)get_aggregate(a1);
	}
	public AIfclightdistributiondata createDistributiondata(EIfclightintensitydistribution type) throws SdaiException {
		a1 = (AIfclightdistributiondata)create_aggregate_class(a1, a1$,  AIfclightdistributiondata.class, 0);
		return a1;
	}
	public void unsetDistributiondata(EIfclightintensitydistribution type) throws SdaiException {
		unset_aggregate(a1);
		a1 = null;
	}
	public static jsdai.dictionary.EAttribute attributeDistributiondata(EIfclightintensitydistribution type) throws SdaiException {
		return a1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			if (a1 instanceof CAggregate)
				a1.unsetAll();
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = (AIfclightdistributiondata)av.entityValues[0].getInstanceAggregate(1, a1$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = 0;
			if (a1 instanceof CAggregate)
				a1.unsetAll();
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getEnumeration(0, a0$);
		a1 = (AIfclightdistributiondata)av.entityValues[0].getInstanceAggregate(1, a1$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcLightIntensityDistribution
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setInstanceAggregate(1, a1);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcLightIntensityDistribution
		av.entityValues[0].setEnumeration(0, a0, a0$);
		av.entityValues[0].setInstanceAggregate(1, a1);
	}
}
