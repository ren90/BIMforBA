/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcDotProduct

package jsdai.SIfc4;
import jsdai.lang.*;







public class FIfcdotproduct {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Arg1;
	Value _nonvar__e_Arg2;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_Scalar;
	Value _e_Vec1;
	Value _e_Vec2;
	Value _e_Ndim;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Arg1, Value _e_Arg2) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Arg1 = Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_e_Arg1);
		_nonvar__e_Arg2 = Value.alloc(jsdai.SIfc4.CIfcdirection.definition).set(_e_Arg2);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_Scalar = Value.alloc(ExpressTypes.REAL_TYPE);
		_e_Vec1 = Value.alloc(jsdai.SIfc4.CIfcdirection.definition);
		_e_Vec2 = Value.alloc(jsdai.SIfc4.CIfcdirection.definition);
		_e_Ndim = Value.alloc(ExpressTypes.INTEGER_TYPE);
		// end of initialization of local variables





																						if (Value.alloc(ExpressTypes.LOGICAL_TYPE).OR(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(_nonvar__e_Arg1)), Value.alloc(ExpressTypes.LOGICAL_TYPE).NOT(Value.alloc(ExpressTypes.BOOLEAN_TYPE).exists(_nonvar__e_Arg2))).getLogical() == 2) {																						
																							_e_Scalar.set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset());
																						} else {																						
																							if (Value.alloc(ExpressTypes.LOGICAL_TYPE).nequal(_context, _nonvar__e_Arg1.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDim(null), _context), _nonvar__e_Arg2.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDim(null), _context)).getLogical() == 2) {																							
																								_e_Scalar.set(_context, Value.alloc(ExpressTypes.GENERIC_TYPE).unset());
																							} else {																							
																								{ // BEGIN
																									_e_Vec1.set(_context, (new jsdai.SIfc4.FIfcnormalise()).run(_context, _nonvar__e_Arg1));
																									_e_Vec2.set(_context, (new jsdai.SIfc4.FIfcnormalise()).run(_context, _nonvar__e_Arg2));
																									_e_Ndim.set(_context, _nonvar__e_Arg1.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDim(null), _context));
																									_e_Scalar.set(_context, Value.alloc(ExpressTypes.REAL_TYPE).set(_context, 0.0));
																									Value _end421 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(_e_Ndim);
																									Value _step421 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																									for (Value _implicit_100_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_100_i, _end421).getLogical() == 2;_implicit_100_i.inc(_step421)) {																									
																										_e_Scalar.set(_context, Value.alloc().addOrUnionOrConcatenate(_context, _e_Scalar, Value.alloc(ExpressTypes.INTEGER_TYPE).mulOrIntersect(_context, _e_Vec1.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDirectionratios(null), _context).indexing(_implicit_100_i, null), _e_Vec2.getAttribute(jsdai.SIfc4.CIfcdirection.attributeDirectionratios(null), _context).indexing(_implicit_100_i, null))));
																									} // for - REPEAT
																								} // END
																							}
																						}




		if (true) return Value.alloc(ExpressTypes.REAL_TYPE).set(_context, _e_Scalar).check(_context, ExpressTypes.REAL_TYPE);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
