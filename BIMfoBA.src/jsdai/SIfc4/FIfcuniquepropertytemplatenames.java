/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcUniquePropertyTemplateNames

package jsdai.SIfc4;
import jsdai.lang.*;




public class FIfcuniquepropertytemplatenames {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_Properties;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_Names;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_Properties) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_Properties = Value.alloc(jsdai.SIfc4.SIfc4._st_generalset_1_ifcpropertytemplate).set(_e_Properties);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_Names = Value.alloc(jsdai.SIfc4.SIfc4._st_generalset_0_ifcidentifier).create();
		// end of initialization of local variables




																																												Value _end588 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(Value.alloc(ExpressTypes.INTEGER_TYPE).hiIndex(_nonvar__e_Properties));
																																												Value _step588 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																																												for (Value _implicit_148_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_148_i, _end588).getLogical() == 2;_implicit_148_i.inc(_step588)) {																																												
																																													_e_Names.set(_context, Value.alloc().addOrUnionOrConcatenate(_context, _e_Names, _nonvar__e_Properties.indexing(_implicit_148_i, null).getAttribute(jsdai.SIfc4.CIfcroot.attributeName(null), _context)));
																																												} // for - REPEAT




		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).equal(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_e_Names), Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_Properties))).check(_context, ExpressTypes.LOGICAL_TYPE);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
