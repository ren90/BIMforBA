/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLibraryInformation

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclibraryinformation extends CIfcexternalinformation implements EIfclibraryinformation {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclibraryinformation.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // Name - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // Version - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected Object a2; // Publisher - current entity - SELECT IfcActorSelect
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected String a3; // VersionDate - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a4; // Location - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a5; // Description - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	// LibraryInfoForObjects: protected Object  - inverse - current -  ENTITY IfcRelAssociatesLibrary
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasLibraryReferences: protected Object  - inverse - current -  ENTITY IfcLibraryReference
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// Name - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// Version - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// Publisher - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	protected Object a2;
	// VersionDate - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	protected String a3;
	// Location - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected String a4;
	// Description - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a5$ = CEntity.initExplicitAttribute(definition, 5);
	protected String a5;
	// LibraryInfoForObjects - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// HasLibraryReferences - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a2 == old) {
			a2 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a2 == old) {
			a2 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #4545=EXPLICIT_ATTRIBUTE('Name',#4543,0,#2539,$,.F.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Name, base type: STRING
	public boolean testName(EIfclibraryinformation type) throws SdaiException {
		return test_string(a0);
	}
	public String getName(EIfclibraryinformation type) throws SdaiException {
		return get_string(a0);
	}
	public void setName(EIfclibraryinformation type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetName(EIfclibraryinformation type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeName(EIfclibraryinformation type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #4546=EXPLICIT_ATTRIBUTE('Version',#4543,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Version
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Version, base type: STRING
	public boolean testVersion(EIfclibraryinformation type) throws SdaiException {
		return test_string(a1);
	}
	public String getVersion(EIfclibraryinformation type) throws SdaiException {
		return get_string(a1);
	}
	public void setVersion(EIfclibraryinformation type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetVersion(EIfclibraryinformation type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeVersion(EIfclibraryinformation type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #4547=EXPLICIT_ATTRIBUTE('Publisher',#4543,2,#3111,$,.T.);
	//<01> generating methods for consolidated attribute:  Publisher
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// -2- methods for SELECT attribute: Publisher
	public static int usedinPublisher(EIfclibraryinformation type, EEntity instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a2$, domain, result);
	}
	public boolean testPublisher(EIfclibraryinformation type) throws SdaiException {
		return test_instance(a2);
	}

	public EEntity getPublisher(EIfclibraryinformation type) throws SdaiException { // case 1
		return get_instance_select(a2);
	}

	public void setPublisher(EIfclibraryinformation type, EEntity value) throws SdaiException { // case 1
		a2 = set_instance(a2, value);
	}

	public void unsetPublisher(EIfclibraryinformation type) throws SdaiException {
		a2 = unset_instance(a2);
	}

	public static jsdai.dictionary.EAttribute attributePublisher(EIfclibraryinformation type) throws SdaiException {
		return a2$;
	}

	//going through all the attributes: #4548=EXPLICIT_ATTRIBUTE('VersionDate',#4543,3,#2477,$,.T.);
	//<01> generating methods for consolidated attribute:  VersionDate
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: VersionDate, base type: STRING
	public boolean testVersiondate(EIfclibraryinformation type) throws SdaiException {
		return test_string(a3);
	}
	public String getVersiondate(EIfclibraryinformation type) throws SdaiException {
		return get_string(a3);
	}
	public void setVersiondate(EIfclibraryinformation type, String value) throws SdaiException {
		a3 = set_string(value);
	}
	public void unsetVersiondate(EIfclibraryinformation type) throws SdaiException {
		a3 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeVersiondate(EIfclibraryinformation type) throws SdaiException {
		return a3$;
	}

	//going through all the attributes: #4549=EXPLICIT_ATTRIBUTE('Location',#4543,4,#2687,$,.T.);
	//<01> generating methods for consolidated attribute:  Location
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Location, base type: STRING
	public boolean testLocation(EIfclibraryinformation type) throws SdaiException {
		return test_string(a4);
	}
	public String getLocation(EIfclibraryinformation type) throws SdaiException {
		return get_string(a4);
	}
	public void setLocation(EIfclibraryinformation type, String value) throws SdaiException {
		a4 = set_string(value);
	}
	public void unsetLocation(EIfclibraryinformation type) throws SdaiException {
		a4 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeLocation(EIfclibraryinformation type) throws SdaiException {
		return a4$;
	}

	//going through all the attributes: #4550=EXPLICIT_ATTRIBUTE('Description',#4543,5,#2657,$,.T.);
	//<01> generating methods for consolidated attribute:  Description
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: Description, base type: STRING
	public boolean testDescription(EIfclibraryinformation type) throws SdaiException {
		return test_string(a5);
	}
	public String getDescription(EIfclibraryinformation type) throws SdaiException {
		return get_string(a5);
	}
	public void setDescription(EIfclibraryinformation type, String value) throws SdaiException {
		a5 = set_string(value);
	}
	public void unsetDescription(EIfclibraryinformation type) throws SdaiException {
		a5 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeDescription(EIfclibraryinformation type) throws SdaiException {
		return a5$;
	}

	//going through all the attributes: #4551=INVERSE_ATTRIBUTE('LibraryInfoForObjects',#4543,0,#5391,$,#5393,#8559,$,.F.);
	//<01> generating methods for consolidated attribute:  LibraryInfoForObjects
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - LibraryInfoForObjects : SET[0:-2147483648] OF IfcRelAssociatesLibrary FOR RelatingLibrary
	public AIfcrelassociateslibrary getLibraryinfoforobjects(EIfclibraryinformation type, ASdaiModel domain) throws SdaiException {
		AIfcrelassociateslibrary result = (AIfcrelassociateslibrary)get_inverse_aggregate(i0$);
		CIfcrelassociateslibrary.usedinRelatinglibrary(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeLibraryinfoforobjects(EIfclibraryinformation type) throws SdaiException {
		return i0$;
	}

	//going through all the attributes: #4552=INVERSE_ATTRIBUTE('HasLibraryReferences',#4543,1,#4553,$,#4557,#8561,$,.F.);
	//<01> generating methods for consolidated attribute:  HasLibraryReferences
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - HasLibraryReferences : SET[0:-2147483648] OF IfcLibraryReference FOR ReferencedLibrary
	public AIfclibraryreference getHaslibraryreferences(EIfclibraryinformation type, ASdaiModel domain) throws SdaiException {
		AIfclibraryreference result = (AIfclibraryreference)get_inverse_aggregate(i1$);
		CIfclibraryreference.usedinReferencedlibrary(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeHaslibraryreferences(EIfclibraryinformation type) throws SdaiException {
		return i1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = unset_instance(a2);
			a3 = null;
			a4 = null;
			a5 = null;
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getInstance(2, this, a2$);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			a2 = unset_instance(a2);
			a3 = null;
			a4 = null;
			a5 = null;
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getString(1);
		a2 = av.entityValues[1].getInstance(2, this, a2$);
		a3 = av.entityValues[1].getString(3);
		a4 = av.entityValues[1].getString(4);
		a5 = av.entityValues[1].getString(5);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExternalInformation
		// partial entity: IfcLibraryInformation
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setInstance(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcExternalInformation
		// partial entity: IfcLibraryInformation
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setString(1, a1);
		av.entityValues[1].setInstance(2, a2);
		av.entityValues[1].setString(3, a3);
		av.entityValues[1].setString(4, a4);
		av.entityValues[1].setString(5, a5);
	}
}
