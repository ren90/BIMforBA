/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing EXPRESS function IfcPathHeadToTail

package jsdai.SIfc4;
import jsdai.lang.*;







public class FIfcpathheadtotail {
	
	// declaration of non-VAR parameters
	Value _nonvar__e_APath;
	// end of declaration of non-VAR parameters

	// declaration of local variables
	Value _e_N;
	Value _e_P;
	// end of declaration of local variables


	public Value run(SdaiContext _context, Value _e_APath) throws SdaiException {

		// initialization of non-VAR parameters
		_nonvar__e_APath = Value.alloc(jsdai.SIfc4.CIfcpath.definition).set(_e_APath);
		// end of initialization of non-VAR parameters

		// initialization of local variables
		_e_N = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 0));
		_e_P = Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).setLB(_context, 3));
		// end of initialization of local variables





																															_e_N.set(_context, Value.alloc(ExpressTypes.INTEGER_TYPE).sizeOf(_nonvar__e_APath.getAttribute(jsdai.SIfc4.CIfcpath.attributeEdgelist(null), _context)));


																															Value _end438 = Value.alloc(ExpressTypes.NUMBER_TYPE).set(_e_N);
																															Value _step438 = Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1);
																															for (Value _implicit_108_i=Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 2);Value.alloc(ExpressTypes.LOGICAL_TYPE).lequal(_context, _implicit_108_i, _end438).getLogical() == 2;_implicit_108_i.inc(_step438)) {																															
																																_e_P.set(_context, Value.alloc(ExpressTypes.LOGICAL_TYPE).AND(_context, _e_P, Value.alloc(ExpressTypes.LOGICAL_TYPE).instanceEqual(_context, _nonvar__e_APath.getAttribute(jsdai.SIfc4.CIfcpath.attributeEdgelist(null), _context).indexing(Value.alloc().substractOrDifference(_context, _implicit_108_i, Value.alloc(ExpressTypes.INTEGER_TYPE).set(_context, 1)), null).getAttribute(jsdai.SIfc4.CIfcorientededge.attributeEdgeend(null), _context), _nonvar__e_APath.getAttribute(jsdai.SIfc4.CIfcpath.attributeEdgelist(null), _context).indexing(_implicit_108_i, null).getAttribute(jsdai.SIfc4.CIfcorientededge.attributeEdgestart(null), _context))));
																															} // for - REPEAT




		if (true) return Value.alloc(ExpressTypes.LOGICAL_TYPE).set(_context, _e_P).check(_context, ExpressTypes.LOGICAL_TYPE);

		return Value.alloc(ExpressTypes.GENERIC_TYPE).unset(); // if return is missing in express - add printing of error message?
	}

}
