/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcLightSourceDirectional

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfclightsourcedirectional extends CIfclightsource implements EIfclightsourcedirectional {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfclightsourcedirectional.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	// Name: protected String a0;   Name - java inheritance - STRING
	// LightColour: protected Object a1;   LightColour - java inheritance - ENTITY IfcColourRgb
	// AmbientIntensity: protected double a2;   AmbientIntensity - java inheritance - REAL
	// Intensity: protected double a3;   Intensity - java inheritance - REAL
	protected Object a4; // Orientation - current entity - ENTITY IfcDirection
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// Name - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	// protected String a0;
	// LightColour - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// protected Object a1;
	// AmbientIntensity - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a2$ = CEntity.initExplicitAttribute(definition, 2);
	// protected double a2;
	// Intensity - explicit - java inheritance
	// protected static final jsdai.dictionary.CExplicit_attribute a3$ = CEntity.initExplicitAttribute(definition, 3);
	// protected double a3;
	// Orientation - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a4$ = CEntity.initExplicitAttribute(definition, 4);
	protected Object a4;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		super.changeReferences(old, newer);
		if (a4 == old) {
			a4 = newer;
		}
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4576=EXPLICIT_ATTRIBUTE('Name',#4574,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  Name
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4577=EXPLICIT_ATTRIBUTE('LightColour',#4574,1,#3650,$,.F.);
	//<01> generating methods for consolidated attribute:  LightColour
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	// attribute (java explicit): LightColour, base type: entity IfcColourRgb
	public static int usedinLightcolour(EIfclightsource type, EIfccolourrgb instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	//going through all the attributes: #4578=EXPLICIT_ATTRIBUTE('AmbientIntensity',#4574,2,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  AmbientIntensity
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4579=EXPLICIT_ATTRIBUTE('Intensity',#4574,3,#2593,$,.T.);
	//<01> generating methods for consolidated attribute:  Intensity
	//<01-1> supertype, java inheritance
	//<01-1-0> explicit - generateExplicitSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #4584=EXPLICIT_ATTRIBUTE('Orientation',#4582,0,#3948,$,.F.);
	//<01> generating methods for consolidated attribute:  Orientation
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : Orientation, base type: entity IfcDirection
	public static int usedinOrientation(EIfclightsourcedirectional type, EIfcdirection instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a4$, domain, result);
	}
	public boolean testOrientation(EIfclightsourcedirectional type) throws SdaiException {
		return test_instance(a4);
	}
	public EIfcdirection getOrientation(EIfclightsourcedirectional type) throws SdaiException {
		return (EIfcdirection)get_instance(a4);
	}
	public void setOrientation(EIfclightsourcedirectional type, EIfcdirection value) throws SdaiException {
		a4 = set_instance(a4, value);
	}
	public void unsetOrientation(EIfclightsourcedirectional type) throws SdaiException {
		a4 = unset_instance(a4);
	}
	public static jsdai.dictionary.EAttribute attributeOrientation(EIfclightsourcedirectional type) throws SdaiException {
		return a4$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_instance(a1);
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = unset_instance(a4);
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getInstance(1, this, a1$);
		a2 = av.entityValues[1].getDouble(2);
		a3 = av.entityValues[1].getDouble(3);
		a4 = av.entityValues[2].getInstance(0, this, a4$);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = unset_instance(a1);
			a2 = Double.NaN;
			a3 = Double.NaN;
			a4 = unset_instance(a4);
			return;
		}
		a0 = av.entityValues[1].getString(0);
		a1 = av.entityValues[1].getInstance(1, this, a1$);
		a2 = av.entityValues[1].getDouble(2);
		a3 = av.entityValues[1].getDouble(3);
		a4 = av.entityValues[2].getInstance(0, this, a4$);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcLightSource
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setInstance(1, a1);
		av.entityValues[1].setDouble(2, a2);
		av.entityValues[1].setDouble(3, a3);
		// partial entity: IfcLightSourceDirectional
		av.entityValues[2].setInstance(0, a4);
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcLightSource
		av.entityValues[1].setString(0, a0);
		av.entityValues[1].setInstance(1, a1);
		av.entityValues[1].setDouble(2, a2);
		av.entityValues[1].setDouble(3, a3);
		// partial entity: IfcLightSourceDirectional
		av.entityValues[2].setInstance(0, a4);
		// partial entity: IfcRepresentationItem
	}
}
