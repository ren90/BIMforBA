/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcRelInterferesElements

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcrelinterfereselements extends EIfcrelconnects {

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:RelatingElement, base type: entity IfcElement
	public boolean testRelatingelement(EIfcrelinterfereselements type) throws SdaiException;
	public EIfcelement getRelatingelement(EIfcrelinterfereselements type) throws SdaiException;
	public void setRelatingelement(EIfcrelinterfereselements type, EIfcelement value) throws SdaiException;
	public void unsetRelatingelement(EIfcrelinterfereselements type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:RelatedElement, base type: entity IfcElement
	public boolean testRelatedelement(EIfcrelinterfereselements type) throws SdaiException;
	public EIfcelement getRelatedelement(EIfcrelinterfereselements type) throws SdaiException;
	public void setRelatedelement(EIfcrelinterfereselements type, EIfcelement value) throws SdaiException;
	public void unsetRelatedelement(EIfcrelinterfereselements type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:InterferenceGeometry, base type: entity IfcConnectionGeometry
	public boolean testInterferencegeometry(EIfcrelinterfereselements type) throws SdaiException;
	public EIfcconnectiongeometry getInterferencegeometry(EIfcrelinterfereselements type) throws SdaiException;
	public void setInterferencegeometry(EIfcrelinterfereselements type, EIfcconnectiongeometry value) throws SdaiException;
	public void unsetInterferencegeometry(EIfcrelinterfereselements type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:InterferenceType, base type: STRING
	public boolean testInterferencetype(EIfcrelinterfereselements type) throws SdaiException;
	public String getInterferencetype(EIfcrelinterfereselements type) throws SdaiException;
	public void setInterferencetype(EIfcrelinterfereselements type, String value) throws SdaiException;
	public void unsetInterferencetype(EIfcrelinterfereselements type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:ImpliedOrder, base type: LOGICAL
	public boolean testImpliedorder(EIfcrelinterfereselements type) throws SdaiException;
	public int getImpliedorder(EIfcrelinterfereselements type) throws SdaiException;
	public void setImpliedorder(EIfcrelinterfereselements type, int value) throws SdaiException;
	public void unsetImpliedorder(EIfcrelinterfereselements type) throws SdaiException;

}
