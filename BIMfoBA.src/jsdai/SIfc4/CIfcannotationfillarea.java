/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcAnnotationFillArea

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcannotationfillarea extends CIfcgeometricrepresentationitem implements EIfcannotationfillarea {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcannotationfillarea.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	// LayerAssignment: protected Object  - inverse - java inheritance -  ENTITY IfcPresentationLayerAssignment
	// StyledByItem: protected Object  - inverse - java inheritance -  ENTITY IfcStyledItem
	protected Object a0; // OuterBoundary - current entity - ENTITY IfcCurve
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected AIfccurve a1; // InnerBoundaries - current entity - SET OF ENTITY
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// LayerAssignment - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
	// StyledByItem - inverse - java inheritance
	// protected static final jsdai.dictionary.CInverse_attribute i1$ = CEntity.initInverseAttribute(definition, 1);
	// OuterBoundary - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected Object a0;
	// InnerBoundaries - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected AIfccurve a1;

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
		changeReferencesAggregate(a1, old, newer);
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
		if (a0 == old) {
			a0 = newer;
		}
		changeReferencesAggregate(a1, old, newer);
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5552=INVERSE_ATTRIBUTE('LayerAssignment',#5550,0,#5023,$,#5027,#9221,#9222,.F.);
	//<01> generating methods for consolidated attribute:  LayerAssignment
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #5553=INVERSE_ATTRIBUTE('StyledByItem',#5550,1,#5936,$,#5938,#9224,#9225,.F.);
	//<01> generating methods for consolidated attribute:  StyledByItem
	//<01-1> supertype, java inheritance
	//<01-1-2> inverse - generateInverseSupertypeJavaInheritedMethodsX()
	//going through all the attributes: #3293=EXPLICIT_ATTRIBUTE('OuterBoundary',#3291,0,#3883,$,.F.);
	//<01> generating methods for consolidated attribute:  OuterBoundary
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// attribute (current explicit or supertype explicit) : OuterBoundary, base type: entity IfcCurve
	public static int usedinOuterboundary(EIfcannotationfillarea type, EIfccurve instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a0$, domain, result);
	}
	public boolean testOuterboundary(EIfcannotationfillarea type) throws SdaiException {
		return test_instance(a0);
	}
	public EIfccurve getOuterboundary(EIfcannotationfillarea type) throws SdaiException {
		return (EIfccurve)get_instance(a0);
	}
	public void setOuterboundary(EIfcannotationfillarea type, EIfccurve value) throws SdaiException {
		a0 = set_instance(a0, value);
	}
	public void unsetOuterboundary(EIfcannotationfillarea type) throws SdaiException {
		a0 = unset_instance(a0);
	}
	public static jsdai.dictionary.EAttribute attributeOuterboundary(EIfcannotationfillarea type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #3294=EXPLICIT_ATTRIBUTE('InnerBoundaries',#3291,1,#6815,$,.T.);
	//<01> generating methods for consolidated attribute:  InnerBoundaries
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	// methods for attribute: InnerBoundaries, base type: SET OF ENTITY
	public static int usedinInnerboundaries(EIfcannotationfillarea type, EIfccurve instance, ASdaiModel domain, AEntity result) throws SdaiException {
		return ((CEntity)instance).makeUsedin(definition, a1$, domain, result);
	}
	public boolean testInnerboundaries(EIfcannotationfillarea type) throws SdaiException {
		return test_aggregate(a1);
	}
	public AIfccurve getInnerboundaries(EIfcannotationfillarea type) throws SdaiException {
		return (AIfccurve)get_aggregate(a1);
	}
	public AIfccurve createInnerboundaries(EIfcannotationfillarea type) throws SdaiException {
		a1 = (AIfccurve)create_aggregate_class(a1, a1$,  AIfccurve.class, 0);
		return a1;
	}
	public void unsetInnerboundaries(EIfcannotationfillarea type) throws SdaiException {
		unset_aggregate(a1);
		a1 = null;
	}
	public static jsdai.dictionary.EAttribute attributeInnerboundaries(EIfcannotationfillarea type) throws SdaiException {
		return a1$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			if (a1 instanceof CAggregate)
				a1.unsetAll();
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = (AIfccurve)av.entityValues[0].getInstanceAggregate(1, a1$, this);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = unset_instance(a0);
			if (a1 instanceof CAggregate)
				a1.unsetAll();
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getInstance(0, this, a0$);
		a1 = (AIfccurve)av.entityValues[0].getInstanceAggregate(1, a1$, this);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcAnnotationFillArea
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstanceAggregate(1, a1);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRepresentationItem
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcAnnotationFillArea
		av.entityValues[0].setInstance(0, a0);
		av.entityValues[0].setInstanceAggregate(1, a1);
		// partial entity: IfcGeometricRepresentationItem
		// partial entity: IfcRepresentationItem
	}
}
