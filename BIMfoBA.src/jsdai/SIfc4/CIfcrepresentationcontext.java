/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java class implementing entity IfcRepresentationContext

package jsdai.SIfc4;
import jsdai.lang.*;

public class CIfcrepresentationcontext extends CEntity implements EIfcrepresentationcontext {
	public static final jsdai.dictionary.CEntity_definition definition = initEntityDefinition(CIfcrepresentationcontext.class, SIfc4.ss);

	/*----------------------------- Attributes -----------*/

/*
	protected String a0; // ContextIdentifier - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a1; // ContextType - current entity - STRING
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	// RepresentationsInContext: protected Object  - inverse - current -  ENTITY IfcRepresentation
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);
*/

	/*----------------------------- Attributes (new version) -----------*/

	// ContextIdentifier - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a0$ = CEntity.initExplicitAttribute(definition, 0);
	protected String a0;
	// ContextType - explicit - current entity
	protected static final jsdai.dictionary.CExplicit_attribute a1$ = CEntity.initExplicitAttribute(definition, 1);
	protected String a1;
	// RepresentationsInContext - inverse - current entity
	protected static final jsdai.dictionary.CInverse_attribute i0$ = CEntity.initInverseAttribute(definition, 0);

	public jsdai.dictionary.EEntity_definition getInstanceType() {
		return definition;
	}

/* *** old implementation ***

	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}
*/


	protected void changeReferences(InverseEntity old, InverseEntity newer) throws SdaiException {
	}

	/*----------- Methods for attribute access -----------*/


	/*----------- Methods for attribute access (new)-----------*/

	//going through all the attributes: #5547=EXPLICIT_ATTRIBUTE('ContextIdentifier',#5545,0,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ContextIdentifier
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ContextIdentifier, base type: STRING
	public boolean testContextidentifier(EIfcrepresentationcontext type) throws SdaiException {
		return test_string(a0);
	}
	public String getContextidentifier(EIfcrepresentationcontext type) throws SdaiException {
		return get_string(a0);
	}
	public void setContextidentifier(EIfcrepresentationcontext type, String value) throws SdaiException {
		a0 = set_string(value);
	}
	public void unsetContextidentifier(EIfcrepresentationcontext type) throws SdaiException {
		a0 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeContextidentifier(EIfcrepresentationcontext type) throws SdaiException {
		return a0$;
	}

	//going through all the attributes: #5548=EXPLICIT_ATTRIBUTE('ContextType',#5545,1,#2539,$,.T.);
	//<01> generating methods for consolidated attribute:  ContextType
	//<01-0> current entity
	//<01-0-0> explicit attribute - generateExplicitCurrentEntityMethodsX()
	/// methods for attribute: ContextType, base type: STRING
	public boolean testContexttype(EIfcrepresentationcontext type) throws SdaiException {
		return test_string(a1);
	}
	public String getContexttype(EIfcrepresentationcontext type) throws SdaiException {
		return get_string(a1);
	}
	public void setContexttype(EIfcrepresentationcontext type, String value) throws SdaiException {
		a1 = set_string(value);
	}
	public void unsetContexttype(EIfcrepresentationcontext type) throws SdaiException {
		a1 = unset_string();
	}
	public static jsdai.dictionary.EAttribute attributeContexttype(EIfcrepresentationcontext type) throws SdaiException {
		return a1$;
	}

	//going through all the attributes: #5549=INVERSE_ATTRIBUTE('RepresentationsInContext',#5545,0,#5536,$,#5538,#9217,$,.F.);
	//<01> generating methods for consolidated attribute:  RepresentationsInContext
	//<01-0> current entity
	//<01-0-2> inverse attribute - generateInverseCurrentEntityMethodsX()
	// Inverse attribute - RepresentationsInContext : SET[0:-2147483648] OF IfcRepresentation FOR ContextOfItems
	public AIfcrepresentation getRepresentationsincontext(EIfcrepresentationcontext type, ASdaiModel domain) throws SdaiException {
		AIfcrepresentation result = (AIfcrepresentation)get_inverse_aggregate(i0$);
		CIfcrepresentation.usedinContextofitems(null, this, domain, result);
		return result;
	}
	public static jsdai.dictionary.EAttribute attributeRepresentationsincontext(EIfcrepresentationcontext type) throws SdaiException {
		return i0$;
	}


	/*---------------------- setAll() --------------------*/

/* *** old implementation ***
	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
	}
*/

	protected void setAll(ComplexEntityValue av) throws SdaiException {
		if (av == null) {
			a0 = null;
			a1 = null;
			return;
		}
		a0 = av.entityValues[0].getString(0);
		a1 = av.entityValues[0].getString(1);
	}

	/*---------------------- getAll() --------------------*/

/* *** old implementation ***
	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRepresentationContext
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
	}
*/

	protected void getAll(ComplexEntityValue av) throws SdaiException {
		// partial entity: IfcRepresentationContext
		av.entityValues[0].setString(0, a0);
		av.entityValues[0].setString(1, a1);
	}
}
