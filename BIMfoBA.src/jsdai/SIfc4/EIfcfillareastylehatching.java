/* Generated by JSDAI Express Compiler, version 4.3.2, build 500, 2011-12-13 */

// Java interface for entity IfcFillAreaStyleHatching

package jsdai.SIfc4;
import jsdai.lang.*;

public interface EIfcfillareastylehatching extends EIfcgeometricrepresentationitem {

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:HatchLineAppearance, base type: entity IfcCurveStyle
	public boolean testHatchlineappearance(EIfcfillareastylehatching type) throws SdaiException;
	public EIfccurvestyle getHatchlineappearance(EIfcfillareastylehatching type) throws SdaiException;
	public void setHatchlineappearance(EIfcfillareastylehatching type, EIfccurvestyle value) throws SdaiException;
	public void unsetHatchlineappearance(EIfcfillareastylehatching type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// constants and methods for SELECT attribute: StartOfNextHatchLine
	int sStartofnexthatchlineIfcpositivelengthmeasure = 2;

	int testStartofnexthatchline(EIfcfillareastylehatching type) throws SdaiException;

	EEntity getStartofnexthatchline(EIfcfillareastylehatching type) throws SdaiException; // case 1
	double getStartofnexthatchline(EIfcfillareastylehatching type, EIfcpositivelengthmeasure node1) throws SdaiException; // case 2

	void setStartofnexthatchline(EIfcfillareastylehatching type, EEntity value) throws SdaiException; // case 1
	void setStartofnexthatchline(EIfcfillareastylehatching type, double value, EIfcpositivelengthmeasure node1) throws SdaiException; // case 2

	void unsetStartofnexthatchline(EIfcfillareastylehatching type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:PointOfReferenceHatchLine, base type: entity IfcCartesianPoint
	public boolean testPointofreferencehatchline(EIfcfillareastylehatching type) throws SdaiException;
	public EIfccartesianpoint getPointofreferencehatchline(EIfcfillareastylehatching type) throws SdaiException;
	public void setPointofreferencehatchline(EIfcfillareastylehatching type, EIfccartesianpoint value) throws SdaiException;
	public void unsetPointofreferencehatchline(EIfcfillareastylehatching type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	// attribute:PatternStart, base type: entity IfcCartesianPoint
	public boolean testPatternstart(EIfcfillareastylehatching type) throws SdaiException;
	public EIfccartesianpoint getPatternstart(EIfcfillareastylehatching type) throws SdaiException;
	public void setPatternstart(EIfcfillareastylehatching type, EIfccartesianpoint value) throws SdaiException;
	public void unsetPatternstart(EIfcfillareastylehatching type) throws SdaiException;

	// generateExplicitAttributeMethodDeclarations: 1
	/// methods for attribute:HatchLineAngle, base type: REAL
	public boolean testHatchlineangle(EIfcfillareastylehatching type) throws SdaiException;
	public double getHatchlineangle(EIfcfillareastylehatching type) throws SdaiException;
	public void setHatchlineangle(EIfcfillareastylehatching type, double value) throws SdaiException;
	public void unsetHatchlineangle(EIfcfillareastylehatching type) throws SdaiException;

}
